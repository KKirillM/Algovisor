// Created by Microsoft (R) C/C++ Compiler Version 10.00.30319.01 (40479c0f).
//
// f:\c++ projects\cqg_server\cqg_server\cqg_server\cqgcel-4_0.tlh
//
// C++ source equivalent of Win32 type library C:\Program Files (x86)\CQG\CQG Trader\Bin\CQGCEL-4_0.dll
// compiler-generated file created 01/31/15 at 14:43:09 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("51f35562-aeb4-4ab3-99e8-ac9666344b64"))
/* LIBID */ __CQG;
enum eOrderExecutionInstruction;
enum eOrderTrailingPeg;
enum ePositionDetailing;
enum eManualFillsDataLevel;
enum eManualFillUpdateType;
enum ePriceMode;
struct __declspec(uuid("a17eb2fc-e18c-4922-a7c0-6b4c07902fd7"))
/* dispinterface */ _ICQGCELEvents;
enum eConnectionStatus;
struct __declspec(uuid("1dfcc4c4-86c4-4a9c-9c3a-2aba7653a0f9"))
/* dual interface */ ICQGInstrument;
enum eDataSubscriptionLevel;
struct __declspec(uuid("c8394a08-eac1-4902-aff5-186c5ea80603"))
/* dual interface */ ICQGCEL;
struct CQGCELConfiguration;
enum eTimeZone;
enum eLogSeverity;
enum eReadyStatusCheck;
enum eDOMUpdatesMode;
struct __declspec(uuid("cbfa3c2a-3548-4cb6-affd-e184f7b8bc01"))
/* dual interface */ ICQGAccounts;
struct __declspec(uuid("be8133a9-b6e7-4063-b84d-177341b5d7cd"))
/* dual interface */ ICQGAccount;
struct __declspec(uuid("43df66ea-d9bf-4092-aeb5-63a2be056108"))
/* dual interface */ ICQGAccountSummary;
struct __declspec(uuid("4c45599a-31a9-4e68-806d-23d58740e5e9"))
/* dual interface */ ICQGAccountSummaries;
struct __declspec(uuid("f73b036c-5c76-4768-913a-d7ebabadbe8d"))
/* dual interface */ ICQGPositions;
struct __declspec(uuid("c69174ac-49ed-4438-8cda-0b24fe015903"))
/* dual interface */ ICQGPosition;
enum eOrderSide;
struct __declspec(uuid("b8ef96e6-d604-4a9f-8c91-1550c1f3f4b9"))
/* dual interface */ ICQGTrades;
struct __declspec(uuid("25345894-ff06-45d0-a733-29efbd95fda0"))
/* dual interface */ ICQGTrade;
enum ePositionSubscriptionLevel;
struct __declspec(uuid("ce04ff2b-4819-4097-8c1b-d570b9ea7bde"))
/* dual interface */ ICQGOrders;
struct __declspec(uuid("22a4b3f8-ae16-44f0-9022-951fcb651615"))
/* dual interface */ ICQGOrder;
struct __declspec(uuid("e6517c29-498d-4845-a4c4-5dd076250069"))
/* dual interface */ ICQGOrderProperties;
enum eOrderProperty;
struct __declspec(uuid("0a4c05a0-107b-4a8b-9e34-44ed9b117a25"))
/* dual interface */ ICQGOrderProperty;
enum eOrderType;
enum eOrderStatus;
enum eOrderLocalState;
enum eOrderEvent;
enum eOrderDuration;
struct __declspec(uuid("57797e59-1b98-4206-936c-7caf3afe2c68"))
/* dual interface */ ICQGError;
struct __declspec(uuid("8d5ab4b6-b950-4f64-991c-2d2904bcad0a"))
/* dual interface */ ICQGFills;
struct __declspec(uuid("9cbc745e-6d81-4117-96fe-0e2cd4d29736"))
/* dual interface */ ICQGFill;
enum eFillStatus;
struct __declspec(uuid("e6c9418a-80fd-482f-a8e6-c660a335b599"))
/* dual interface */ ICQGGWTrades;
struct __declspec(uuid("bfe83cfe-32f9-4fdc-845e-b4cfb2c6fa5e"))
/* dual interface */ ICQGGWTrade;
struct __declspec(uuid("3f4f3a72-b53a-40b1-9a3b-4786b158f3fb"))
/* dual interface */ ICQGOrderModify;
struct __declspec(uuid("a65cfcd4-a281-47cf-ad6e-39dd5b86c504"))
/* dual interface */ ICQGTransactions;
struct __declspec(uuid("7e1289be-820e-4d2d-8b75-50a2316f8480"))
/* dual interface */ ICQGTransaction;
struct __declspec(uuid("17e30c78-4f87-4e3c-9653-9f44b07aaa69"))
/* dual interface */ ICQGModifiedProperties;
struct __declspec(uuid("7d1055d2-1b84-441d-81d0-f3ccf3c89d62"))
/* dual interface */ ICQGModifiedProperty;
struct __declspec(uuid("f01177e1-22ae-4d48-9787-c461eaefbeae"))
/* dual interface */ ICQGStringCollection;
struct __declspec(uuid("c33b2433-ecd1-410b-82cc-b3e7d4df78a1"))
/* dual interface */ ICQGStrategyLegFills;
struct __declspec(uuid("1a6d1420-be42-410e-8105-2bf326deb0b8"))
/* dual interface */ ICQGStrategyLegFill;
enum eOrderCancelationType;
enum eFcmClass;
enum eAccountMarginDetailing;
struct __declspec(uuid("e4d0409c-b915-442c-940c-ad1d023b826b"))
/* dual interface */ ICQGEnvironment;
struct __declspec(uuid("b94f3342-6795-4147-af03-4365723fcdba"))
/* dual interface */ ICQGRemoteOpenAPISession;
struct __declspec(uuid("b56ad9a8-680a-4d30-9a34-80534cc0ef3b"))
/* dual interface */ ICQGInstruments;
struct __declspec(uuid("d1c6eb96-0d1b-454f-8f4e-e6c7ea4ecffa"))
/* dual interface */ ICQGLogger;
enum eAccountSubscriptionLevel;
struct __declspec(uuid("0b5ed36d-c0cf-42a4-8b92-8bbca9c97ddc"))
/* dual interface */ ICQGCurrencyRates;
struct __declspec(uuid("0f5fbd5c-f5e6-421c-9ebd-732938099785"))
/* dual interface */ ICQGCurrencyRate;
struct __declspec(uuid("c3e14fea-ed20-478b-82f8-27cae61348fa"))
/* dual interface */ ICQGAPIConfig;
enum eDOMandBBAType;
enum eInstrumentType;
enum eOrderStatusFilter;
struct __declspec(uuid("01828f6e-4fd8-4156-80f3-8212b71ef585"))
/* dual interface */ ICQGOrdersQuery;
enum eRequestStatus;
struct __declspec(uuid("cb0bc66d-201c-4810-bea6-7e245438c81f"))
/* dual interface */ ICQGTicksRequest;
enum eTicksRequestType;
enum eTickFilter;
struct __declspec(uuid("122ab939-92e9-4c18-b765-b9a6f87e505d"))
/* dual interface */ ICQGTicks;
struct __declspec(uuid("7765940c-e370-42ad-a29d-3c0d5fb6d82d"))
/* dual interface */ ICQGTick;
enum eTickPriceType;
enum eTickCorrectionType;
enum eMarketState;
struct __declspec(uuid("7eef0951-36ab-48a4-b592-5240dd86dc3e"))
/* dual interface */ ICQGTicksCollection;
struct __declspec(uuid("49e2b82c-da28-4a43-9f7a-faee5008f8d3"))
/* dual interface */ ICQGTimedBarsRequest;
enum eHistoricalPeriod;
enum eTimeSeriesContinuationType;
enum eSessionFlag;
enum eTimedBarsRequestOutputs;
struct __declspec(uuid("e422a619-639b-4a2e-bf3b-e6d773e3310f"))
/* dual interface */ ICQGTimedBars;
struct __declspec(uuid("79582bfd-67a2-49cd-83a7-16206d22d67c"))
/* dual interface */ ICQGTimedBar;
struct __declspec(uuid("a4dc26d5-5f01-4642-ab4b-c1ca7b5bef9d"))
/* dual interface */ ICQGTimedBarsCollection;
struct __declspec(uuid("3640309b-e7f3-4d39-ad9d-c861e6dd9318"))
/* dual interface */ ICQGConstantVolumeBarsRequest;
enum eCvbVolumeType;
enum eTimeSeriesSubscriptionLevel;
struct __declspec(uuid("6c1d5c43-9a4f-441e-82d0-2f8ab9dadc09"))
/* dual interface */ ICQGConstantVolumeBars;
struct __declspec(uuid("39a768b2-d0ae-4f0c-adad-24436630a06e"))
/* dual interface */ ICQGConstantVolumeBar;
struct __declspec(uuid("89e06dc4-6f1c-4ff1-a43e-ed78254c4986"))
/* dual interface */ ICQGConstantVolumeBarsCollection;
struct __declspec(uuid("054f6b39-b5a2-46c8-a9c2-811ea8c09dbe"))
/* dual interface */ ICQGPointAndFigureBarsRequest;
enum ePfBoxUnits;
enum ePfDataSource;
struct __declspec(uuid("7f084615-edc8-419b-8345-cffe8a2d3f26"))
/* dual interface */ ICQGPointAndFigureBars;
struct __declspec(uuid("72648f32-5906-4c55-8167-fd6625af1c4b"))
/* dual interface */ ICQGPointAndFigureBar;
struct __declspec(uuid("07fe7b48-4539-40cf-a8a8-0630018a4cc2"))
/* dual interface */ ICQGPointAndFigureBarsCollection;
struct __declspec(uuid("259910e1-e37a-4ecb-850c-68d6fc6dcbee"))
/* dual interface */ ICQGYieldsRequest;
enum eYieldModel;
enum eYieldCompound;
struct __declspec(uuid("c2364bad-6909-481e-9dcd-7f3bab0a81c3"))
/* dual interface */ ICQGYields;
struct __declspec(uuid("2f4060e8-0667-4296-a90c-474085f37205"))
/* dual interface */ ICQGYield;
struct __declspec(uuid("bde68e30-6854-4d40-8154-9fa2f3f304db"))
/* dual interface */ ICQGYieldsCollection;
struct __declspec(uuid("9773c44a-3c4d-461b-b3d5-b7f38cfe3674"))
/* dual interface */ ICQGTFlowBarsRequest;
enum eTfAggregation;
enum eTFlowRequestDomVolumeLevel;
struct __declspec(uuid("9163df55-96ea-4810-8645-9b4ecd1f00d3"))
/* dual interface */ ICQGTFlowBars;
struct __declspec(uuid("bbd4681f-d945-43c4-9e01-9709c8f11481"))
/* dual interface */ ICQGTFlowBar;
struct __declspec(uuid("5170e441-609f-4137-8411-7265e34b0d81"))
/* dual interface */ ICQGTFlowBarsCollection;
struct __declspec(uuid("3ea4072d-7522-4a07-9362-9fb992da2b5c"))
/* dual interface */ ICQGCustomStudyRequest;
struct __declspec(uuid("7953dfa6-c66f-40ff-810d-21c96c0db6bd"))
/* dual interface */ ICQGCustomStudyDefinition;
struct __declspec(uuid("ee80a9c4-5ad4-40d5-b414-b9b343a97bf3"))
/* dual interface */ ICQGParameterDefinitions;
struct __declspec(uuid("aab46790-b322-4d6f-80e2-36ff0c1455d3"))
/* dual interface */ ICQGParameterDefinition;
enum eUserFormulaParameterType;
struct __declspec(uuid("3aea2907-6ac4-4ebc-ad03-18927f2da5b3"))
/* dual interface */ ICQGCurveDefinitions;
struct __declspec(uuid("7f6682e8-2e9d-401d-833f-238138b5d0c4"))
/* dual interface */ ICQGCurveDefinition;
struct __declspec(uuid("46e0172c-efdb-4f8d-bc46-0ff42b945ddd"))
/* dual interface */ ICQGCustomStudy;
struct __declspec(uuid("cfe5790c-5de3-4b49-8862-5e703ac02907"))
/* dual interface */ ICQGCurves;
struct __declspec(uuid("172a1395-9af6-489d-b53b-b9c10d497446"))
/* dual interface */ ICQGCurveHeaders;
struct __declspec(uuid("6f48eead-84ae-49d8-b4a3-6cc2db110a0c"))
/* dual interface */ ICQGCustomStudies;
struct __declspec(uuid("7ee99697-65af-476d-a8e5-918e844bdd26"))
/* dual interface */ ICQGConditionRequest;
struct __declspec(uuid("725e431c-4ec4-4aab-ada1-77a062057d06"))
/* dual interface */ ICQGConditionDefinition;
struct __declspec(uuid("74a3fdaf-a51b-4add-8554-07f4153427c2"))
/* dual interface */ ICQGCondition;
struct __declspec(uuid("589181b4-2fe0-4b8c-a99b-5cf8ff69d2fc"))
/* dual interface */ ICQGConditionResult;
struct __declspec(uuid("20257a63-6413-4da8-ad35-c899dc2ead07"))
/* dual interface */ ICQGConditions;
struct __declspec(uuid("e8060968-2966-4108-993c-62250f350a39"))
/* dual interface */ ICQGTradingSystemRequest;
struct __declspec(uuid("46238229-0e90-4da3-9681-98aa859dc291"))
/* dual interface */ ICQGTradingSystemDefinition;
struct __declspec(uuid("43287342-ffb5-44df-b4c6-462b4e8eec01"))
/* dual interface */ ICQGTradingSystemTradeDefinitions;
struct __declspec(uuid("b6886be5-df39-4313-9803-8dde384a066f"))
/* dual interface */ ICQGTradingSystemTradeDefinition;
enum eTradeSide;
struct __declspec(uuid("18b4acb8-879a-4ddb-a47c-bce672f6d7c2"))
/* dual interface */ ICQGTradeEntryDefinition;
struct __declspec(uuid("202a1020-7dc8-42f4-8bc5-baa498229a8e"))
/* dual interface */ ICQGTradeExitDefinitions;
struct __declspec(uuid("86fb7e25-f938-4314-93c0-f9aba4123de9"))
/* dual interface */ ICQGTradeExitDefinition;
enum eTradingSystemCommissionType;
enum eTradingSystemStatistic;
enum eTradingSystemBaseBar;
struct __declspec(uuid("98f80db3-1cb8-4263-be9e-72d079cd7fe5"))
/* dual interface */ ICQGTradingSystemBaseBarParameters;
enum eTradingSystemBaseBarParameter;
struct __declspec(uuid("454d9822-6533-4694-bf96-45c17937ba65"))
/* dual interface */ ICQGTradingSystemBaseBarParameter;
struct __declspec(uuid("cca000cb-e091-4340-a5d1-581f532a68d7"))
/* dual interface */ ICQGTradingSystem;
struct __declspec(uuid("5931a70e-1390-46de-81cb-9e4f338a98c6"))
/* dual interface */ ICQGTradingSystemTradesRows;
struct __declspec(uuid("f464ee0c-abf6-494d-8dc0-3b9d3270c836"))
/* dual interface */ ICQGTradingSystemTradesRow;
struct __declspec(uuid("18cdc805-a726-483b-9f68-da23774552ce"))
/* dual interface */ ICQGTradingSystemTrade;
struct __declspec(uuid("856ced98-8031-4a01-9be0-451f6f2775d2"))
/* dual interface */ ICQGTradeEntry;
struct __declspec(uuid("92253973-df60-4284-a9e2-623461c08126"))
/* dual interface */ ICQGTradeExits;
struct __declspec(uuid("320a9155-156e-4ce2-8b04-bc83119335b8"))
/* dual interface */ ICQGTradeExit;
struct __declspec(uuid("56870e6e-0747-4347-b8bc-0edefc8352f7"))
/* dual interface */ ICQGTradeEntries;
struct __declspec(uuid("f2f3d2e8-699c-477c-aff0-62d88627844f"))
/* dual interface */ ICQGTradingSystemStatisticsCollection;
struct __declspec(uuid("6e35395f-6a4f-452a-9f2c-8d686e7bc14f"))
/* dual interface */ ICQGTradingSystemStatistics;
struct __declspec(uuid("d0a441e8-f29b-43d4-9127-2f8f6643150c"))
/* dual interface */ ICQGTradingSystems;
struct __declspec(uuid("b9d1d6ce-2901-461a-9061-c3154d7c26a2"))
/* dual interface */ ICQGExpressionRequest;
struct __declspec(uuid("e2245d3c-06eb-4aee-bc87-8fada4d4b8fe"))
/* dual interface */ ICQGExpression;
struct __declspec(uuid("552ce101-6267-4ccb-95a7-fdf596dc1dea"))
/* dual interface */ ICQGExpressionOutputs;
struct __declspec(uuid("2b231d03-cb1e-4631-8d0e-c54f3c68aa0c"))
/* dual interface */ ICQGExpressionOutputHeaders;
struct __declspec(uuid("fa20dfaa-c6cd-4d9d-ab3c-43e6b35cf7a6"))
/* dual interface */ ICQGExpressions;
struct __declspec(uuid("66b04e87-816d-4efc-aa43-87e14716b43b"))
/* dual interface */ ICQGAlgorithmicOrderDefinitions;
struct __declspec(uuid("f2b0fbfe-3db2-45e1-aa63-18d059818f84"))
/* dual interface */ ICQGAlgorithmicOrderDefinition;
enum eAlgorithmicOrderPropertyType;
struct __declspec(uuid("b6e84aaa-d906-44aa-9bf1-96bb1a042b91"))
/* dual interface */ ICQGDirectEventsAccessor;
struct __declspec(uuid("c5cddf7e-8454-40b5-97a2-a5cfdececc7f"))
/* dual interface */ ICQGInstrumentsGroupRequest;
enum eGroupSubscriptionLevel;
struct __declspec(uuid("ffd6bcf9-286d-4204-9382-9f0fec4527a7"))
/* dual interface */ ICQGInstrumentsGroup;
struct __declspec(uuid("4a58d6c2-fbd6-441c-8108-b21ef3e99ef7"))
/* dual interface */ ICQGInstrumentsGroups;
struct __declspec(uuid("2a11e86f-5ec5-4226-9dbb-52aac1fba6ba"))
/* dual interface */ ICQGBarsTimestamps;
struct __declspec(uuid("941d0e9e-76df-4cfb-8b8d-e0f480e2e5cb"))
/* dual interface */ ICQGStrategyDefinition;
enum eStrategyRequestStatus;
struct __declspec(uuid("aedd0358-778e-489c-912b-568235a22399"))
/* dual interface */ ICQGStrategyDefinitions;
struct __declspec(uuid("13a8d517-7bd3-4627-abb2-65f3139cbea5"))
/* dual interface */ ICQGExecutionPattern;
struct __declspec(uuid("171b015c-a9fa-4a35-8964-e32806c23020"))
/* dual interface */ ICQGExecutionPatternParameters;
struct __declspec(uuid("d79963ca-c026-47f7-ab35-3cb89c54597c"))
/* dual interface */ ICQGExecutionPatternParameter;
enum eExecutionPatternParameterType;
struct __declspec(uuid("69ebc08b-0d8c-49b6-a7d4-256bd49f0ac7"))
/* dual interface */ ICQGHistoricalSessionsRequest;
enum eHistoricalSessionsRequestType;
struct __declspec(uuid("ffd01208-d950-4242-8e5c-cead1124af63"))
/* dual interface */ ICQGManualFill;
struct __declspec(uuid("778f386e-cdc2-4e63-9e78-c809c5db6044"))
/* dual interface */ ICQGManualFillRequest;
struct __declspec(uuid("416b7334-2625-49bd-8825-52945119a384"))
/* dual interface */ ICQGManualFillsCollection;
struct __declspec(uuid("0d916e96-72c7-41d1-852a-1396b6031aff"))
/* dual interface */ ICQGManualFills;
struct __declspec(uuid("75e3c004-31ef-4780-a8b5-cc2bde903ab6"))
/* dual interface */ ICQGInstrumentSubscriptionRequest;
enum eQuoteSubscriptionLevel;
enum ePropertySubscriptionLevel;
struct __declspec(uuid("7a55585b-9d0a-4a53-9cb6-fb7cee5398ce"))
/* dual interface */ ICQGOrderChain;
struct __declspec(uuid("45391992-63ea-4251-b0f1-dc7b60503575"))
/* dual interface */ ICQGOrderActionRequest;
struct __declspec(uuid("a40716a6-5f5d-4bec-96ed-f72d2f77fb46"))
/* dual interface */ ICQGQuote;
enum eQuoteType;
struct __declspec(uuid("7e1318d2-da8e-4106-8158-ae3829fb36e6"))
/* dual interface */ ICQGQuotes;
struct __declspec(uuid("fa7441bd-4ee8-4bb2-89d8-c86a2f098b48"))
/* dual interface */ ICQGInstrumentProperties;
enum eInstrumentProperty;
struct __declspec(uuid("4d4de503-a9d9-44a6-b50c-cc435d3eda23"))
/* dual interface */ ICQGInstrumentProperty;
struct __declspec(uuid("756fe037-bdbe-4cd2-95b5-0e4132e332c8"))
/* dual interface */ ICQGDOMQuotes;
struct __declspec(uuid("ef21e9b9-e8ff-4940-86d9-e68b26325e35"))
/* dual interface */ ICQGSessions;
struct __declspec(uuid("a8c92de2-8dc4-4859-800a-ad5b2b6d1bac"))
/* dual interface */ ICQGSession;
enum eSessionWeekDays;
enum eSymbolSessionType;
struct __declspec(uuid("0abb2165-cbfc-4954-9b05-9922ddea5bd4"))
/* dual interface */ ICQGHolidays;
struct __declspec(uuid("6d8ede4a-5e79-4d5c-a926-efd29c742d29"))
/* dual interface */ ICQGHoliday;
enum eAccountChangeType;
enum eReadyStatus;
struct __declspec(uuid("c1c22a85-589a-414d-87d8-35936103c270"))
/* dual interface */ ICQGCommodityInstruments;
enum eGWEnvChangeCode;
enum eChangeType;
struct __declspec(uuid("13d2c727-634f-4f12-a5a2-afde11ac69b9"))
/* dual interface */ ICQGDataSources;
struct __declspec(uuid("9b11a072-177c-4695-aa88-45bb223c4ffc"))
/* dual interface */ ICQGDataSource;
enum eSymbolType;
enum eDataSourceStatus;
struct __declspec(uuid("8f94f6e6-0462-4fa8-8974-295924d90b41"))
/* dual interface */ ICQGDataSourceSymbols;
struct __declspec(uuid("9795abe6-5986-4413-b117-1046667e5919"))
/* dual interface */ ICQGDataSourceSymbol;
struct __declspec(uuid("e6cc5c7a-85ce-41c1-8afb-03b286e8e659"))
/* dual interface */ ICQGSessionsCollection;
struct __declspec(uuid("ee5380e3-0249-4e97-ab30-4516775d7064"))
/* dual interface */ ICQGCommodities;
struct __declspec(uuid("76e52203-e044-40da-8723-ad0234134df7"))
/* dual interface */ ICQGCustomStudyDefinitions;
struct __declspec(uuid("8a469a57-1be9-47c6-b9d7-475405121d16"))
/* dual interface */ ICQGTradingSystemDefinitions;
struct __declspec(uuid("5e76a014-779a-4c96-a80b-e24a28f266d3"))
/* dual interface */ ICQGConditionDefinitions;
struct __declspec(uuid("ef7337eb-bfe0-482b-aa22-d7b691e01564"))
/* dual interface */ ICQGQFormulaDefinitions;
struct __declspec(uuid("06352951-9b69-464f-9526-65c06b0ec37e"))
/* dual interface */ ICQGQFormulaDefinition;
struct __declspec(uuid("d48e0b68-0e13-4ad8-9392-efc526be036d"))
/* dual interface */ ICQGTradingSystemAddInfo;
struct __declspec(uuid("c75397c9-146e-4d1c-b113-08a42d260585"))
/* dual interface */ ICQGTradingSystemUpdateInfo;
enum eTradeChangeCategory;
struct __declspec(uuid("b6a7d177-86d9-42a8-8b88-947f208d824e"))
/* dual interface */ ICQGChangedTradeEntries;
struct __declspec(uuid("72232252-3fe5-486b-9f64-6fdeb2d43903"))
/* dual interface */ ICQGChangedTradeEntry;
struct __declspec(uuid("89aeaa0f-54fa-4f00-83a6-b5166d4bc910"))
/* dual interface */ ICQGChangedTradeExits;
struct __declspec(uuid("6fd2b251-791c-43ab-a44b-b17a93caaeff"))
/* dual interface */ ICQGChangedTradeExit;
struct __declspec(uuid("89cee83e-0c19-4027-8226-49a666ac643e"))
/* dual interface */ ICQGTradingSystemStatisticsChangeInfo;
struct __declspec(uuid("f1d1ec65-730c-4c76-a90e-30dd5e336dcf"))
/* dual interface */ ICQGAlgorithmicOrderParameters;
struct __declspec(uuid("1f8d3d22-3f06-411e-9572-2434f9506a26"))
/* dual interface */ ICQGAlgorithmicOrderProperties;
struct __declspec(uuid("ed42fc70-34a5-494a-9355-fd094a6b9155"))
/* dual interface */ ICQGAlgorithmicOrderProperty;
enum eICConnectionStatus;
enum eOrderSideFilter;
struct __declspec(uuid("783d500d-7201-4d05-8831-35aa7c013632"))
/* dual interface */ ICQGIntegerCollection;
struct __declspec(uuid("1b9354c5-81fd-497a-ab6a-d6e969c8d99a"))
/* dual interface */ ICQGTradingSystemInsertInfo;
struct __declspec(uuid("fc58ae71-5818-4381-95ae-30f1af03ec0c"))
/* dual interface */ ICQGTradingSystemRemoveInfo;
struct __declspec(uuid("1079ae13-4ee1-4542-9ad0-4fa23292a738"))
/* dual interface */ ICQGTradingSystemRelationAddInfo;
struct __declspec(uuid("65336902-f728-428e-b63a-f8221a17a3d2"))
/* dual interface */ ICQGExchanges;
struct __declspec(uuid("fe914ff5-433c-4c39-86f5-bad687c50fee"))
/* dual interface */ ICQGSummariesStatement;
struct __declspec(uuid("bb2a3db5-95fd-4dff-8eef-088402dae965"))
/* dual interface */ ICQGPositionsStatement;
enum eSessionStatus;
struct /* coclass */ CQGCEL;
struct /* coclass */ CQGAPIConfig;
struct /* coclass */ CQGStringCollection;
struct /* coclass */ CQGAccount;
struct /* coclass */ CQGAccounts;
struct /* coclass */ CQGCurrencyRate;
struct /* coclass */ CQGCurrencyRates;
struct /* coclass */ CQGEnvironment;
struct /* coclass */ CQGOrder;
struct /* coclass */ CQGOrders;
struct /* coclass */ CQGInstrument;
struct /* coclass */ CQGPosition;
struct /* coclass */ CQGPositions;
struct /* coclass */ CQGDirectEventsAccessor;
struct __declspec(uuid("af3d6f55-77b3-4468-9270-3752207e4619"))
/* interface */ _ICQGCELInstrumentEvents;
struct __declspec(uuid("5fafc409-52ef-4885-85be-ac9d072d61df"))
/* interface */ _ICQGCELGeneralEvents;
struct /* coclass */ CQGError;
struct /* coclass */ CQGSummariesStatement;
struct /* coclass */ CQGPositionsStatement;
struct /* coclass */ CQGLogger;
struct /* coclass */ CQGInstruments;
struct /* coclass */ CQGTick;
struct /* coclass */ CQGTicks;
struct /* coclass */ CQGTicksCollection;
struct /* coclass */ CQGTimedBar;
struct /* coclass */ CQGTimedBarsRequest;
struct /* coclass */ CQGTimedBars;
struct /* coclass */ CQGTimedBarsCollection;
struct /* coclass */ CQGConstantVolumeBar;
struct /* coclass */ CQGConstantVolumeBarsRequest;
struct /* coclass */ CQGConstantVolumeBars;
struct /* coclass */ CQGConstantVolumeBarsCollection;
struct /* coclass */ CQGTFlowBar;
struct /* coclass */ CQGTFlowBarsRequest;
struct /* coclass */ CQGTFlowBars;
struct /* coclass */ CQGTFlowBarsCollection;
struct /* coclass */ CQGYield;
struct /* coclass */ CQGYieldsRequest;
struct /* coclass */ CQGYields;
struct /* coclass */ CQGYieldsCollection;
struct /* coclass */ CQGPointAndFigureBar;
struct /* coclass */ CQGPointAndFigureBarsRequest;
struct /* coclass */ CQGPointAndFigureBars;
struct /* coclass */ CQGPointAndFigureBarsCollection;
struct /* coclass */ CQGCurveHeaders;
struct /* coclass */ CQGCurves;
struct /* coclass */ CQGCustomStudy;
struct /* coclass */ CQGCustomStudies;
struct /* coclass */ CQGConditionResult;
struct /* coclass */ CQGCondition;
struct /* coclass */ CQGConditions;
struct /* coclass */ CQGOrdersQuery;
struct /* coclass */ CQGFill;
struct /* coclass */ CQGOrderProperty;
struct /* coclass */ CQGOrderProperties;
struct /* coclass */ CQGOrderStatistics;
struct __declspec(uuid("8d1ae1ab-3ad1-45cf-9aa9-8bf73ceda18a"))
/* interface */ ICQGOrderStatistics;
struct /* coclass */ CQGInstrumentsGroup;
struct /* coclass */ CQGRemoteOpenAPISession;
struct /* coclass */ CQGQuote;
struct /* coclass */ CQGQuotes;
struct /* coclass */ CQGInstrumentProperty;
struct /* coclass */ CQGInstrumentProperties;
struct /* coclass */ CQGDOMQuotes;
struct /* coclass */ CQGCommodities;
struct /* coclass */ CQGExchanges;
struct /* coclass */ CQGCommodityInstruments;
struct /* coclass */ CQGInstrumentSubscriptionRequest;
struct /* coclass */ CQGSession;
struct /* coclass */ CQGSessions;
struct /* coclass */ CQGTrade;
struct /* coclass */ CQGTrades;
struct /* coclass */ CQGAlgorithmicOrderDefinition;
struct /* coclass */ CQGAlgorithmicOrderDefinitions;
struct /* coclass */ CQGAlgorithmicOrderParameters;
struct /* coclass */ CQGAlgorithmicOrderProperty;
struct /* coclass */ CQGAlgorithmicOrderProperties;
struct /* coclass */ CQGIntegerCollection;
struct /* coclass */ CQGStrategyDefinition;
struct /* coclass */ CQGStrategyDefinitions;
struct /* coclass */ CQGExecutionPattern;
struct /* coclass */ CQGOrderChain;
struct /* coclass */ CQGOrderActionRequest;
struct /* coclass */ CQGGWTrade;
struct /* coclass */ CQGGWTrades;
struct /* coclass */ CQGFills;
struct /* coclass */ CQGModifiedProperty;
struct /* coclass */ CQGModifiedProperties;
struct /* coclass */ CQGOrderModify;
struct /* coclass */ CQGTransaction;
struct /* coclass */ CQGTransactions;
struct /* coclass */ CQGStrategyLegFill;
struct /* coclass */ CQGStrategyLegFills;
struct /* coclass */ CQGExecutionPatternParameter;
struct /* coclass */ CQGExecutionPatternParameters;
struct /* coclass */ CQGCustomStudyDefinition;
struct /* coclass */ CQGCustomStudyDefinitions;
struct /* coclass */ CQGTradingSystemDefinition;
struct /* coclass */ CQGTradingSystemDefinitions;
struct /* coclass */ CQGConditionDefinition;
struct /* coclass */ CQGConditionDefinitions;
struct /* coclass */ CQGQFormulaDefinition;
struct /* coclass */ CQGQFormulaDefinitions;
struct /* coclass */ CQGParameterDefinition;
struct /* coclass */ CQGParameterDefinitions;
struct /* coclass */ CQGTradingSystem;
struct /* coclass */ CQGTradingSystems;
struct /* coclass */ CQGTradingSystemAddInfo;
struct /* coclass */ CQGTradingSystemUpdateInfo;
struct /* coclass */ CQGTradingSystemInsertInfo;
struct /* coclass */ CQGTradingSystemRemoveInfo;
struct /* coclass */ CQGTradingSystemRelationAddInfo;
struct /* coclass */ CQGTradingSystemRequest;
struct /* coclass */ CQGChangedTradeEntry;
struct /* coclass */ CQGChangedTradeEntries;
struct /* coclass */ CQGTradeEntry;
struct /* coclass */ CQGChangedTradeExit;
struct /* coclass */ CQGTradeExit;
struct /* coclass */ CQGChangedTradeExits;
struct /* coclass */ CQGTradeEntries;
struct /* coclass */ CQGTradeExits;
struct /* coclass */ CQGTradeEntryDefinition;
struct /* coclass */ CQGTradingSystemTradeDefinition;
struct /* coclass */ CQGTradingSystemTrade;
struct /* coclass */ CQGTradeExitDefinition;
struct /* coclass */ CQGTradingSystemTradesRow;
struct /* coclass */ CQGTradingSystemTradesRows;
struct /* coclass */ CQGTradingSystemStatistics;
struct /* coclass */ CQGTradingSystemStatisticsCollection;
struct /* coclass */ CQGTradingSystemBaseBarParameter;
struct /* coclass */ CQGTradingSystemBaseBarParameters;
struct /* coclass */ CQGTradingSystemStatisticsChangeInfo;
struct /* coclass */ CQGTradeExitDefinitions;
struct /* coclass */ CQGTradingSystemTradeDefinitions;
struct /* coclass */ CQGCustomStudyRequest;
struct /* coclass */ CQGCurveDefinition;
struct /* coclass */ CQGCurveDefinitions;
struct /* coclass */ CQGConditionRequest;
struct /* coclass */ CQGDataSource;
struct /* coclass */ CQGDataSources;
struct /* coclass */ CQGDataSourceSymbol;
struct /* coclass */ CQGDataSourceSymbols;
struct /* coclass */ CQGSessionsCollection;
struct /* coclass */ CQGHistoricalSessionsRequest;
struct /* coclass */ CQGHoliday;
struct /* coclass */ CQGHolidays;
struct /* coclass */ CQGAccountSummary;
struct /* coclass */ CQGAccountSummaries;
struct /* coclass */ CQGTicksRequest;
struct /* coclass */ CQGBarsTimestamps;
struct /* coclass */ CQGExpressionOutputs;
struct /* coclass */ CQGExpression;
struct /* coclass */ CQGExpressions;
struct /* coclass */ CQGExpressionRequest;
struct /* coclass */ CQGExpressionOutputHeaders;
struct /* coclass */ CQGInstrumentsGroupRequest;
struct /* coclass */ CQGInstrumentsGroups;
struct /* coclass */ CQGManualFill;
struct /* coclass */ CQGManualFills;
struct /* coclass */ CQGManualFillsCollection;
struct /* coclass */ CQGManualFillRequest;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(_ICQGCELEvents, __uuidof(_ICQGCELEvents));
_COM_SMARTPTR_TYPEDEF(ICQGTrade, __uuidof(ICQGTrade));
_COM_SMARTPTR_TYPEDEF(ICQGTrades, __uuidof(ICQGTrades));
_COM_SMARTPTR_TYPEDEF(ICQGError, __uuidof(ICQGError));
_COM_SMARTPTR_TYPEDEF(ICQGModifiedProperty, __uuidof(ICQGModifiedProperty));
_COM_SMARTPTR_TYPEDEF(ICQGModifiedProperties, __uuidof(ICQGModifiedProperties));
_COM_SMARTPTR_TYPEDEF(ICQGStringCollection, __uuidof(ICQGStringCollection));
_COM_SMARTPTR_TYPEDEF(ICQGRemoteOpenAPISession, __uuidof(ICQGRemoteOpenAPISession));
_COM_SMARTPTR_TYPEDEF(ICQGAPIConfig, __uuidof(ICQGAPIConfig));
_COM_SMARTPTR_TYPEDEF(ICQGTicksRequest, __uuidof(ICQGTicksRequest));
_COM_SMARTPTR_TYPEDEF(ICQGTick, __uuidof(ICQGTick));
_COM_SMARTPTR_TYPEDEF(ICQGTicks, __uuidof(ICQGTicks));
_COM_SMARTPTR_TYPEDEF(ICQGTicksCollection, __uuidof(ICQGTicksCollection));
_COM_SMARTPTR_TYPEDEF(ICQGTimedBarsRequest, __uuidof(ICQGTimedBarsRequest));
_COM_SMARTPTR_TYPEDEF(ICQGTimedBar, __uuidof(ICQGTimedBar));
_COM_SMARTPTR_TYPEDEF(ICQGTimedBars, __uuidof(ICQGTimedBars));
_COM_SMARTPTR_TYPEDEF(ICQGTimedBarsCollection, __uuidof(ICQGTimedBarsCollection));
_COM_SMARTPTR_TYPEDEF(ICQGConstantVolumeBarsRequest, __uuidof(ICQGConstantVolumeBarsRequest));
_COM_SMARTPTR_TYPEDEF(ICQGConstantVolumeBar, __uuidof(ICQGConstantVolumeBar));
_COM_SMARTPTR_TYPEDEF(ICQGConstantVolumeBars, __uuidof(ICQGConstantVolumeBars));
_COM_SMARTPTR_TYPEDEF(ICQGConstantVolumeBarsCollection, __uuidof(ICQGConstantVolumeBarsCollection));
_COM_SMARTPTR_TYPEDEF(ICQGPointAndFigureBarsRequest, __uuidof(ICQGPointAndFigureBarsRequest));
_COM_SMARTPTR_TYPEDEF(ICQGPointAndFigureBar, __uuidof(ICQGPointAndFigureBar));
_COM_SMARTPTR_TYPEDEF(ICQGPointAndFigureBars, __uuidof(ICQGPointAndFigureBars));
_COM_SMARTPTR_TYPEDEF(ICQGPointAndFigureBarsCollection, __uuidof(ICQGPointAndFigureBarsCollection));
_COM_SMARTPTR_TYPEDEF(ICQGYieldsRequest, __uuidof(ICQGYieldsRequest));
_COM_SMARTPTR_TYPEDEF(ICQGYield, __uuidof(ICQGYield));
_COM_SMARTPTR_TYPEDEF(ICQGYields, __uuidof(ICQGYields));
_COM_SMARTPTR_TYPEDEF(ICQGYieldsCollection, __uuidof(ICQGYieldsCollection));
_COM_SMARTPTR_TYPEDEF(ICQGTFlowBarsRequest, __uuidof(ICQGTFlowBarsRequest));
_COM_SMARTPTR_TYPEDEF(ICQGTFlowBar, __uuidof(ICQGTFlowBar));
_COM_SMARTPTR_TYPEDEF(ICQGTFlowBars, __uuidof(ICQGTFlowBars));
_COM_SMARTPTR_TYPEDEF(ICQGTFlowBarsCollection, __uuidof(ICQGTFlowBarsCollection));
_COM_SMARTPTR_TYPEDEF(ICQGParameterDefinition, __uuidof(ICQGParameterDefinition));
_COM_SMARTPTR_TYPEDEF(ICQGParameterDefinitions, __uuidof(ICQGParameterDefinitions));
_COM_SMARTPTR_TYPEDEF(ICQGCurveDefinition, __uuidof(ICQGCurveDefinition));
_COM_SMARTPTR_TYPEDEF(ICQGCurveDefinitions, __uuidof(ICQGCurveDefinitions));
_COM_SMARTPTR_TYPEDEF(ICQGCustomStudyDefinition, __uuidof(ICQGCustomStudyDefinition));
_COM_SMARTPTR_TYPEDEF(ICQGCustomStudyRequest, __uuidof(ICQGCustomStudyRequest));
_COM_SMARTPTR_TYPEDEF(ICQGCurves, __uuidof(ICQGCurves));
_COM_SMARTPTR_TYPEDEF(ICQGCurveHeaders, __uuidof(ICQGCurveHeaders));
_COM_SMARTPTR_TYPEDEF(ICQGCustomStudy, __uuidof(ICQGCustomStudy));
_COM_SMARTPTR_TYPEDEF(ICQGCustomStudies, __uuidof(ICQGCustomStudies));
_COM_SMARTPTR_TYPEDEF(ICQGConditionDefinition, __uuidof(ICQGConditionDefinition));
_COM_SMARTPTR_TYPEDEF(ICQGConditionRequest, __uuidof(ICQGConditionRequest));
_COM_SMARTPTR_TYPEDEF(ICQGConditionResult, __uuidof(ICQGConditionResult));
_COM_SMARTPTR_TYPEDEF(ICQGCondition, __uuidof(ICQGCondition));
_COM_SMARTPTR_TYPEDEF(ICQGConditions, __uuidof(ICQGConditions));
_COM_SMARTPTR_TYPEDEF(ICQGTradeEntryDefinition, __uuidof(ICQGTradeEntryDefinition));
_COM_SMARTPTR_TYPEDEF(ICQGTradeExitDefinition, __uuidof(ICQGTradeExitDefinition));
_COM_SMARTPTR_TYPEDEF(ICQGTradeExitDefinitions, __uuidof(ICQGTradeExitDefinitions));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemTradeDefinition, __uuidof(ICQGTradingSystemTradeDefinition));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemTradeDefinitions, __uuidof(ICQGTradingSystemTradeDefinitions));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemDefinition, __uuidof(ICQGTradingSystemDefinition));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemBaseBarParameter, __uuidof(ICQGTradingSystemBaseBarParameter));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemBaseBarParameters, __uuidof(ICQGTradingSystemBaseBarParameters));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemRequest, __uuidof(ICQGTradingSystemRequest));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemStatistics, __uuidof(ICQGTradingSystemStatistics));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemStatisticsCollection, __uuidof(ICQGTradingSystemStatisticsCollection));
_COM_SMARTPTR_TYPEDEF(ICQGExpressionRequest, __uuidof(ICQGExpressionRequest));
_COM_SMARTPTR_TYPEDEF(ICQGExpressionOutputs, __uuidof(ICQGExpressionOutputs));
_COM_SMARTPTR_TYPEDEF(ICQGExpressionOutputHeaders, __uuidof(ICQGExpressionOutputHeaders));
_COM_SMARTPTR_TYPEDEF(ICQGExpression, __uuidof(ICQGExpression));
_COM_SMARTPTR_TYPEDEF(ICQGExpressions, __uuidof(ICQGExpressions));
_COM_SMARTPTR_TYPEDEF(ICQGAlgorithmicOrderDefinition, __uuidof(ICQGAlgorithmicOrderDefinition));
_COM_SMARTPTR_TYPEDEF(ICQGAlgorithmicOrderDefinitions, __uuidof(ICQGAlgorithmicOrderDefinitions));
_COM_SMARTPTR_TYPEDEF(ICQGDirectEventsAccessor, __uuidof(ICQGDirectEventsAccessor));
_COM_SMARTPTR_TYPEDEF(ICQGInstrumentsGroupRequest, __uuidof(ICQGInstrumentsGroupRequest));
_COM_SMARTPTR_TYPEDEF(ICQGBarsTimestamps, __uuidof(ICQGBarsTimestamps));
_COM_SMARTPTR_TYPEDEF(ICQGStrategyDefinition, __uuidof(ICQGStrategyDefinition));
_COM_SMARTPTR_TYPEDEF(ICQGStrategyDefinitions, __uuidof(ICQGStrategyDefinitions));
_COM_SMARTPTR_TYPEDEF(ICQGHistoricalSessionsRequest, __uuidof(ICQGHistoricalSessionsRequest));
_COM_SMARTPTR_TYPEDEF(ICQGManualFill, __uuidof(ICQGManualFill));
_COM_SMARTPTR_TYPEDEF(ICQGManualFillRequest, __uuidof(ICQGManualFillRequest));
_COM_SMARTPTR_TYPEDEF(ICQGManualFills, __uuidof(ICQGManualFills));
_COM_SMARTPTR_TYPEDEF(ICQGManualFillsCollection, __uuidof(ICQGManualFillsCollection));
_COM_SMARTPTR_TYPEDEF(ICQGInstrumentSubscriptionRequest, __uuidof(ICQGInstrumentSubscriptionRequest));
_COM_SMARTPTR_TYPEDEF(ICQGHoliday, __uuidof(ICQGHoliday));
_COM_SMARTPTR_TYPEDEF(ICQGCommodityInstruments, __uuidof(ICQGCommodityInstruments));
_COM_SMARTPTR_TYPEDEF(ICQGDataSource, __uuidof(ICQGDataSource));
_COM_SMARTPTR_TYPEDEF(ICQGDataSources, __uuidof(ICQGDataSources));
_COM_SMARTPTR_TYPEDEF(ICQGDataSourceSymbol, __uuidof(ICQGDataSourceSymbol));
_COM_SMARTPTR_TYPEDEF(ICQGDataSourceSymbols, __uuidof(ICQGDataSourceSymbols));
_COM_SMARTPTR_TYPEDEF(ICQGCommodities, __uuidof(ICQGCommodities));
_COM_SMARTPTR_TYPEDEF(ICQGCustomStudyDefinitions, __uuidof(ICQGCustomStudyDefinitions));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemDefinitions, __uuidof(ICQGTradingSystemDefinitions));
_COM_SMARTPTR_TYPEDEF(ICQGConditionDefinitions, __uuidof(ICQGConditionDefinitions));
_COM_SMARTPTR_TYPEDEF(ICQGQFormulaDefinition, __uuidof(ICQGQFormulaDefinition));
_COM_SMARTPTR_TYPEDEF(ICQGQFormulaDefinitions, __uuidof(ICQGQFormulaDefinitions));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemAddInfo, __uuidof(ICQGTradingSystemAddInfo));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemStatisticsChangeInfo, __uuidof(ICQGTradingSystemStatisticsChangeInfo));
_COM_SMARTPTR_TYPEDEF(ICQGAlgorithmicOrderParameters, __uuidof(ICQGAlgorithmicOrderParameters));
_COM_SMARTPTR_TYPEDEF(ICQGAlgorithmicOrderProperty, __uuidof(ICQGAlgorithmicOrderProperty));
_COM_SMARTPTR_TYPEDEF(ICQGAlgorithmicOrderProperties, __uuidof(ICQGAlgorithmicOrderProperties));
_COM_SMARTPTR_TYPEDEF(ICQGIntegerCollection, __uuidof(ICQGIntegerCollection));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemInsertInfo, __uuidof(ICQGTradingSystemInsertInfo));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemRemoveInfo, __uuidof(ICQGTradingSystemRemoveInfo));
_COM_SMARTPTR_TYPEDEF(ICQGExchanges, __uuidof(ICQGExchanges));
_COM_SMARTPTR_TYPEDEF(ICQGOrderStatistics, __uuidof(ICQGOrderStatistics));
_COM_SMARTPTR_TYPEDEF(ICQGInstrument, __uuidof(ICQGInstrument));
_COM_SMARTPTR_TYPEDEF(ICQGInstruments, __uuidof(ICQGInstruments));
_COM_SMARTPTR_TYPEDEF(ICQGInstrumentsGroup, __uuidof(ICQGInstrumentsGroup));
_COM_SMARTPTR_TYPEDEF(ICQGInstrumentsGroups, __uuidof(ICQGInstrumentsGroups));
_COM_SMARTPTR_TYPEDEF(ICQGQuote, __uuidof(ICQGQuote));
_COM_SMARTPTR_TYPEDEF(ICQGQuotes, __uuidof(ICQGQuotes));
_COM_SMARTPTR_TYPEDEF(ICQGInstrumentProperty, __uuidof(ICQGInstrumentProperty));
_COM_SMARTPTR_TYPEDEF(ICQGInstrumentProperties, __uuidof(ICQGInstrumentProperties));
_COM_SMARTPTR_TYPEDEF(ICQGDOMQuotes, __uuidof(ICQGDOMQuotes));
_COM_SMARTPTR_TYPEDEF(ICQGSession, __uuidof(ICQGSession));
_COM_SMARTPTR_TYPEDEF(_ICQGCELInstrumentEvents, __uuidof(_ICQGCELInstrumentEvents));
_COM_SMARTPTR_TYPEDEF(ICQGCEL, __uuidof(ICQGCEL));
_COM_SMARTPTR_TYPEDEF(ICQGEnvironment, __uuidof(ICQGEnvironment));
_COM_SMARTPTR_TYPEDEF(ICQGLogger, __uuidof(ICQGLogger));
_COM_SMARTPTR_TYPEDEF(ICQGCurrencyRate, __uuidof(ICQGCurrencyRate));
_COM_SMARTPTR_TYPEDEF(ICQGCurrencyRates, __uuidof(ICQGCurrencyRates));
_COM_SMARTPTR_TYPEDEF(_ICQGCELGeneralEvents, __uuidof(_ICQGCELGeneralEvents));
_COM_SMARTPTR_TYPEDEF(ICQGAccounts, __uuidof(ICQGAccounts));
_COM_SMARTPTR_TYPEDEF(ICQGAccount, __uuidof(ICQGAccount));
_COM_SMARTPTR_TYPEDEF(ICQGAccountSummary, __uuidof(ICQGAccountSummary));
_COM_SMARTPTR_TYPEDEF(ICQGAccountSummaries, __uuidof(ICQGAccountSummaries));
_COM_SMARTPTR_TYPEDEF(ICQGPosition, __uuidof(ICQGPosition));
_COM_SMARTPTR_TYPEDEF(ICQGPositions, __uuidof(ICQGPositions));
_COM_SMARTPTR_TYPEDEF(ICQGOrderActionRequest, __uuidof(ICQGOrderActionRequest));
_COM_SMARTPTR_TYPEDEF(ICQGSummariesStatement, __uuidof(ICQGSummariesStatement));
_COM_SMARTPTR_TYPEDEF(ICQGPositionsStatement, __uuidof(ICQGPositionsStatement));
_COM_SMARTPTR_TYPEDEF(ICQGOrders, __uuidof(ICQGOrders));
_COM_SMARTPTR_TYPEDEF(ICQGOrdersQuery, __uuidof(ICQGOrdersQuery));
_COM_SMARTPTR_TYPEDEF(ICQGOrder, __uuidof(ICQGOrder));
_COM_SMARTPTR_TYPEDEF(ICQGOrderProperty, __uuidof(ICQGOrderProperty));
_COM_SMARTPTR_TYPEDEF(ICQGOrderProperties, __uuidof(ICQGOrderProperties));
_COM_SMARTPTR_TYPEDEF(ICQGOrderModify, __uuidof(ICQGOrderModify));
_COM_SMARTPTR_TYPEDEF(ICQGStrategyLegFill, __uuidof(ICQGStrategyLegFill));
_COM_SMARTPTR_TYPEDEF(ICQGStrategyLegFills, __uuidof(ICQGStrategyLegFills));
_COM_SMARTPTR_TYPEDEF(ICQGOrderChain, __uuidof(ICQGOrderChain));
_COM_SMARTPTR_TYPEDEF(ICQGFills, __uuidof(ICQGFills));
_COM_SMARTPTR_TYPEDEF(ICQGFill, __uuidof(ICQGFill));
_COM_SMARTPTR_TYPEDEF(ICQGGWTrade, __uuidof(ICQGGWTrade));
_COM_SMARTPTR_TYPEDEF(ICQGGWTrades, __uuidof(ICQGGWTrades));
_COM_SMARTPTR_TYPEDEF(ICQGTransaction, __uuidof(ICQGTransaction));
_COM_SMARTPTR_TYPEDEF(ICQGTransactions, __uuidof(ICQGTransactions));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystem, __uuidof(ICQGTradingSystem));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystems, __uuidof(ICQGTradingSystems));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemTradesRows, __uuidof(ICQGTradingSystemTradesRows));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemTradesRow, __uuidof(ICQGTradingSystemTradesRow));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemTrade, __uuidof(ICQGTradingSystemTrade));
_COM_SMARTPTR_TYPEDEF(ICQGTradeEntry, __uuidof(ICQGTradeEntry));
_COM_SMARTPTR_TYPEDEF(ICQGTradeEntries, __uuidof(ICQGTradeEntries));
_COM_SMARTPTR_TYPEDEF(ICQGTradeExit, __uuidof(ICQGTradeExit));
_COM_SMARTPTR_TYPEDEF(ICQGTradeExits, __uuidof(ICQGTradeExits));
_COM_SMARTPTR_TYPEDEF(ICQGChangedTradeEntry, __uuidof(ICQGChangedTradeEntry));
_COM_SMARTPTR_TYPEDEF(ICQGChangedTradeEntries, __uuidof(ICQGChangedTradeEntries));
_COM_SMARTPTR_TYPEDEF(ICQGChangedTradeExit, __uuidof(ICQGChangedTradeExit));
_COM_SMARTPTR_TYPEDEF(ICQGChangedTradeExits, __uuidof(ICQGChangedTradeExits));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemUpdateInfo, __uuidof(ICQGTradingSystemUpdateInfo));
_COM_SMARTPTR_TYPEDEF(ICQGTradingSystemRelationAddInfo, __uuidof(ICQGTradingSystemRelationAddInfo));
_COM_SMARTPTR_TYPEDEF(ICQGExecutionPattern, __uuidof(ICQGExecutionPattern));
_COM_SMARTPTR_TYPEDEF(ICQGExecutionPatternParameters, __uuidof(ICQGExecutionPatternParameters));
_COM_SMARTPTR_TYPEDEF(ICQGExecutionPatternParameter, __uuidof(ICQGExecutionPatternParameter));
_COM_SMARTPTR_TYPEDEF(ICQGSessions, __uuidof(ICQGSessions));
_COM_SMARTPTR_TYPEDEF(ICQGHolidays, __uuidof(ICQGHolidays));
_COM_SMARTPTR_TYPEDEF(ICQGSessionsCollection, __uuidof(ICQGSessionsCollection));

//
// Type library items
//

enum eOrderExecutionInstruction
{
    oeiUndefined = 0,
    oeiAllOrNothing = 1,
    oeiTrailing = 2,
    oeiIceberg = 4,
    oeiQTS = 8,
    oeiFunari = 16,
    oeiMIT = 32
};

enum eOrderTrailingPeg
{
    otpBestBid = 0,
    otpBestAsk = 1,
    otpLastTrade = 2,
    otpUndefined = 3
};

enum ePositionDetailing
{
    pdNoTrades = 0,
    pdOpenTrades = 1,
    pdAllTrades = 2
};

enum eManualFillsDataLevel
{
    mfdlSnapshot = 0,
    mfdlSnapshotAndUpdates = 1
};

enum eManualFillUpdateType
{
    mfutAdd = 0,
    mfutModify = 1,
    mfutDelete = 2
};

enum ePriceMode
{
    pmBidsAsks = 0,
    pmTradesOnly = 1
};

struct __declspec(uuid("a17eb2fc-e18c-4922-a7c0-6b4c07902fd7"))
_ICQGCELEvents : IDispatch
{};

enum eConnectionStatus
{
    csConnectionUp = 0,
    csConnectionDelayed = 1,
    csConnectionDown = 2,
    csConnectionTrouble = 3,
    csConnectionNotLoggedOn = 4
};

enum eDataSubscriptionLevel
{
    dsNone = 0,
    dsQuotes = 1,
    dsQuotesAndBBA = 2,
    dsQuotesAndDOM = 3,
    dsGroup = 4,
    dsDisable = 5
};

enum eTimeZone
{
    tzAfghanistan = 175,
    tzAlaskan = 3,
    tzArab = 150,
    tzArabian = 165,
    tzArabic = 158,
    tzAtlantic = 50,
    tzAUSCentral = 245,
    tzAUSEastern = 255,
    tzAzores = 80,
    tzCanadaCentral = 25,
    tzCapeVerde = 83,
    tzCaucasus = 170,
    tzCenAustralia = 250,
    tzCentralAmerica = 33,
    tzCentralAsia = 195,
    tzCentralEurope = 95,
    tzCentralEuropean = 100,
    tzCentralPacific = 280,
    tzCentral = 20,
    tzChina = 210,
    tzDateline = 0,
    tzEAfrica = 155,
    tzEAustralia = 260,
    tzEEurope = 115,
    tzESouthAmerica = 65,
    tzEastern = 35,
    tzEasternNoDST = 40,
    tzEgypt = 120,
    tzEkaterinburg = 180,
    tzFiji = 285,
    tzFLE = 125,
    tzGMT = 85,
    tzGreenland = 73,
    tzGreenwich = 90,
    tzGTB = 130,
    tzHawaiian = 2,
    tzIndia = 190,
    tzIran = 160,
    tzJerusalem = 135,
    tzKorea = 230,
    tzMexico = 30,
    tzMexico2 = 13,
    tzMidAtlantic = 75,
    tzMountain = 10,
    tzMountainNoDST = 15,
    tzMyanmar = 203,
    tzNCentralAsia = 201,
    tzNepal = 193,
    tzNewZealand = 290,
    tzNewfoundland = 60,
    tzNorthAsiaEast = 227,
    tzNorthAsia = 207,
    tzPacificSA = 56,
    tzPacific = 4,
    tzRomance = 105,
    tzRussian = 145,
    tzSAEastern = 70,
    tzSAPacific = 45,
    tzSAWestern = 55,
    tzSamoa = 1,
    tzSEAsia = 205,
    tzMalayPeninsula = 215,
    tzSouthAfrica = 140,
    tzSriLanka = 200,
    tzTaipei = 220,
    tzTasmania = 265,
    tzTokyo = 235,
    tzTonga = 300,
    tzUTC = 90,
    tzVladivostok = 270,
    tzWAustralia = 225,
    tzWCentralAfrica = 113,
    tzWEurope = 110,
    tzWestAsia = 185,
    tzWestPacific = 275,
    tzYakutsk = 240,
    tzUndefined = -1
};

enum eLogSeverity
{
    lsFatal = 50000,
    lsError = 40000,
    lsWarn = 30000,
    lsInfo = 20000,
    lsDebug = 10000
};

enum eReadyStatusCheck
{
    rscOff = 0,
    rscOn = 1
};

enum eDOMUpdatesMode
{
    domUMDynamic = 0,
    domUMSnapshot = 1
};

#pragma pack(push, 8)

struct CQGCELConfiguration
{
    enum eTimeZone TimeZoneCode;
    long MaxLogFileCount;
    DATE MaxLogFileDuration;
    long MaxLogFileSize;
    enum eLogSeverity LogSeverity;
    enum eReadyStatusCheck ReadyStatusCheck;
    enum eDataSubscriptionLevel DefaultInstrumentSubscriptionLevel;
    VARIANT_BOOL MetaDataEnabled;
    long DOMUpdatesPeriod;
    enum eDOMUpdatesMode DOMUpdatesMode;
};

#pragma pack(pop)

enum eOrderSide
{
    osdUndefined = 0,
    osdBuy = 1,
    osdSell = 2
};

struct __declspec(uuid("25345894-ff06-45d0-a733-29efbd95fda0"))
ICQGTrade : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IsMatched (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Price (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Side (
        /*[out,retval]*/ enum eOrderSide * pVal ) = 0;
      virtual HRESULT __stdcall get_GroupID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ServerTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
};

struct __declspec(uuid("b8ef96e6-d604-4a9f-8c91-1550c1f3f4b9"))
ICQGTrades : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTrade * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum ePositionSubscriptionLevel
{
    pslNoPositions = 0,
    pslSnapshot = 1,
    pslSnapshotAndUpdates = 2
};

enum eOrderProperty
{
    opOrderType = 0,
    opAccountID = 1,
    opInstrumentName = 2,
    opLimitPrice = 3,
    opStopPrice = 4,
    opDurationType = 5,
    opGTDTime = 6,
    opSide = 7,
    opQuantity = 8,
    opVisibleQuantity = 9,
    opAggressive = 10,
    opExecutionInstructions = 11,
    opParked = 12,
    opSynthetic = 13,
    opGUID = 14,
    opUEName = 15,
    opOrderID = 16,
    opOriginalOrderID = 17,
    opExchangeConf = 18,
    opGWStatus = 19,
    opState = 20,
    opPlaceTime = 21,
    opFilledQuantity = 22,
    opFilledCount = 23,
    opAverageFillPrice = 24,
    opErrorFlag = 25,
    opTimeActiveAt = 26,
    opLastEvent = 27,
    opLastEventID = 28,
    opEventTimestamp = 29,
    opEventServerTimestamp = 30,
    opRemainingQuantity = 31,
    opTrailingOffset = 32,
    opLastTrailingTime = 33,
    opTrailingLimitPrice = 34,
    opTrailingStopPrice = 35,
    opCQGID = 36,
    opUserName = 37,
    opTraderID = 38,
    opTriggerQuantity = 39,
    opPreferredTrailingPeg = 40,
    opDescription = 41,
    opStrategyOrderGUID = 42,
    opExecutionPattern = 43,
    opLastFillTime = 44,
    opCanceledTime = 45,
    opCancelationInstruction = 46,
    opTradingExpression = 47,
    opCompoundOrderID = 48,
    opCompoundOrderGUID = 49,
    opIsCareOrder = 50,
    opCareOrderIDs = 51,
    opOrderCheckMark = 52,
    opAlgorithmID = 53
};

enum eOrderType
{
    otUndefined = 0,
    otMarket = 1,
    otLimit = 2,
    otStop = 3,
    otStopLimit = 4
};

enum eOrderStatus
{
    osNotSent = 0,
    osInClient = 1,
    osInTransit = 2,
    osRejectGW = 3,
    osInOrderBook = 4,
    osInTransitTimeout = 5,
    osRejectFCM = 6,
    osExpired = 7,
    osInCancel = 8,
    osInModify = 9,
    osCanceled = 10,
    osFilled = 11,
    osParked = 12,
    osDisconnected = 13,
    osContingent = 14,
    osBusted = 15,
    osActiveAt = 16
};

enum eOrderLocalState
{
    olsNotSent = 0,
    olsInQueue = 1,
    olsQueueTimeout = 2,
    olsModifySent = 3,
    olsCancelSent = 4,
    olsActivateSent = 5,
    olsInClient = 6,
    olsAtGW = 7,
    olsRemoved = 8,
    olsStrategyPending = 9
};

enum eOrderEvent
{
    oeUndefined = 0,
    oeInQueue = 1,
    oeCancelSent = 2,
    oeModifySent = 3,
    oeQueueTimeout = 4,
    oeCancelQueueTimeout = 5,
    oeModifyQueueTimeout = 6,
    oeInClient = 7,
    oeInTransit = 8,
    oeRejectGW = 9,
    oeAckPlace = 10,
    oeInTransTmout = 11,
    oeRejectFCM = 12,
    oeExpired = 13,
    oeInCan = 14,
    oeInMod = 15,
    oeInModTmout = 16,
    oeInCanTmout = 17,
    oeAckMod = 18,
    oeAckCan = 19,
    oeFill = 20,
    oeRejMod = 21,
    oeRejCan = 22,
    oePark = 23,
    oeLinkChg = 24,
    oeFillMod = 25,
    oeDisconnected = 26,
    oeFillCan = 27,
    oeFillBust = 28,
    oeActiveAt = 29,
    oeSyntheticActivated = 30,
    oeRemoved = 31,
    oeRejLinkChg = 32,
    oeSyntheticFailed = 33,
    oeSyntheticOverFill = 34,
    oeSyntheticHang = 35,
    oeInfoChanged = 36
};

enum eOrderDuration
{
    odUndefined = 0,
    odDay = 1,
    odGoodTillDate = 2,
    odGoodTillCanceled = 3,
    odFOK = 4,
    odFAK = 5,
    odATO = 6,
    odATC = 7,
    odGoodTillTime = 8
};

struct __declspec(uuid("57797e59-1b98-4206-936c-7caf3afe2c68"))
ICQGError : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Code (
        /*[out,retval]*/ long * pRetVal ) = 0;
      virtual HRESULT __stdcall get_Owner (
        /*[out,retval]*/ IDispatch * * ppRetVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
};

enum eFillStatus
{
    fsNormal = 0,
    fsCanceled = 1,
    fsModified = 2,
    fsBusted = 3
};

struct __declspec(uuid("7d1055d2-1b84-441d-81d0-f3ccf3c89d62"))
ICQGModifiedProperty : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_NewValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_PreviousValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eOrderProperty * pVal ) = 0;
};

struct __declspec(uuid("17e30c78-4f87-4e3c-9653-9f44b07aaa69"))
ICQGModifiedProperties : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ enum eOrderProperty property_type,
        /*[out,retval]*/ struct ICQGModifiedProperty * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ItemByIndex (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGModifiedProperty * * ppVal ) = 0;
};

struct __declspec(uuid("f01177e1-22ae-4d48-9787-c461eaefbeae"))
ICQGStringCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ BSTR * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eOrderCancelationType
{
    octUndefined = 0,
    octCancelAllLegOrders = 1,
    octCancelPrimaryLegOrders = 2
};

enum eFcmClass
{
    fcDerivative = 0,
    fcFixedIncome = 1,
    fcForex = 2
};

enum eAccountMarginDetailing
{
    amdNoMargin = 0,
    amdMarginSnapshot = 1,
    amdMarginSnapshotAndUpdate = 2
};

struct __declspec(uuid("b94f3342-6795-4147-af03-4365723fcdba"))
ICQGRemoteOpenAPISession : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ServerAddress (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LogonName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ROMNumber (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eAccountSubscriptionLevel
{
    aslNone = 0,
    aslAccountsOnly = 1,
    aslAccountsAndUpdates = 2,
    aslAccountUpdatesAndOrders = 3
};

enum eDOMandBBAType
{
    dbtImplied = 1,
    dbtOutright = 2,
    dbtCombined = 4
};

struct __declspec(uuid("c3e14fea-ed20-478b-82f8-27cae61348fa"))
ICQGAPIConfig : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TimeZoneCode (
        /*[out,retval]*/ enum eTimeZone * pVal ) = 0;
      virtual HRESULT __stdcall put_TimeZoneCode (
        /*[in]*/ enum eTimeZone pVal ) = 0;
      virtual HRESULT __stdcall get_MaxLogFileCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxLogFileCount (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_MaxLogFileDuration (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxLogFileDuration (
        /*[in]*/ DATE pVal ) = 0;
      virtual HRESULT __stdcall get_MaxLogFileSize (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MaxLogFileSize (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_LogSeverity (
        /*[out,retval]*/ enum eLogSeverity * pVal ) = 0;
      virtual HRESULT __stdcall put_LogSeverity (
        /*[in]*/ enum eLogSeverity pVal ) = 0;
      virtual HRESULT __stdcall get_ReadyStatusCheck (
        /*[out,retval]*/ enum eReadyStatusCheck * pVal ) = 0;
      virtual HRESULT __stdcall put_ReadyStatusCheck (
        /*[in]*/ enum eReadyStatusCheck pVal ) = 0;
      virtual HRESULT __stdcall get_DOMUpdatesPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DOMUpdatesPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DOMUpdatesMode (
        /*[out,retval]*/ enum eDOMUpdatesMode * pVal ) = 0;
      virtual HRESULT __stdcall put_DOMUpdatesMode (
        /*[in]*/ enum eDOMUpdatesMode pVal ) = 0;
      virtual HRESULT __stdcall get_UsedFromATLClient (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UsedFromATLClient (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_NewInstrumentChangeMode (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_NewInstrumentChangeMode (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseOrderSide (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UseOrderSide (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_CollectionsThrowException (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_CollectionsThrowException (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DefPositionSubscriptionLevel (
        /*[out,retval]*/ enum ePositionSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_DefPositionSubscriptionLevel (
        /*[in]*/ enum ePositionSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_PositionDetailing (
        /*[out,retval]*/ enum ePositionDetailing * pVal ) = 0;
      virtual HRESULT __stdcall put_PositionDetailing (
        /*[in]*/ enum ePositionDetailing pVal ) = 0;
      virtual HRESULT __stdcall get_PriceMode (
        /*[out,retval]*/ enum ePriceMode * pVal ) = 0;
      virtual HRESULT __stdcall put_PriceMode (
        /*[in]*/ enum ePriceMode pVal ) = 0;
      virtual HRESULT __stdcall get_FireEventOnChangedPrices (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_FireEventOnChangedPrices (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DefaultInstrumentSubscriptionLevel (
        /*[out,retval]*/ enum eDataSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_DefaultInstrumentSubscriptionLevel (
        /*[in]*/ enum eDataSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_MetaDataEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_MetaDataEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SnapshotPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_SnapshotPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DefaultInstrumentBBAType (
        /*[out,retval]*/ enum eDOMandBBAType * pVal ) = 0;
      virtual HRESULT __stdcall put_DefaultInstrumentBBAType (
        /*[in]*/ enum eDOMandBBAType pVal ) = 0;
      virtual HRESULT __stdcall get_ProviderPassword (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ProviderPassword (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RemoteOpenAPIServer (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RemoteOpenAPIServer (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_NonsynchronizedData (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_NonsynchronizedData (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MessageProcessingTimeout (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_MessageProcessingTimeout (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_GatewayEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_GatewayEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_NewInstrumentMode (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_NewInstrumentMode (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeOrderTransactions (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeOrderTransactions (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_RemoteOpenAPILoginService (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_RemoteOpenAPILoginService (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReplaceLoginSession (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ReplaceLoginSession (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_RemoteOpenAPIServers (
        /*[out,retval]*/ struct ICQGStringCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall AddRemoteOpenAPIServer (
        /*[in]*/ BSTR server_address ) = 0;
      virtual HRESULT __stdcall ClearRemoteOpenAPIServers ( ) = 0;
      virtual HRESULT __stdcall get_PendingOrderActionEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_PendingOrderActionEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_ApplyDaylightSavingChanges (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_ApplyDaylightSavingChanges (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_QueryAllAuthorizedTraders (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_QueryAllAuthorizedTraders (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_AccountMarginAndPositionsThrottleInterval (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_AccountMarginAndPositionsThrottleInterval (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DefaultAccountMarginDetailing (
        /*[out,retval]*/ enum eAccountMarginDetailing * pVal ) = 0;
      virtual HRESULT __stdcall put_DefaultAccountMarginDetailing (
        /*[in]*/ enum eAccountMarginDetailing pVal ) = 0;
};

enum eInstrumentType
{
    itUndefined = 0,
    itFuture = 1,
    itOptionPut = 2,
    itOptionCall = 4,
    itStock = 8,
    itTreasure = 16,
    itOther = 32,
    itSyntheticStrategy = 64,
    itAllOptions = 6,
    itAllInstruments = 127
};

enum eOrderStatusFilter
{
    osfAll = 0,
    osfNotFinal = 1,
    osfFinal = 2,
    osfFilled = 3,
    osfException = 4,
    osfParked = 5,
    osfCanceled = 6
};

enum eRequestStatus
{
    rsInProgress = 0,
    rsSuccess = 1,
    rsFailed = 2,
    rsCanceled = 3
};

enum eTicksRequestType
{
    trtTimeRange = 0,
    trtSinceTime = 1,
    trtSinceTimeNotify = 2,
    trtCurrentNotify = 3
};

enum eTickFilter
{
    tfAll = 0,
    tfDefault = 1,
    tfBid = 2,
    tfAsk = 4,
    tfTrade = 8,
    tfSettlement = 16,
    tfBidHigh = 32,
    tfAskLow = 64
};

struct __declspec(uuid("cb0bc66d-201c-4810-bea6-7e245438c81f"))
ICQGTicksRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Symbol (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Symbol (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eTicksRequestType * pVal ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum eTicksRequestType pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ DATE pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ DATE pVal ) = 0;
      virtual HRESULT __stdcall get_SessionsFilter (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionsFilter (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_TickFilter (
        /*[out,retval]*/ enum eTickFilter * pVal ) = 0;
      virtual HRESULT __stdcall put_TickFilter (
        /*[in]*/ enum eTickFilter pVal ) = 0;
};

enum eTickPriceType
{
    tptTrade = 0,
    tptBid = 64,
    tptAsk = 128,
    tptSettlement = 192
};

enum eTickCorrectionType
{
    tctRegular = 0,
    tctInsert = 1,
    tctDelete = 2,
    tctUpdate = 3
};

enum eMarketState
{
    msFast = 0,
    msNormal = 1
};

struct __declspec(uuid("7765940c-e370-42ad-a29d-3c0d5fb6d82d"))
ICQGTick : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Price (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Volume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_PriceType (
        /*[out,retval]*/ enum eTickPriceType * pVal ) = 0;
      virtual HRESULT __stdcall get_CorrectionType (
        /*[out,retval]*/ enum eTickCorrectionType * pVal ) = 0;
      virtual HRESULT __stdcall get_SalesConditionLabel (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_SalesConditionCode (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ContributorId (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ContributorIdCode (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_MarketState (
        /*[out,retval]*/ enum eMarketState * pVal ) = 0;
};

struct __declspec(uuid("122ab939-92e9-4c18-b765-b9a6f87e505d"))
ICQGTicks : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTick * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_StartTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_EndTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_HasUpdates (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tag_name,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Request (
        /*[out,retval]*/ struct ICQGTicksRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
      virtual HRESULT __stdcall IndexForDate (
        /*[in]*/ DATE date_,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall IndicesForDates (
        /*[in]*/ DATE date_1,
        /*[in]*/ DATE date_2,
        /*[out]*/ long * start_index,
        /*[out]*/ long * end_index ) = 0;
};

struct __declspec(uuid("7eef0951-36ab-48a4-b592-5240dd86dc3e"))
ICQGTicksCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTicks * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemById (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGTicks * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eHistoricalPeriod
{
    hpUndefined = 0,
    hpDaily = 1440,
    hpWeekly = 10080,
    hpMonthly = 43200,
    hpQuarterly = 131040,
    hpSemiannual = 262080,
    hpYearly = 525600
};

enum eTimeSeriesContinuationType
{
    tsctNoContinuation = 0,
    tsctStandard = 1,
    tsctStandardByMonth = 2,
    tsctActive = 3,
    tsctActiveByMonth = 4,
    tsctAdjusted = 5,
    tsctAdjustedByMonth = 6
};

enum eSessionFlag
{
    sfUndefined = 0,
    sfDailyFromIntraday = 2
};

enum eTimedBarsRequestOutputs
{
    tbrActualVolume = 0,
    tbrTickVolume = 1,
    tbrAskVolume = 2,
    tbrBidVolume = 3,
    tbrOpenInterest = 4,
    tbrContractVolume = 5,
    tbrCommodityVolume = 6,
    tbrContractTickVolume = 7,
    tbrCommodityTickVolume = 8,
    tbrContractOpenInterest = 9,
    tbrCommodityOpenInterest = 10
};

struct __declspec(uuid("49e2b82c-da28-4a43-9f7a-faee5008f8d3"))
ICQGTimedBarsRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Symbol (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Symbol (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_IntradayPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_IntradayPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_HistoricalPeriod (
        /*[out,retval]*/ enum eHistoricalPeriod * pVal ) = 0;
      virtual HRESULT __stdcall put_HistoricalPeriod (
        /*[in]*/ enum eHistoricalPeriod pVal ) = 0;
      virtual HRESULT __stdcall get_UpdatesEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdatesEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeEnd (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeEnd (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SessionsFilter (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionsFilter (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Continuation (
        /*[out,retval]*/ enum eTimeSeriesContinuationType * pVal ) = 0;
      virtual HRESULT __stdcall put_Continuation (
        /*[in]*/ enum eTimeSeriesContinuationType pVal ) = 0;
      virtual HRESULT __stdcall get_EqualizeCloses (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EqualizeCloses (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DaysBeforeExpiration (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DaysBeforeExpiration (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_SessionFlags (
        /*[out,retval]*/ enum eSessionFlag * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionFlags (
        /*[in]*/ enum eSessionFlag pVal ) = 0;
      virtual HRESULT __stdcall get_TickFilter (
        /*[out,retval]*/ enum eTickFilter * pVal ) = 0;
      virtual HRESULT __stdcall put_TickFilter (
        /*[in]*/ enum eTickFilter pVal ) = 0;
      virtual HRESULT __stdcall IncludeOutput (
        /*[in]*/ enum eTimedBarsRequestOutputs timed_bar_output,
        /*[in]*/ VARIANT_BOOL include_output ) = 0;
      virtual HRESULT __stdcall ExcludeAllOutputs ( ) = 0;
      virtual HRESULT __stdcall IsOutputIncluded (
        /*[in]*/ enum eTimedBarsRequestOutputs timed_bar_output,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_IgnoreEventsOnHistoricalBars (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IgnoreEventsOnHistoricalBars (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("79582bfd-67a2-49cd-83a7-16206d22d67c"))
ICQGTimedBar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Open (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_High (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Low (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Close (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Mid (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_HLC3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueHigh (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueLow (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueRange (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_ActualVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_TickVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_AskVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_BidVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_OpenInterest (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ContractVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_CommodityVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ContractTickVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_CommodityTickVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ContractOpenInterest (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_CommodityOpenInterest (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("e422a619-639b-4a2e-bf3b-e6d773e3310f"))
ICQGTimedBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTimedBar * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_StartTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_EndTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tag_name,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Request (
        /*[out,retval]*/ struct ICQGTimedBarsRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
      virtual HRESULT __stdcall IndexForDate (
        /*[in]*/ DATE date_,
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("a4dc26d5-5f01-4642-ab4b-c1ca7b5bef9d"))
ICQGTimedBarsCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTimedBars * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemById (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGTimedBars * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eCvbVolumeType
{
    cvbvtTicks = 0,
    cvbvtActual = 1
};

enum eTimeSeriesSubscriptionLevel
{
    tslEachTick = 0,
    tslEachBar = 1,
    tslEndOfBarAndPeriod = 2
};

struct __declspec(uuid("3640309b-e7f3-4d39-ad9d-c861e6dd9318"))
ICQGConstantVolumeBarsRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Symbol (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Symbol (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_VolumeLevel (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_VolumeLevel (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_VolumeType (
        /*[out,retval]*/ enum eCvbVolumeType * pVal ) = 0;
      virtual HRESULT __stdcall put_VolumeType (
        /*[in]*/ enum eCvbVolumeType pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeFlatTicks (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeFlatTicks (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UpdatesEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdatesEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeEnd (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeEnd (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SessionsFilter (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionsFilter (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Continuation (
        /*[out,retval]*/ enum eTimeSeriesContinuationType * pVal ) = 0;
      virtual HRESULT __stdcall put_Continuation (
        /*[in]*/ enum eTimeSeriesContinuationType pVal ) = 0;
      virtual HRESULT __stdcall get_EqualizeCloses (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EqualizeCloses (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DaysBeforeExpiration (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DaysBeforeExpiration (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_SessionFlags (
        /*[out,retval]*/ enum eSessionFlag * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionFlags (
        /*[in]*/ enum eSessionFlag pVal ) = 0;
      virtual HRESULT __stdcall put_SubscriptionLevel (
        /*[in]*/ enum eTimeSeriesSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_SubscriptionLevel (
        /*[out,retval]*/ enum eTimeSeriesSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_RecalcPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_RecalcPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("39a768b2-d0ae-4f0c-adad-24436630a06e"))
ICQGConstantVolumeBar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Open (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_High (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Low (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Close (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Mid (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_HLC3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueHigh (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueLow (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueRange (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_ActualVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_TickVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_AskVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_BidVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_TimestampOffset (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("6c1d5c43-9a4f-441e-82d0-2f8ab9dadc09"))
ICQGConstantVolumeBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGConstantVolumeBar * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_StartTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_EndTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tag_name,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Request (
        /*[out,retval]*/ struct ICQGConstantVolumeBarsRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
};

struct __declspec(uuid("89e06dc4-6f1c-4ff1-a43e-ed78254c4986"))
ICQGConstantVolumeBarsCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGConstantVolumeBars * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemById (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGConstantVolumeBars * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum ePfBoxUnits
{
    pfbuPrice = 0,
    pfbuTicks = 1
};

enum ePfDataSource
{
    pfdsTicks = 0,
    pfds1Min = 1,
    pfds5Min = 2,
    pfds15Min = 3,
    pfds30Min = 4,
    pfds60Min = 5,
    pfdsDaily = 6
};

struct __declspec(uuid("054f6b39-b5a2-46c8-a9c2-811ea8c09dbe"))
ICQGPointAndFigureBarsRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Symbol (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Symbol (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_BoxSize (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_BoxSize (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_BoxUnits (
        /*[out,retval]*/ enum ePfBoxUnits * pVal ) = 0;
      virtual HRESULT __stdcall put_BoxUnits (
        /*[in]*/ enum ePfBoxUnits pVal ) = 0;
      virtual HRESULT __stdcall get_Reversal (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Reversal (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DataSource (
        /*[out,retval]*/ enum ePfDataSource * pVal ) = 0;
      virtual HRESULT __stdcall put_DataSource (
        /*[in]*/ enum ePfDataSource pVal ) = 0;
      virtual HRESULT __stdcall get_UpdatesEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdatesEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeEnd (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeEnd (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SessionsFilter (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionsFilter (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Continuation (
        /*[out,retval]*/ enum eTimeSeriesContinuationType * pVal ) = 0;
      virtual HRESULT __stdcall put_Continuation (
        /*[in]*/ enum eTimeSeriesContinuationType pVal ) = 0;
      virtual HRESULT __stdcall get_EqualizeCloses (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EqualizeCloses (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DaysBeforeExpiration (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DaysBeforeExpiration (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_SessionFlags (
        /*[out,retval]*/ enum eSessionFlag * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionFlags (
        /*[in]*/ enum eSessionFlag pVal ) = 0;
      virtual HRESULT __stdcall put_SubscriptionLevel (
        /*[in]*/ enum eTimeSeriesSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_SubscriptionLevel (
        /*[out,retval]*/ enum eTimeSeriesSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_RecalcPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_RecalcPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("72648f32-5906-4c55-8167-fd6625af1c4b"))
ICQGPointAndFigureBar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Mid (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_High (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Low (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Up (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_TimestampOffset (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_PFHigh (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_PFLow (
        /*[out,retval]*/ double * pVal ) = 0;
};

struct __declspec(uuid("7f084615-edc8-419b-8345-cffe8a2d3f26"))
ICQGPointAndFigureBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGPointAndFigureBar * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_StartTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_EndTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tag_name,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Request (
        /*[out,retval]*/ struct ICQGPointAndFigureBarsRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
};

struct __declspec(uuid("07fe7b48-4539-40cf-a8a8-0630018a4cc2"))
ICQGPointAndFigureBarsCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGPointAndFigureBars * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemById (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGPointAndFigureBars * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eYieldModel
{
    ymDefault = 0,
    ymStandardBill = 1,
    ymSimpleBond = 2,
    ymStandardBond = 3,
    ymMoosmuller = 4,
    ymBraessFangmeyer = 5
};

enum eYieldCompound
{
    ycDefault = 0,
    ycAnnual = 1,
    ycSemiAnnual = 2
};

struct __declspec(uuid("259910e1-e37a-4ecb-850c-68d6fc6dcbee"))
ICQGYieldsRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Symbol (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Symbol (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Model (
        /*[out,retval]*/ enum eYieldModel * pVal ) = 0;
      virtual HRESULT __stdcall put_Model (
        /*[in]*/ enum eYieldModel pVal ) = 0;
      virtual HRESULT __stdcall get_Compound (
        /*[out,retval]*/ enum eYieldCompound * pVal ) = 0;
      virtual HRESULT __stdcall put_Compound (
        /*[in]*/ enum eYieldCompound pVal ) = 0;
      virtual HRESULT __stdcall get_UpdatesEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdatesEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeEnd (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeEnd (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SessionsFilter (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionsFilter (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Continuation (
        /*[out,retval]*/ enum eTimeSeriesContinuationType * pVal ) = 0;
      virtual HRESULT __stdcall put_Continuation (
        /*[in]*/ enum eTimeSeriesContinuationType pVal ) = 0;
      virtual HRESULT __stdcall get_EqualizeCloses (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EqualizeCloses (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DaysBeforeExpiration (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DaysBeforeExpiration (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_SessionFlags (
        /*[out,retval]*/ enum eSessionFlag * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionFlags (
        /*[in]*/ enum eSessionFlag pVal ) = 0;
      virtual HRESULT __stdcall put_SubscriptionLevel (
        /*[in]*/ enum eTimeSeriesSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_SubscriptionLevel (
        /*[out,retval]*/ enum eTimeSeriesSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_RecalcPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_RecalcPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("2f4060e8-0667-4296-a90c-474085f37205"))
ICQGYield : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Open (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_High (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Low (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Close (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Mid (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_HLC3 (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Avg (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueHigh (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueLow (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Range (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueRange (
        /*[out,retval]*/ double * pVal ) = 0;
};

struct __declspec(uuid("c2364bad-6909-481e-9dcd-7f3bab0a81c3"))
ICQGYields : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGYield * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_StartTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_EndTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tag_name,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Request (
        /*[out,retval]*/ struct ICQGYieldsRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
      virtual HRESULT __stdcall IndexForDate (
        /*[in]*/ DATE date_,
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("bde68e30-6854-4d40-8154-9fa2f3f304db"))
ICQGYieldsCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGYields * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemById (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGYields * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eTfAggregation
{
    tfaBars = 0,
    tfaRange = 1,
    tfaSmoothing = 2
};

enum eTFlowRequestDomVolumeLevel
{
    dvLevel0 = 0,
    dvLevel1 = 1,
    dvLevel2 = 2,
    dvLevel3 = 3,
    dvLevel4 = 4
};

struct __declspec(uuid("9773c44a-3c4d-461b-b3d5-b7f38cfe3674"))
ICQGTFlowBarsRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Symbol (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Symbol (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Aggregation (
        /*[out,retval]*/ enum eTfAggregation * pVal ) = 0;
      virtual HRESULT __stdcall put_Aggregation (
        /*[in]*/ enum eTfAggregation pVal ) = 0;
      virtual HRESULT __stdcall get_AggregationLevel (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_AggregationLevel (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_UpdatesEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdatesEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeEnd (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeEnd (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SessionsFilter (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionsFilter (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Continuation (
        /*[out,retval]*/ enum eTimeSeriesContinuationType * pVal ) = 0;
      virtual HRESULT __stdcall put_Continuation (
        /*[in]*/ enum eTimeSeriesContinuationType pVal ) = 0;
      virtual HRESULT __stdcall get_EqualizeCloses (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EqualizeCloses (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DaysBeforeExpiration (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DaysBeforeExpiration (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_SessionFlags (
        /*[out,retval]*/ enum eSessionFlag * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionFlags (
        /*[in]*/ enum eSessionFlag pVal ) = 0;
      virtual HRESULT __stdcall put_SubscriptionLevel (
        /*[in]*/ enum eTimeSeriesSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_SubscriptionLevel (
        /*[out,retval]*/ enum eTimeSeriesSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_RecalcPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_RecalcPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DomAskVolumeLevel (
        /*[in]*/ enum eTFlowRequestDomVolumeLevel pVal ) = 0;
      virtual HRESULT __stdcall get_DomAskVolumeLevel (
        /*[out,retval]*/ enum eTFlowRequestDomVolumeLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_DomBidVolumeLevel (
        /*[in]*/ enum eTFlowRequestDomVolumeLevel pVal ) = 0;
      virtual HRESULT __stdcall get_DomBidVolumeLevel (
        /*[out,retval]*/ enum eTFlowRequestDomVolumeLevel * pVal ) = 0;
};

struct __declspec(uuid("bbd4681f-d945-43c4-9e01-9709c8f11481"))
ICQGTFlowBar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Open (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_High (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Low (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Close (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Mid (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueHigh (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueLow (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TrueMid (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_AskVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_BidVolume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_BestAskPrice (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_BestBidPrice (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_DomBidVolume (
        /*[in]*/ long index_,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_DomBidCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_DomAskVolume (
        /*[in]*/ long index_,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_DomAskCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_TimestampOffset (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("9163df55-96ea-4810-8645-9b4ecd1f00d3"))
ICQGTFlowBars : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTFlowBar * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_StartTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_EndTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tag_name,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Request (
        /*[out,retval]*/ struct ICQGTFlowBarsRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
};

struct __declspec(uuid("5170e441-609f-4137-8411-7265e34b0d81"))
ICQGTFlowBarsCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTFlowBars * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemById (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGTFlowBars * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eUserFormulaParameterType
{
    ufptInt = 0,
    ufptDouble = 1
};

struct __declspec(uuid("aab46790-b322-4d6f-80e2-36ff0c1455d3"))
ICQGParameterDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eUserFormulaParameterType * pVal ) = 0;
      virtual HRESULT __stdcall get_Comment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_DefaultValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
};

struct __declspec(uuid("ee80a9c4-5ad4-40d5-b414-b9b343a97bf3"))
ICQGParameterDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGParameterDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByName (
        /*[in]*/ BSTR parameter_name,
        /*[out,retval]*/ struct ICQGParameterDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("7f6682e8-2e9d-401d-833f-238138b5d0c4"))
ICQGCurveDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("3aea2907-6ac4-4ebc-ad03-18927f2da5b3"))
ICQGCurveDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGCurveDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByName (
        /*[in]*/ BSTR curve_name,
        /*[out,retval]*/ struct ICQGCurveDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("7953dfa6-c66f-40ff-810d-21c96c0db6bd"))
ICQGCustomStudyDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Abbreviation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ParameterDefinitions (
        /*[out,retval]*/ struct ICQGParameterDefinitions * * ppVal ) = 0;
      virtual HRESULT __stdcall get_CurveDefinitions (
        /*[out,retval]*/ struct ICQGCurveDefinitions * * ppVal ) = 0;
};

struct __declspec(uuid("3ea4072d-7522-4a07-9362-9fb992da2b5c"))
ICQGCustomStudyRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ struct ICQGCustomStudyDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_BaseExpression (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_BaseExpression (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Parameter (
        /*[in]*/ VARIANT key_,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Parameter (
        /*[in]*/ VARIANT key_,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_IntradayPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_IntradayPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_HistoricalPeriod (
        /*[out,retval]*/ enum eHistoricalPeriod * pVal ) = 0;
      virtual HRESULT __stdcall put_HistoricalPeriod (
        /*[in]*/ enum eHistoricalPeriod pVal ) = 0;
      virtual HRESULT __stdcall get_UpdatesEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdatesEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeEnd (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeEnd (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SessionsFilter (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionsFilter (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Continuation (
        /*[out,retval]*/ enum eTimeSeriesContinuationType * pVal ) = 0;
      virtual HRESULT __stdcall put_Continuation (
        /*[in]*/ enum eTimeSeriesContinuationType pVal ) = 0;
      virtual HRESULT __stdcall get_EqualizeCloses (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EqualizeCloses (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DaysBeforeExpiration (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DaysBeforeExpiration (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_SessionFlags (
        /*[out,retval]*/ enum eSessionFlag * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionFlags (
        /*[in]*/ enum eSessionFlag pVal ) = 0;
      virtual HRESULT __stdcall IncludeCurve (
        /*[in]*/ VARIANT curve_key ) = 0;
      virtual HRESULT __stdcall IsCurveIncluded (
        /*[in]*/ VARIANT curve_key,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_SubscriptionLevel (
        /*[in]*/ enum eTimeSeriesSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_SubscriptionLevel (
        /*[out,retval]*/ enum eTimeSeriesSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_RecalcPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_RecalcPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("cfe5790c-5de3-4b49-8862-5e703ac02907"))
ICQGCurves : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT key_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_TimestampOffset (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("172a1395-9af6-489d-b53b-b9c10d497446"))
ICQGCurveHeaders : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("46e0172c-efdb-4f8d-bc46-0ff42b945ddd"))
ICQGCustomStudy : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGCurves * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_CurveHeaders (
        /*[out,retval]*/ struct ICQGCurveHeaders * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_StartTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_EndTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tag_name,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ struct ICQGCustomStudyDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Request (
        /*[out,retval]*/ struct ICQGCustomStudyRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
      virtual HRESULT __stdcall IndexForDate (
        /*[in]*/ DATE date_,
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("6f48eead-84ae-49d8-b4a3-6cc2db110a0c"))
ICQGCustomStudies : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGCustomStudy * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemById (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGCustomStudy * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("725e431c-4ec4-4aab-ada1-77a062057d06"))
ICQGConditionDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ParameterDefinitions (
        /*[out,retval]*/ struct ICQGParameterDefinitions * * ppVal ) = 0;
};

struct __declspec(uuid("7ee99697-65af-476d-a8e5-918e844bdd26"))
ICQGConditionRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ struct ICQGConditionDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_BaseExpression (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_BaseExpression (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Parameter (
        /*[in]*/ VARIANT key_,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Parameter (
        /*[in]*/ VARIANT key_,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_IntradayPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_IntradayPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_HistoricalPeriod (
        /*[out,retval]*/ enum eHistoricalPeriod * pVal ) = 0;
      virtual HRESULT __stdcall put_HistoricalPeriod (
        /*[in]*/ enum eHistoricalPeriod pVal ) = 0;
      virtual HRESULT __stdcall get_UpdatesEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdatesEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeEnd (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeEnd (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_SessionsFilter (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionsFilter (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Continuation (
        /*[out,retval]*/ enum eTimeSeriesContinuationType * pVal ) = 0;
      virtual HRESULT __stdcall put_Continuation (
        /*[in]*/ enum eTimeSeriesContinuationType pVal ) = 0;
      virtual HRESULT __stdcall get_EqualizeCloses (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_EqualizeCloses (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DaysBeforeExpiration (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DaysBeforeExpiration (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_SessionFlags (
        /*[out,retval]*/ enum eSessionFlag * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionFlags (
        /*[in]*/ enum eSessionFlag pVal ) = 0;
      virtual HRESULT __stdcall put_SubscriptionLevel (
        /*[in]*/ enum eTimeSeriesSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_SubscriptionLevel (
        /*[out,retval]*/ enum eTimeSeriesSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_RecalcPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_RecalcPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("589181b4-2fe0-4b8c-a99b-5cf8ff69d2fc"))
ICQGConditionResult : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
};

struct __declspec(uuid("74a3fdaf-a51b-4add-8554-07f4153427c2"))
ICQGCondition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGConditionResult * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_StartTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_EndTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tag_name,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ struct ICQGConditionDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Request (
        /*[out,retval]*/ struct ICQGConditionRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
      virtual HRESULT __stdcall IndexForDate (
        /*[in]*/ DATE date_,
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("20257a63-6413-4da8-ad35-c899dc2ead07"))
ICQGConditions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGCondition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemById (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGCondition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eTradeSide
{
    tsBuy = 0,
    tsSell = 1,
    tsOff = 2
};

struct __declspec(uuid("18b4acb8-879a-4ddb-a47c-bce672f6d7c2"))
ICQGTradeEntryDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_OrderType (
        /*[out,retval]*/ enum eOrderType * pVal ) = 0;
      virtual HRESULT __stdcall get_AllowEntryOnExit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_AllowPyramids (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("86fb7e25-f938-4314-93c0-f9aba4123de9"))
ICQGTradeExitDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_OrderType (
        /*[out,retval]*/ enum eOrderType * pVal ) = 0;
      virtual HRESULT __stdcall get_AllowExitOnEntry (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_AllowMoreThanOnce (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("202a1020-7dc8-42f4-8bc5-baa498229a8e"))
ICQGTradeExitDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTradeExitDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByName (
        /*[in]*/ BSTR exit_name,
        /*[out,retval]*/ struct ICQGTradeExitDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("b6886be5-df39-4313-9803-8dde384a066f"))
ICQGTradingSystemTradeDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Side (
        /*[out,retval]*/ enum eTradeSide * pVal ) = 0;
      virtual HRESULT __stdcall get_Entry (
        /*[out,retval]*/ struct ICQGTradeEntryDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Exits (
        /*[out,retval]*/ struct ICQGTradeExitDefinitions * * ppVal ) = 0;
};

struct __declspec(uuid("43287342-ffb5-44df-b4c6-462b4e8eec01"))
ICQGTradingSystemTradeDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTradingSystemTradeDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByName (
        /*[in]*/ BSTR trade_name,
        /*[out,retval]*/ struct ICQGTradingSystemTradeDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eTradingSystemCommissionType
{
    tscmFixed = 0,
    tscmPerContract = 1
};

struct __declspec(uuid("46238229-0e90-4da3-9681-98aa859dc291"))
ICQGTradingSystemDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Abbreviation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ParameterDefinitions (
        /*[out,retval]*/ struct ICQGParameterDefinitions * * ppVal ) = 0;
      virtual HRESULT __stdcall get_TradeDefinitions (
        /*[out,retval]*/ struct ICQGTradingSystemTradeDefinitions * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Commission (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_CommissionType (
        /*[out,retval]*/ enum eTradingSystemCommissionType * pVal ) = 0;
};

enum eTradingSystemStatistic
{
    tssTotalNetProfit = 0,
    tssClosedNetProfit = 1,
    tssTotalTradeCount = 2,
    tssOpenPosition = 3,
    tssPercentLong = 4,
    tssAverageDuration = 5,
    tssAverageProfit = 6,
    tssAverageWin = 7,
    tssMaximumWin = 8,
    tssAverageLoss = 9,
    tssMaximumLoss = 10,
    tssMaxClosedDraw = 11,
    tssMaxDrawAmount = 12,
    tssMaxDrawDuration = 13,
    tssMaxConsecWins = 14,
    tssCurConsecWins = 15,
    tssMaxConsecLosses = 16,
    tssCurConsecLosses = 17,
    tssProfitToMaxDraw = 18,
    tssProfitLossRatio = 19,
    tssPercentWinners = 20,
    tssRemoveToNeutral = 21,
    tssTimePercentage = 22,
    tssCurDrawDown = 23,
    tssReturnRetracement = 24,
    tssLinearRegression = 25
};

enum eTradingSystemBaseBar
{
    bbBar = 0,
    bbConstantVolumeBar = 1,
    bbTFlowBar = 2,
    bbPointAndFigureBar = 3
};

enum eTradingSystemBaseBarParameter
{
    bbpVolumeLevel = 0,
    bbpVolumeType = 1,
    bbpIncludeFlatTicks = 2,
    bbpBoxSize = 3,
    bbpBoxUnits = 4,
    bbpReversal = 5,
    bbpDataSource = 6,
    bbpAggregation = 7,
    bbpAggregationLevel = 8
};

struct __declspec(uuid("454d9822-6533-4694-bf96-45c17937ba65"))
ICQGTradingSystemBaseBarParameter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eTradingSystemBaseBarParameter * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("98f80db3-1cb8-4263-be9e-72d079cd7fe5"))
ICQGTradingSystemBaseBarParameters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ enum eTradingSystemBaseBarParameter parameter_type,
        /*[out,retval]*/ struct ICQGTradingSystemBaseBarParameter * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("e8060968-2966-4108-993c-62250f350a39"))
ICQGTradingSystemRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ struct ICQGTradingSystemDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall put_BaseExpression (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_BaseExpression (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Parameter (
        /*[in]*/ VARIANT key_,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Parameter (
        /*[in]*/ VARIANT key_,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_IntradayPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_IntradayPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_HistoricalPeriod (
        /*[in]*/ enum eHistoricalPeriod pVal ) = 0;
      virtual HRESULT __stdcall get_HistoricalPeriod (
        /*[out,retval]*/ enum eHistoricalPeriod * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeEnd (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeEnd (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionsFilter (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_SessionsFilter (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Continuation (
        /*[in]*/ enum eTimeSeriesContinuationType pVal ) = 0;
      virtual HRESULT __stdcall get_Continuation (
        /*[out,retval]*/ enum eTimeSeriesContinuationType * pVal ) = 0;
      virtual HRESULT __stdcall put_EqualizeCloses (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EqualizeCloses (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_DaysBeforeExpiration (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DaysBeforeExpiration (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionFlags (
        /*[in]*/ enum eSessionFlag pVal ) = 0;
      virtual HRESULT __stdcall get_SessionFlags (
        /*[out,retval]*/ enum eSessionFlag * pVal ) = 0;
      virtual HRESULT __stdcall IncludeStatistic (
        /*[in]*/ enum eTradingSystemStatistic trading_system_statistic ) = 0;
      virtual HRESULT __stdcall ExcludeAllStatistics ( ) = 0;
      virtual HRESULT __stdcall IsStatisticIncluded (
        /*[in]*/ enum eTradingSystemStatistic trading_system_statistic,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_SubscriptionLevel (
        /*[in]*/ enum eTimeSeriesSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_SubscriptionLevel (
        /*[out,retval]*/ enum eTimeSeriesSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_RecalcPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_RecalcPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_BaseBarType (
        /*[out,retval]*/ enum eTradingSystemBaseBar * pVal ) = 0;
      virtual HRESULT __stdcall put_BaseBarType (
        /*[in]*/ enum eTradingSystemBaseBar pVal ) = 0;
      virtual HRESULT __stdcall get_BaseBarParameters (
        /*[out,retval]*/ struct ICQGTradingSystemBaseBarParameters * * ppVal ) = 0;
};

struct __declspec(uuid("6e35395f-6a4f-452a-9f2c-8d686e7bc14f"))
ICQGTradingSystemStatistics : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Value (
        /*[in]*/ enum eTradingSystemStatistic ts_statistic,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_TotalNetProfit (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_ClosedNetProfit (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TotalTradeCount (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_OpenPosition (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_PercentLong (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_AverageDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_AverageProfit (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_AverageWin (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_MaximumWin (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_AverageLoss (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_MaximumLoss (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_MaxClosedDraw (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_MaxDrawAmount (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_MaxDrawDuration (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_MaxConsecWins (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_CurConsecWins (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_MaxConsecLosses (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_CurConsecLosses (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_ProfitToMaxDraw (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_ProfitLossRatio (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_PercentWinners (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_RemoveToNeutral (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TimePercentage (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_CurDrawDown (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_ReturnRetracement (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_LinearRegression (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TimestampOffset (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("f2f3d2e8-699c-477c-aff0-62d88627844f"))
ICQGTradingSystemStatisticsCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTradingSystemStatistics * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall IndexForDate (
        /*[in]*/ DATE date_,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall IndicesForDates (
        /*[in]*/ DATE date_1,
        /*[in]*/ DATE date_2,
        /*[out]*/ long * start_index,
        /*[out]*/ long * end_index ) = 0;
};

struct __declspec(uuid("b9d1d6ce-2901-461a-9061-c3154d7c26a2"))
ICQGExpressionRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SubExpression (
        /*[in]*/ long index_,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_SubExpressionAlias (
        /*[in]*/ long index_,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_SubExpressionCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_IntradayPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_IntradayPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_HistoricalPeriod (
        /*[in]*/ enum eHistoricalPeriod pVal ) = 0;
      virtual HRESULT __stdcall get_HistoricalPeriod (
        /*[out,retval]*/ enum eHistoricalPeriod * pVal ) = 0;
      virtual HRESULT __stdcall put_UpdatesEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UpdatesEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_IncludeEnd (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_IncludeEnd (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionsFilter (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_SessionsFilter (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Continuation (
        /*[in]*/ enum eTimeSeriesContinuationType pVal ) = 0;
      virtual HRESULT __stdcall get_Continuation (
        /*[out,retval]*/ enum eTimeSeriesContinuationType * pVal ) = 0;
      virtual HRESULT __stdcall put_EqualizeCloses (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_EqualizeCloses (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_DaysBeforeExpiration (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DaysBeforeExpiration (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_SessionFlags (
        /*[in]*/ enum eSessionFlag pVal ) = 0;
      virtual HRESULT __stdcall get_SessionFlags (
        /*[out,retval]*/ enum eSessionFlag * pVal ) = 0;
      virtual HRESULT __stdcall AddSubExpression (
        /*[in]*/ BSTR sub_expression,
        /*[in]*/ BSTR alias_ ) = 0;
      virtual HRESULT __stdcall put_SubscriptionLevel (
        /*[in]*/ enum eTimeSeriesSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_SubscriptionLevel (
        /*[out,retval]*/ enum eTimeSeriesSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_RecalcPeriod (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_RecalcPeriod (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("552ce101-6267-4ccb-95a7-fdf596dc1dea"))
ICQGExpressionOutputs : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT key_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_TimestampOffset (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("2b231d03-cb1e-4631-8d0e-c54f3c68aa0c"))
ICQGExpressionOutputHeaders : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("e2245d3c-06eb-4aee-bc87-8fada4d4b8fe"))
ICQGExpression : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGExpressionOutputs * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_OutputHeaders (
        /*[out,retval]*/ struct ICQGExpressionOutputHeaders * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_StartTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_EndTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tag_name,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Request (
        /*[out,retval]*/ struct ICQGExpressionRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
      virtual HRESULT __stdcall IndexForDate (
        /*[in]*/ DATE date_,
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("fa20dfaa-c6cd-4d9d-ab3c-43e6b35cf7a6"))
ICQGExpressions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGExpression * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemById (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGExpression * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eAlgorithmicOrderPropertyType
{
    aoptInt = 0,
    aoptUInt = 1,
    aoptDouble = 2,
    aoptString = 3,
    aoptDateTime = 4,
    aoptBoolean = 5,
    aoptList = 6
};

struct __declspec(uuid("f2b0fbfe-3db2-45e1-aa63-18d059818f84"))
ICQGAlgorithmicOrderDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum eAlgorithmicOrderPropertyType pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eAlgorithmicOrderPropertyType * pVal ) = 0;
      virtual HRESULT __stdcall put_Unit (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Unit (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_DefaultValue (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_DefaultValue (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_Values (
        /*[out,retval]*/ struct ICQGStringCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall AddValue (
        /*[in]*/ BSTR value_ ) = 0;
      virtual HRESULT __stdcall put_DefaultValueIndex (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DefaultValueIndex (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("66b04e87-816d-4efc-aa43-87e14716b43b"))
ICQGAlgorithmicOrderDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGAlgorithmicOrderDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall CreateDefinition (
        /*[out,retval]*/ struct ICQGAlgorithmicOrderDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct ICQGAlgorithmicOrderDefinition * definition_ ) = 0;
};

struct __declspec(uuid("b6e84aaa-d906-44aa-9bf1-96bb1a042b91"))
ICQGDirectEventsAccessor : IDispatch
{};

enum eGroupSubscriptionLevel
{
    gslRealtimeSnapshot = 0,
    gslRealtimeUpdates = 1,
    gslFullSnapshot = 2,
    gslFullUpdates = 3
};

struct __declspec(uuid("c5cddf7e-8454-40b5-97a2-a5cfdececc7f"))
ICQGInstrumentsGroupRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Commodity (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Commodity (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_InstrumentTypes (
        /*[in]*/ enum eInstrumentType pVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentTypes (
        /*[out,retval]*/ enum eInstrumentType * pVal ) = 0;
      virtual HRESULT __stdcall put_SubscriptionLevel (
        /*[in]*/ enum eGroupSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_SubscriptionLevel (
        /*[out,retval]*/ enum eGroupSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
};

struct __declspec(uuid("2a11e86f-5ec5-4226-9dbb-52aac1fba6ba"))
ICQGBarsTimestamps : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ DATE * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
};

enum eStrategyRequestStatus
{
    srsNotActive = 0,
    srsPending = 1,
    srsSuccess = 2,
    srsFailed = 3
};

struct __declspec(uuid("941d0e9e-76df-4cfb-8b8d-e0f480e2e5cb"))
ICQGStrategyDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eStrategyRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
      virtual HRESULT __stdcall get_RequestString (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Symbol (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ClientId (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("aedd0358-778e-489c-912b-568235a22399"))
ICQGStrategyDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGStrategyDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ItemByIndex (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGStrategyDefinition * * ppVal ) = 0;
};

enum eExecutionPatternParameterType
{
    epptBool = 0,
    epptInt32 = 1,
    epptDouble = 2,
    epptString = 3,
    epptObject = 4,
    epptCollection = 5,
    epptCollectionItem = 6
};

enum eHistoricalSessionsRequestType
{
    hsrtAll = 0,
    hsrtTimeRange = 1,
    hsrtSinceTime = 2
};

struct __declspec(uuid("69ebc08b-0d8c-49b6-a7d4-256bd49f0ac7"))
ICQGHistoricalSessionsRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Symbol (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Symbol (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eHistoricalSessionsRequestType * pVal ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum eHistoricalSessionsRequestType pVal ) = 0;
      virtual HRESULT __stdcall get_RangeStart (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeStart (
        /*[in]*/ DATE pVal ) = 0;
      virtual HRESULT __stdcall get_RangeEnd (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall put_RangeEnd (
        /*[in]*/ DATE pVal ) = 0;
};

struct __declspec(uuid("ffd01208-d950-4242-8e5c-cead1124af63"))
ICQGManualFill : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GWAccountID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_StatementDate (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Side (
        /*[out,retval]*/ enum eOrderSide * pVal ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Price (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_DisplayPrice (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_TradeTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_TradeId (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Note (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("778f386e-cdc2-4e63-9e78-c809c5db6044"))
ICQGManualFillRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GWAccountID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_GWAccountID (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_StatementDate (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall put_StatementDate (
        /*[in]*/ DATE pVal ) = 0;
      virtual HRESULT __stdcall put_InstrumentName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Side (
        /*[out,retval]*/ enum eOrderSide * pVal ) = 0;
      virtual HRESULT __stdcall put_Side (
        /*[in]*/ enum eOrderSide pVal ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Quantity (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Price (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_Price (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_TradeTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall put_TradeTimestamp (
        /*[in]*/ DATE pVal ) = 0;
      virtual HRESULT __stdcall get_TradeId (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_TradeId (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_Note (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Note (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("0d916e96-72c7-41d1-852a-1396b6031aff"))
ICQGManualFills : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long trade_id,
        /*[out,retval]*/ struct ICQGManualFill * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ItemByIndex (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGManualFill * * ppVal ) = 0;
      virtual HRESULT __stdcall get_GWAccountID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_DataLevel (
        /*[out,retval]*/ enum eManualFillsDataLevel * pVal ) = 0;
};

struct __declspec(uuid("416b7334-2625-49bd-8825-52945119a384"))
ICQGManualFillsCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long account_id,
        /*[out,retval]*/ struct ICQGManualFills * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ItemByIndex (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGManualFills * * ppVal ) = 0;
};

enum eQuoteSubscriptionLevel
{
    qsNone = 0,
    qsQuotes = 1,
    qsBBA = 2
};

enum ePropertySubscriptionLevel
{
    psNone = 0,
    psMarketState = 1,
    psNetChange = 2,
    psTotalVolumes = 4
};

struct __declspec(uuid("75e3c004-31ef-4780-a8b5-cc2bde903ab6"))
ICQGInstrumentSubscriptionRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Symbol (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Symbol (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_QuoteLevel (
        /*[in]*/ enum eQuoteSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_QuoteLevel (
        /*[out,retval]*/ enum eQuoteSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_PropertyLevel (
        /*[in]*/ enum ePropertySubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_PropertyLevel (
        /*[out,retval]*/ enum ePropertySubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_DOMStatus (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DOMStatus (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_DOMBBAType (
        /*[out,retval]*/ enum eDOMandBBAType * pVal ) = 0;
      virtual HRESULT __stdcall put_DOMBBAType (
        /*[in]*/ enum eDOMandBBAType pVal ) = 0;
};

enum eQuoteType
{
    qtAsk = 0,
    qtBid = 1,
    qtTrade = 2,
    qtSettlement = 3,
    qtCohUndAsk = 4,
    qtCohUndBid = 5,
    qtDayOpen = 6,
    qtDayHigh = 7,
    qtDayLow = 8,
    qtImpliedAsk = 9,
    qtImpliedBid = 10,
    qtOutrightAsk = 11,
    qtOutrightBid = 12,
    qtYesterdaySettlement = 13,
    qtIndicativeOpen = 14,
    qtTodayMarker = 15,
    qtMarker = 16
};

enum eInstrumentProperty
{
    ipFullName = 0,
    ipDescription = 1,
    ipInstrumentID = 2,
    ipCurrency = 3,
    ipExpirationDate = 4,
    ipInitialMargin = 5,
    ipMaintenanceMargin = 6,
    ipSessionMask = 7,
    ipCommodity = 8,
    ipCountry = 9,
    ipMonthChar = 10,
    ipMonth = 11,
    ipStrike = 12,
    ipInstrumentType = 13,
    ipYear = 14,
    ipYearString = 15,
    ipTickSize = 16,
    ipTickValue = 17,
    ipSessionNumber = 18,
    ipNetChange = 19,
    ipDTE = 20,
    ipIsDownTick = 21,
    ipIsUpTick = 22,
    ipIsFastMarket = 23,
    ipPreferredSessionName = 24,
    ipTodayCTotalVolume = 25,
    ipYesterdayCTotalVolume = 26,
    ipYCOI = 27,
    ipExchangeID = 28,
    ipExchangeAbbreviation = 29,
    ipScale = 30,
    ipStrikeScale = 31,
    ipDecimalStrike = 32,
    ipDelayTime = 33,
    ipLeadingContractName = 34,
    ipTickSizeFractionNumerator = 35,
    ipTickSizeFractionDenominator = 36,
    ipFirstNoticeDate = 37,
    ipWorkup = 38,
    ipIsFutureStyleOption = 39
};

enum eSessionWeekDays
{
    swdUndefined = 0,
    swdSunday = 64,
    swdMonday = 32,
    swdTuesday = 16,
    swdWednesday = 8,
    swdThursday = 4,
    swdFriday = 2,
    swdSaturday = 1
};

enum eSymbolSessionType
{
    sstDefault = 1,
    sstCustom = 2,
    sstAll = 3
};

struct __declspec(uuid("6d8ede4a-5e79-4d5c-a926-efd29c742d29"))
ICQGHoliday : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_HolidayDate (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_SessionMask (
        /*[out,retval]*/ enum eSessionWeekDays * pVal ) = 0;
      virtual HRESULT __stdcall get_IsDaily (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

enum eAccountChangeType
{
    actAccountsReloaded = 0,
    actAccountChanged = 1,
    actPositionsReloaded = 2,
    actPositionAdded = 3,
    actPositionChanged = 4,
    actTradersReloaded = 5
};

enum eReadyStatus
{
    rsBusy = 0,
    rsReady = 1,
    rsNotReady = 2
};

struct __declspec(uuid("c1c22a85-589a-414d-87d8-35936103c270"))
ICQGCommodityInstruments : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_IsTradableOnly (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

enum eGWEnvChangeCode
{
    eccPositionChanged = 0,
    eccBalanceChanged = 1,
    eccNewStatement = 2,
    eccManualStatementChanged = 3
};

enum eChangeType
{
    ctAdded = 0,
    ctChanged = 1,
    ctRemoved = 2
};

enum eSymbolType
{
    stUndefined = 0,
    stFuture = 1,
    stOption = 6,
    stStock = 8,
    stTreasury = 16,
    stCash = 32,
    stCurrency = 64,
    stIndex = 128,
    stReport = 256
};

enum eDataSourceStatus
{
    dssDisabled = 0,
    dssAvailable = 1,
    dssDelay = 2,
    dssExtraDelay = 3,
    dssSnapshot = 4
};

struct __declspec(uuid("9b11a072-177c-4695-aa88-45bb223c4ffc"))
ICQGDataSource : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Abbreviation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_SymbolTypes (
        /*[out,retval]*/ enum eSymbolType * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eDataSourceStatus * pVal ) = 0;
};

struct __declspec(uuid("13d2c727-634f-4f12-a5a2-afde11ac69b9"))
ICQGDataSources : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGDataSource * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByAbbreviation (
        /*[in]*/ BSTR data_source_abbreviation,
        /*[out,retval]*/ struct ICQGDataSource * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("9795abe6-5986-4413-b117-1046667e5919"))
ICQGDataSourceSymbol : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Abbreviation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eSymbolType * pVal ) = 0;
};

struct __declspec(uuid("8f94f6e6-0462-4fa8-8974-295924d90b41"))
ICQGDataSourceSymbols : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGDataSourceSymbol * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_DataSourceAbbreviation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("ee5380e3-0249-4e97-ab30-4516775d7064"))
ICQGCommodities : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_GWAccountID (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("76e52203-e044-40da-8723-ad0234134df7"))
ICQGCustomStudyDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGCustomStudyDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByName (
        /*[in]*/ BSTR custom_study_name,
        /*[out,retval]*/ struct ICQGCustomStudyDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByAbbreviation (
        /*[in]*/ BSTR custom_study_abbreviation,
        /*[out,retval]*/ struct ICQGCustomStudyDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("8a469a57-1be9-47c6-b9d7-475405121d16"))
ICQGTradingSystemDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTradingSystemDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByName (
        /*[in]*/ BSTR trading_system_name,
        /*[out,retval]*/ struct ICQGTradingSystemDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByAbbreviation (
        /*[in]*/ BSTR trading_system_abbreviation,
        /*[out,retval]*/ struct ICQGTradingSystemDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("5e76a014-779a-4c96-a80b-e24a28f266d3"))
ICQGConditionDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGConditionDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByName (
        /*[in]*/ BSTR condition_name,
        /*[out,retval]*/ struct ICQGConditionDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("06352951-9b69-464f-9526-65c06b0ec37e"))
ICQGQFormulaDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Expression (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Number (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("ef7337eb-bfe0-482b-aa22-d7b691e01564"))
ICQGQFormulaDefinitions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGQFormulaDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByName (
        /*[in]*/ BSTR qformula_name,
        /*[out,retval]*/ struct ICQGQFormulaDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("d48e0b68-0e13-4ad8-9392-efc526be036d"))
ICQGTradingSystemAddInfo : IDispatch
{};

enum eTradeChangeCategory
{
    tccSignalSet = 1,
    tccSignalReset = 2,
    tccQuantity = 4,
    tccPrice = 8,
    tccStopLimitPrice = 16,
    tccAll = 31
};

struct __declspec(uuid("89cee83e-0c19-4027-8226-49a666ac643e"))
ICQGTradingSystemStatisticsChangeInfo : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Statistics (
        /*[out,retval]*/ struct ICQGTradingSystemStatistics * * ppVal ) = 0;
      virtual HRESULT __stdcall IsStatisticChanged (
        /*[in]*/ enum eTradingSystemStatistic trading_system_statistic,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("f1d1ec65-730c-4c76-a90e-30dd5e336dcf"))
ICQGAlgorithmicOrderParameters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eOrderType * pVal ) = 0;
      virtual HRESULT __stdcall get_GWAccountID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Side (
        /*[out,retval]*/ enum eOrderSide * pVal ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Price (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_DurationType (
        /*[out,retval]*/ enum eOrderDuration * pVal ) = 0;
      virtual HRESULT __stdcall get_GTD (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Parked (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_StopLimitPrice (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_ExecutionInstructions (
        /*[out,retval]*/ enum eOrderExecutionInstruction * pVal ) = 0;
      virtual HRESULT __stdcall get_VisibleQuantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_TriggerQuantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_PreferredTrailingPeg (
        /*[out,retval]*/ enum eOrderTrailingPeg * pVal ) = 0;
      virtual HRESULT __stdcall get_TrailingOffset (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_ExecutionPattern (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("ed42fc70-34a5-494a-9355-fd094a6b9155"))
ICQGAlgorithmicOrderProperty : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
};

struct __declspec(uuid("1f8d3d22-3f06-411e-9572-2434f9506a26"))
ICQGAlgorithmicOrderProperties : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGAlgorithmicOrderProperty * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eICConnectionStatus
{
    iccsExited = 0
};

enum eOrderSideFilter
{
    osftBuy = 1,
    osftSell = 2,
    osftAll = 3
};

struct __declspec(uuid("783d500d-7201-4d05-8831-35aa7c013632"))
ICQGIntegerCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ long * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("1b9354c5-81fd-497a-ab6a-d6e969c8d99a"))
ICQGTradingSystemInsertInfo : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("fc58ae71-5818-4381-95ae-30f1af03ec0c"))
ICQGTradingSystemRemoveInfo : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("65336902-f728-428e-b63a-f8221a17a3d2"))
ICQGExchanges : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_GWAccountID (
        /*[out,retval]*/ long * pVal ) = 0;
};

enum eSessionStatus
{
    ssNoAvailableLoginService = 0,
    ssSuccess = 1,
    ssInternalSystemError = 2,
    ssNotEnabled = 3,
    ssAuthorizationFailed = 4,
    ssAlreadyLoggedIn = 5,
    ssNotAuthenticated = 6,
    ssNoAvailableDataServers = 7,
    ssNoAvailableMetadataServers = 8,
    ssNoAvailableROMNumbers = 9,
    ssNoRemoteAPIPermission = 10
};

struct __declspec(uuid("66788b5c-4c99-4663-84c2-7dedf4ea30f8"))
CQGCEL;
    // [ default ] interface ICQGCEL
    // [ default, source ] dispinterface _ICQGCELEvents

struct __declspec(uuid("64d1fc37-95c8-43f0-bdc3-7f6c79e60c93"))
CQGAPIConfig;
    // [ default ] interface ICQGAPIConfig

struct __declspec(uuid("2ab371a5-534d-4481-82e0-215d3e7898a2"))
CQGStringCollection;
    // [ default ] interface ICQGStringCollection

struct __declspec(uuid("97f2dd85-e088-4ccc-a556-48d64c08a65b"))
CQGAccount;
    // [ default ] interface ICQGAccount

struct __declspec(uuid("f70beb3e-423e-427c-a2c5-e60efcd6ca04"))
CQGAccounts;
    // [ default ] interface ICQGAccounts

struct __declspec(uuid("777a765f-a0f4-48ac-b94d-0521cf1033ca"))
CQGCurrencyRate;
    // [ default ] interface ICQGCurrencyRate

struct __declspec(uuid("da9fa862-d78d-4dda-9807-55b2622b1149"))
CQGCurrencyRates;
    // [ default ] interface ICQGCurrencyRates

struct __declspec(uuid("e854195e-8b43-4d85-9988-f4dba9305274"))
CQGEnvironment;
    // [ default ] interface ICQGEnvironment

struct __declspec(uuid("4c81e045-6d77-47e5-9e84-c439bd81e8cd"))
CQGOrder;
    // [ default ] interface ICQGOrder

struct __declspec(uuid("8a15558e-dc1c-429d-bc9c-8e0e45516a8c"))
CQGOrders;
    // [ default ] interface ICQGOrders

struct __declspec(uuid("f0026643-20b1-48f3-93e0-7d0ff06f237e"))
CQGInstrument;
    // [ default ] interface ICQGInstrument

struct __declspec(uuid("78ce5808-49c9-4a0d-8915-5d6cfba2a877"))
CQGPosition;
    // [ default ] interface ICQGPosition

struct __declspec(uuid("00713c33-68d2-4260-b609-40bc197df1b7"))
CQGPositions;
    // [ default ] interface ICQGPositions

struct __declspec(uuid("0b1f93e4-35ce-49ca-b74e-9820cf9490b4"))
CQGDirectEventsAccessor;
    // [ default ] interface ICQGDirectEventsAccessor
    // [ default, source ] interface _ICQGCELInstrumentEvents
    // [ source ] interface _ICQGCELGeneralEvents

struct __declspec(uuid("73334ff8-107b-434f-87f9-883d4cd6bf54"))
CQGError;
    // [ default ] interface ICQGError

struct __declspec(uuid("33d4e0f7-3d8c-4d88-bb5f-59724569075a"))
CQGSummariesStatement;
    // [ default ] interface ICQGSummariesStatement

struct __declspec(uuid("89ccfba2-32ac-452f-8ec2-a524c5cb5207"))
CQGPositionsStatement;
    // [ default ] interface ICQGPositionsStatement

struct __declspec(uuid("a4fd55df-b7bf-4c6e-8023-0b0b343bae3e"))
CQGLogger;
    // [ default ] interface ICQGLogger

struct __declspec(uuid("d9a8cdae-0a96-44f6-9e76-8ce928ca7b68"))
CQGInstruments;
    // [ default ] interface ICQGInstruments

struct __declspec(uuid("3a9eec11-0968-4453-a471-41ecbc8c7d36"))
CQGTick;
    // [ default ] interface ICQGTick

struct __declspec(uuid("0fdfa379-1e58-477d-9ca5-3c4d7686b5ac"))
CQGTicks;
    // [ default ] interface ICQGTicks

struct __declspec(uuid("1b459b86-e919-4be4-8354-415d6f6c8c91"))
CQGTicksCollection;
    // [ default ] interface ICQGTicksCollection

struct __declspec(uuid("8fcafe43-2945-4bc1-9941-41549f0f282f"))
CQGTimedBar;
    // [ default ] interface ICQGTimedBar

struct __declspec(uuid("34621e7d-7a9a-48b6-8bb6-faded0e426dd"))
CQGTimedBarsRequest;
    // [ default ] interface ICQGTimedBarsRequest

struct __declspec(uuid("8b7936bc-c2a2-4f71-a5d7-ae61c212c379"))
CQGTimedBars;
    // [ default ] interface ICQGTimedBars

struct __declspec(uuid("abd09eda-278b-4aac-99e3-b0f8f38f7d97"))
CQGTimedBarsCollection;
    // [ default ] interface ICQGTimedBarsCollection

struct __declspec(uuid("fa651a69-9fb4-4a88-8dd7-9664c89f277a"))
CQGConstantVolumeBar;
    // [ default ] interface ICQGConstantVolumeBar

struct __declspec(uuid("b04ac856-9f8e-48bb-b8c3-dcb04ba63309"))
CQGConstantVolumeBarsRequest;
    // [ default ] interface ICQGConstantVolumeBarsRequest

struct __declspec(uuid("4cfceff6-fdd4-443d-a147-465ac2d9d28b"))
CQGConstantVolumeBars;
    // [ default ] interface ICQGConstantVolumeBars

struct __declspec(uuid("23a1310c-62d8-4216-a4a6-cb4d2399d27a"))
CQGConstantVolumeBarsCollection;
    // [ default ] interface ICQGConstantVolumeBarsCollection

struct __declspec(uuid("5a32b366-b9a1-45f3-afd1-8bb4d7a522fa"))
CQGTFlowBar;
    // [ default ] interface ICQGTFlowBar

struct __declspec(uuid("b07e461e-a3b3-4a59-95be-1b2e1919e252"))
CQGTFlowBarsRequest;
    // [ default ] interface ICQGTFlowBarsRequest

struct __declspec(uuid("2bf5d9bd-d1c2-48c3-81bf-bfccc622b6fe"))
CQGTFlowBars;
    // [ default ] interface ICQGTFlowBars

struct __declspec(uuid("6f356dff-afeb-4d52-9b04-4da58ad68c6a"))
CQGTFlowBarsCollection;
    // [ default ] interface ICQGTFlowBarsCollection

struct __declspec(uuid("046c82be-afd9-468e-90c0-a0d2e4d2af49"))
CQGYield;
    // [ default ] interface ICQGYield

struct __declspec(uuid("8441168b-3703-408e-9d4b-e1e8d5ce3789"))
CQGYieldsRequest;
    // [ default ] interface ICQGYieldsRequest

struct __declspec(uuid("49754487-4c28-443f-a8f5-00f679d2aeee"))
CQGYields;
    // [ default ] interface ICQGYields

struct __declspec(uuid("3cfff20f-800c-42cf-9742-4ab8377498e3"))
CQGYieldsCollection;
    // [ default ] interface ICQGYieldsCollection

struct __declspec(uuid("241ec27c-df5e-4d49-ab2e-d36dcb157e2e"))
CQGPointAndFigureBar;
    // [ default ] interface ICQGPointAndFigureBar

struct __declspec(uuid("b367da38-89dc-416e-8b1f-a2e971816e82"))
CQGPointAndFigureBarsRequest;
    // [ default ] interface ICQGPointAndFigureBarsRequest

struct __declspec(uuid("a97ae645-c35e-44a8-830e-b392ccdb9e56"))
CQGPointAndFigureBars;
    // [ default ] interface ICQGPointAndFigureBars

struct __declspec(uuid("feb08c43-a84a-4378-840c-6f8e1b83be82"))
CQGPointAndFigureBarsCollection;
    // [ default ] interface ICQGPointAndFigureBarsCollection

struct __declspec(uuid("582c7cdd-82c5-410b-8a60-c6863d486787"))
CQGCurveHeaders;
    // [ default ] interface ICQGCurveHeaders

struct __declspec(uuid("b6c42a96-495d-4765-82f7-2741eab1772b"))
CQGCurves;
    // [ default ] interface ICQGCurves

struct __declspec(uuid("dbcf3491-7147-40de-80e3-2e86c8dff280"))
CQGCustomStudy;
    // [ default ] interface ICQGCustomStudy

struct __declspec(uuid("0adebf98-d20b-4595-bfda-4bf83e675445"))
CQGCustomStudies;
    // [ default ] interface ICQGCustomStudies

struct __declspec(uuid("3505bb39-8e5e-40f3-a43a-489f59c170aa"))
CQGConditionResult;
    // [ default ] interface ICQGConditionResult

struct __declspec(uuid("286a416a-c19c-493d-9bb3-54e8447325d8"))
CQGCondition;
    // [ default ] interface ICQGCondition

struct __declspec(uuid("78012a33-4b7b-4cda-b578-733bb0dc3cd4"))
CQGConditions;
    // [ default ] interface ICQGConditions

struct __declspec(uuid("6bc352f1-3fd5-4e17-a5b6-5e60113ba52b"))
CQGOrdersQuery;
    // [ default ] interface ICQGOrdersQuery

struct __declspec(uuid("8331f816-6e59-420b-b9c4-82c2d86d9422"))
CQGFill;
    // [ default ] interface ICQGFill

struct __declspec(uuid("2171dcf1-b70b-4cab-9eb7-f7fed71956b4"))
CQGOrderProperty;
    // [ default ] interface ICQGOrderProperty

struct __declspec(uuid("7652b95d-567e-4bb8-a0e3-7b2b217ecb2b"))
CQGOrderProperties;
    // [ default ] interface ICQGOrderProperties

struct __declspec(uuid("1ca802c9-6983-4b67-a135-f85256c15593"))
CQGOrderStatistics;
    // [ default ] interface ICQGOrderStatistics

struct __declspec(uuid("8d1ae1ab-3ad1-45cf-9aa9-8bf73ceda18a"))
ICQGOrderStatistics : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Switch (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall get_StatisticsOnReceive (
        /*[in]*/ BSTR i_GUID,
        /*[out,retval]*/ VARIANT * o_pVarCheckPoints ) = 0;
      virtual HRESULT __stdcall get_StatisticsOnSend (
        /*[in]*/ BSTR i_GUID,
        /*[out,retval]*/ VARIANT * o_pVarCheckPoints ) = 0;
};

struct __declspec(uuid("da268a53-40da-44c3-8deb-9c2fbcfa6eb7"))
CQGInstrumentsGroup;
    // [ default ] interface ICQGInstrumentsGroup

struct __declspec(uuid("900f78ee-e8c5-48e7-a032-53e555e43823"))
CQGRemoteOpenAPISession;
    // [ default ] interface ICQGRemoteOpenAPISession

struct __declspec(uuid("74c802ff-2bdf-4d15-b5ee-4e14c52c64ba"))
CQGQuote;
    // [ default ] interface ICQGQuote

struct __declspec(uuid("de5423a3-c8d2-467b-8e98-420fcada1c36"))
CQGQuotes;
    // [ default ] interface ICQGQuotes

struct __declspec(uuid("87deaa17-45db-43e2-929f-78fa173f7502"))
CQGInstrumentProperty;
    // [ default ] interface ICQGInstrumentProperty

struct __declspec(uuid("48b661fb-74b2-4a70-b0a4-73f29b6515c0"))
CQGInstrumentProperties;
    // [ default ] interface ICQGInstrumentProperties

struct __declspec(uuid("73653b35-3de6-4924-9627-e7250c414cf2"))
CQGDOMQuotes;
    // [ default ] interface ICQGDOMQuotes

struct __declspec(uuid("82162321-b5c5-4432-b65b-0ae9f9fdf53f"))
CQGCommodities;
    // [ default ] interface ICQGCommodities

struct __declspec(uuid("59bb3d1b-fd5f-4ff7-a090-6b538b42a270"))
CQGExchanges;
    // [ default ] interface ICQGExchanges

struct __declspec(uuid("ba083b61-dc53-4865-9897-107a029679ee"))
CQGCommodityInstruments;
    // [ default ] interface ICQGCommodityInstruments

struct __declspec(uuid("19a379ab-5dc3-4cec-bba5-81c025bb9142"))
CQGInstrumentSubscriptionRequest;
    // [ default ] interface ICQGInstrumentSubscriptionRequest

struct __declspec(uuid("f0a46526-a177-43c4-bf65-449d0172ec80"))
CQGSession;
    // [ default ] interface ICQGSession

struct __declspec(uuid("1eb2ac76-75bd-41a5-aa58-c335859a112e"))
CQGSessions;
    // [ default ] interface ICQGSessions

struct __declspec(uuid("68c2bd74-5ceb-4815-bc40-662ea2f8fde0"))
CQGTrade;
    // [ default ] interface ICQGTrade

struct __declspec(uuid("8f37a0a3-4e44-44f7-a55f-40bc022955fd"))
CQGTrades;
    // [ default ] interface ICQGTrades

struct __declspec(uuid("905ce542-d44c-47dd-89aa-69e3cec91e2f"))
CQGAlgorithmicOrderDefinition;
    // [ default ] interface ICQGAlgorithmicOrderDefinition

struct __declspec(uuid("4247be9f-a23d-4f28-baf4-3cbb42bdb8cc"))
CQGAlgorithmicOrderDefinitions;
    // [ default ] interface ICQGAlgorithmicOrderDefinitions

struct __declspec(uuid("16c4ee90-2976-4e85-92c8-bb8a596ec1c4"))
CQGAlgorithmicOrderParameters;
    // [ default ] interface ICQGAlgorithmicOrderParameters

struct __declspec(uuid("bfa1261e-0955-4206-9820-976eab9065fe"))
CQGAlgorithmicOrderProperty;
    // [ default ] interface ICQGAlgorithmicOrderProperty

struct __declspec(uuid("6036afa0-ec13-47bd-9948-a287b55737e6"))
CQGAlgorithmicOrderProperties;
    // [ default ] interface ICQGAlgorithmicOrderProperties

struct __declspec(uuid("f182a728-05bf-4c93-b5ea-728b5c3d178f"))
CQGIntegerCollection;
    // [ default ] interface ICQGIntegerCollection

struct __declspec(uuid("b73db8b8-eb49-42f3-9ef3-f2a6ed3c915e"))
CQGStrategyDefinition;
    // [ default ] interface ICQGStrategyDefinition

struct __declspec(uuid("fc09259a-1209-4357-93cb-f1ec12b2167e"))
CQGStrategyDefinitions;
    // [ default ] interface ICQGStrategyDefinitions

struct __declspec(uuid("48a5cf74-ba01-4ceb-b530-0ea6ee5d9385"))
CQGExecutionPattern;
    // [ default ] interface ICQGExecutionPattern

struct __declspec(uuid("db733f5c-de9e-40ae-92dd-dba2889ee012"))
CQGOrderChain;
    // [ default ] interface ICQGOrderChain

struct __declspec(uuid("05b4b0ae-d6e4-406e-91bb-53c99c4ab0be"))
CQGOrderActionRequest;
    // [ default ] interface ICQGOrderActionRequest

struct __declspec(uuid("eeaa83e8-13b5-4d5b-b649-f965e1cabfad"))
CQGGWTrade;
    // [ default ] interface ICQGGWTrade

struct __declspec(uuid("c70088fe-c3d2-4396-9ebb-ed1df1b4f2da"))
CQGGWTrades;
    // [ default ] interface ICQGGWTrades

struct __declspec(uuid("9349407b-99c3-4fcd-b5ca-44b83c955849"))
CQGFills;
    // [ default ] interface ICQGFills

struct __declspec(uuid("c97d21d9-8f53-4738-aa40-bd389af29e2c"))
CQGModifiedProperty;
    // [ default ] interface ICQGModifiedProperty

struct __declspec(uuid("732978f6-82d6-4f7a-b740-2bb8dcd9aeb5"))
CQGModifiedProperties;
    // [ default ] interface ICQGModifiedProperties

struct __declspec(uuid("ca4c3768-8ca5-4eb2-acc4-f244d2ab689f"))
CQGOrderModify;
    // [ default ] interface ICQGOrderModify

struct __declspec(uuid("1cdd9c9f-6d62-40b3-a457-0b7dfbaeac99"))
CQGTransaction;
    // [ default ] interface ICQGTransaction

struct __declspec(uuid("51957a62-bf4b-4f1a-a8b1-c856f5024fe2"))
CQGTransactions;
    // [ default ] interface ICQGTransactions

struct __declspec(uuid("83d203c2-2bc2-4125-b475-f175c8740e05"))
CQGStrategyLegFill;
    // [ default ] interface ICQGStrategyLegFill

struct __declspec(uuid("65bf3407-1177-44da-9b8b-4cd5602312c8"))
CQGStrategyLegFills;
    // [ default ] interface ICQGStrategyLegFills

struct __declspec(uuid("8b2f20db-ff2f-4c7e-b811-9ee335ef2ffa"))
CQGExecutionPatternParameter;
    // [ default ] interface ICQGExecutionPatternParameter

struct __declspec(uuid("d1fbd6fb-10ec-4735-ab3f-9ce0ea9fe9cb"))
CQGExecutionPatternParameters;
    // [ default ] interface ICQGExecutionPatternParameters

struct __declspec(uuid("b6017d5d-589b-4acf-8311-04b7b9726b08"))
CQGCustomStudyDefinition;
    // [ default ] interface ICQGCustomStudyDefinition

struct __declspec(uuid("c461f79c-ca7b-471a-9473-f0ce980ea7a2"))
CQGCustomStudyDefinitions;
    // [ default ] interface ICQGCustomStudyDefinitions

struct __declspec(uuid("53a464a8-82a4-463e-82c7-a85ab6e307d7"))
CQGTradingSystemDefinition;
    // [ default ] interface ICQGTradingSystemDefinition

struct __declspec(uuid("62427e5c-ff60-45e4-b480-354d9c941f4e"))
CQGTradingSystemDefinitions;
    // [ default ] interface ICQGTradingSystemDefinitions

struct __declspec(uuid("4e2e0e6c-d184-4da9-bbaa-0c46e9601ce6"))
CQGConditionDefinition;
    // [ default ] interface ICQGConditionDefinition

struct __declspec(uuid("66153306-0387-4f93-aeab-a648e12f9a88"))
CQGConditionDefinitions;
    // [ default ] interface ICQGConditionDefinitions

struct __declspec(uuid("5e17b4da-dce5-4278-881b-6b615c7df878"))
CQGQFormulaDefinition;
    // [ default ] interface ICQGQFormulaDefinition

struct __declspec(uuid("6d732c1f-b849-4782-82bd-a799ed01b8c0"))
CQGQFormulaDefinitions;
    // [ default ] interface ICQGQFormulaDefinitions

struct __declspec(uuid("4fa8427d-fd1e-498d-bb90-80a88ca04dc9"))
CQGParameterDefinition;
    // [ default ] interface ICQGParameterDefinition

struct __declspec(uuid("d27d0c6c-6616-414b-bb13-394116ad6369"))
CQGParameterDefinitions;
    // [ default ] interface ICQGParameterDefinitions

struct __declspec(uuid("cda7c77c-cf27-4ce3-b0e7-2fc10aa41fab"))
CQGTradingSystem;
    // [ default ] interface ICQGTradingSystem

struct __declspec(uuid("7b0f1454-9ac0-4e48-8384-336363c80029"))
CQGTradingSystems;
    // [ default ] interface ICQGTradingSystems

struct __declspec(uuid("b0943cd0-0ea4-428b-8e29-d120dc3ab011"))
CQGTradingSystemAddInfo;
    // [ default ] interface ICQGTradingSystemAddInfo

struct __declspec(uuid("42edc3cf-d066-4b78-bce1-e2fa1912316c"))
CQGTradingSystemUpdateInfo;
    // [ default ] interface ICQGTradingSystemUpdateInfo

struct __declspec(uuid("096338f8-3946-4fa7-bdf6-43a31df30b25"))
CQGTradingSystemInsertInfo;
    // [ default ] interface ICQGTradingSystemInsertInfo

struct __declspec(uuid("c1b46bef-8ff9-4e1f-afa3-f4ad0b42b71d"))
CQGTradingSystemRemoveInfo;
    // [ default ] interface ICQGTradingSystemRemoveInfo

struct __declspec(uuid("f5152bc4-a69b-453b-bf99-bdd953fa6b41"))
CQGTradingSystemRelationAddInfo;
    // [ default ] interface ICQGTradingSystemRelationAddInfo

struct __declspec(uuid("61d68f55-1f91-4b06-be01-000925d6f179"))
CQGTradingSystemRequest;
    // [ default ] interface ICQGTradingSystemRequest

struct __declspec(uuid("99724283-e755-4aa0-a4fc-e91795ec7d85"))
CQGChangedTradeEntry;
    // [ default ] interface ICQGChangedTradeEntry

struct __declspec(uuid("34b78524-2c42-470f-89a0-b99f00a8c105"))
CQGChangedTradeEntries;
    // [ default ] interface ICQGChangedTradeEntries

struct __declspec(uuid("623af048-3a9f-457d-ae41-99df0b9b7ec9"))
CQGTradeEntry;
    // [ default ] interface ICQGTradeEntry

struct __declspec(uuid("868a3138-0f5f-44aa-80cf-6f121f2e4ffd"))
CQGChangedTradeExit;
    // [ default ] interface ICQGChangedTradeExit

struct __declspec(uuid("fd4d2414-6a94-4231-a61c-25d87f01909a"))
CQGTradeExit;
    // [ default ] interface ICQGTradeExit

struct __declspec(uuid("3b8251f2-84e0-47e0-91b0-a97499289eea"))
CQGChangedTradeExits;
    // [ default ] interface ICQGChangedTradeExits

struct __declspec(uuid("e348a330-2c2a-4a0b-8e2c-053f41c3b95e"))
CQGTradeEntries;
    // [ default ] interface ICQGTradeEntries

struct __declspec(uuid("53d8b22b-57b3-4784-a693-64f59238a30e"))
CQGTradeExits;
    // [ default ] interface ICQGTradeExits

struct __declspec(uuid("547da7d0-2f66-4a84-b14c-5548af7ddc8c"))
CQGTradeEntryDefinition;
    // [ default ] interface ICQGTradeEntryDefinition

struct __declspec(uuid("e5c263d7-7b8e-4f57-be1f-cb05d186a961"))
CQGTradingSystemTradeDefinition;
    // [ default ] interface ICQGTradingSystemTradeDefinition

struct __declspec(uuid("0518ebfe-9fd5-4091-a9d3-3ceb9013ef41"))
CQGTradingSystemTrade;
    // [ default ] interface ICQGTradingSystemTrade

struct __declspec(uuid("23c8656d-1a39-4f01-803d-ad43ea4dea3a"))
CQGTradeExitDefinition;
    // [ default ] interface ICQGTradeExitDefinition

struct __declspec(uuid("4a5269de-f7d8-41ad-872a-c7552a0f86fd"))
CQGTradingSystemTradesRow;
    // [ default ] interface ICQGTradingSystemTradesRow

struct __declspec(uuid("fbfaba84-5bd5-4335-8a86-aea5bb8876f6"))
CQGTradingSystemTradesRows;
    // [ default ] interface ICQGTradingSystemTradesRows

struct __declspec(uuid("404df3b9-40d5-4465-9725-a9718cdaf7fe"))
CQGTradingSystemStatistics;
    // [ default ] interface ICQGTradingSystemStatistics

struct __declspec(uuid("f81dd195-d156-4805-b0ef-987706a4145d"))
CQGTradingSystemStatisticsCollection;
    // [ default ] interface ICQGTradingSystemStatisticsCollection

struct __declspec(uuid("eaa0149f-7fb1-4baf-8866-cbf94f597fd7"))
CQGTradingSystemBaseBarParameter;
    // [ default ] interface ICQGTradingSystemBaseBarParameter

struct __declspec(uuid("80a27b43-1a67-4bb2-b892-e972b2f1382f"))
CQGTradingSystemBaseBarParameters;
    // [ default ] interface ICQGTradingSystemBaseBarParameters

struct __declspec(uuid("45d2f737-906a-4a81-835b-78e8e8e363eb"))
CQGTradingSystemStatisticsChangeInfo;
    // [ default ] interface ICQGTradingSystemStatisticsChangeInfo

struct __declspec(uuid("986240e6-2074-449e-81b0-65c260457c67"))
CQGTradeExitDefinitions;
    // [ default ] interface ICQGTradeExitDefinitions

struct __declspec(uuid("0a8b916e-9668-4df3-bd86-6a79e3c7619d"))
CQGTradingSystemTradeDefinitions;
    // [ default ] interface ICQGTradingSystemTradeDefinitions

struct __declspec(uuid("e9db1ea4-4ba3-48c0-a36c-c04e0d206068"))
CQGCustomStudyRequest;
    // [ default ] interface ICQGCustomStudyRequest

struct __declspec(uuid("3863c032-6c3e-462e-910b-58f3808e05e3"))
CQGCurveDefinition;
    // [ default ] interface ICQGCurveDefinition

struct __declspec(uuid("4733c005-e857-4861-bdb3-2b8103eceed5"))
CQGCurveDefinitions;
    // [ default ] interface ICQGCurveDefinitions

struct __declspec(uuid("a01628f9-6ba5-41d3-bc9c-885324d41b96"))
CQGConditionRequest;
    // [ default ] interface ICQGConditionRequest

struct __declspec(uuid("60410322-1844-475f-895e-dc0b147f2c98"))
CQGDataSource;
    // [ default ] interface ICQGDataSource

struct __declspec(uuid("7a52cb1d-b85f-4099-afad-613a5fe51222"))
CQGDataSources;
    // [ default ] interface ICQGDataSources

struct __declspec(uuid("626accbe-62e1-4750-a554-8562db127ba9"))
CQGDataSourceSymbol;
    // [ default ] interface ICQGDataSourceSymbol

struct __declspec(uuid("89289db8-d0e4-41ad-bfba-0014e14fca41"))
CQGDataSourceSymbols;
    // [ default ] interface ICQGDataSourceSymbols

struct __declspec(uuid("8bec8492-2392-41a3-8c57-cd9a6a466149"))
CQGSessionsCollection;
    // [ default ] interface ICQGSessionsCollection

struct __declspec(uuid("02295f22-224c-4117-8859-3450c0efca11"))
CQGHistoricalSessionsRequest;
    // [ default ] interface ICQGHistoricalSessionsRequest

struct __declspec(uuid("4457c7a6-9ab6-4088-86b4-b357b2e5febc"))
CQGHoliday;
    // [ default ] interface ICQGHoliday

struct __declspec(uuid("3a6d25e0-5295-4d58-8e88-c8d4154232cd"))
CQGHolidays;
    // [ default ] interface ICQGHolidays

struct __declspec(uuid("b6a295c6-daa4-4276-8bab-413de091051a"))
CQGAccountSummary;
    // [ default ] interface ICQGAccountSummary

struct __declspec(uuid("0c7aa3f2-eac6-4c20-82d2-e7ea30167c8d"))
CQGAccountSummaries;
    // [ default ] interface ICQGAccountSummaries

struct __declspec(uuid("9a422791-5429-4432-964c-8d1fbcd44efd"))
CQGTicksRequest;
    // [ default ] interface ICQGTicksRequest

struct __declspec(uuid("6eaa2509-cb4f-480b-8fd9-dbfb5ce9f6f1"))
CQGBarsTimestamps;
    // [ default ] interface ICQGBarsTimestamps

struct __declspec(uuid("18ce07fe-67ca-4348-b4a1-0d19af4daae8"))
CQGExpressionOutputs;
    // [ default ] interface ICQGExpressionOutputs

struct __declspec(uuid("7376eed4-9a1c-4c4c-81fe-7f174fc4fae9"))
CQGExpression;
    // [ default ] interface ICQGExpression

struct __declspec(uuid("ecdc5571-2f6c-45c8-a405-b08a4944d20b"))
CQGExpressions;
    // [ default ] interface ICQGExpressions

struct __declspec(uuid("ec27194c-ec5e-41e6-a299-5552f0809ba3"))
CQGExpressionRequest;
    // [ default ] interface ICQGExpressionRequest

struct __declspec(uuid("f7b810e2-f228-404c-b713-a4a6addeb21e"))
CQGExpressionOutputHeaders;
    // [ default ] interface ICQGExpressionOutputHeaders

struct __declspec(uuid("c3593b21-ebed-4adb-b033-6222e4ef8980"))
CQGInstrumentsGroupRequest;
    // [ default ] interface ICQGInstrumentsGroupRequest

struct __declspec(uuid("d510415b-7136-40cd-811a-d6baeabda143"))
CQGInstrumentsGroups;
    // [ default ] interface ICQGInstrumentsGroups

struct __declspec(uuid("14a98331-af36-4d00-8e32-bd26f79fe7de"))
CQGManualFill;
    // [ default ] interface ICQGManualFill

struct __declspec(uuid("adff59c0-ce82-4119-b91e-6b2238fe46e0"))
CQGManualFills;
    // [ default ] interface ICQGManualFills

struct __declspec(uuid("1de09d9a-2fb9-4b73-a2f4-6d61eb2a7fdd"))
CQGManualFillsCollection;
    // [ default ] interface ICQGManualFillsCollection

struct __declspec(uuid("950ba764-6a36-420d-899b-798336a0c6c8"))
CQGManualFillRequest;
    // [ default ] interface ICQGManualFillRequest

struct __declspec(uuid("1dfcc4c4-86c4-4a9c-9c3a-2aba7653a0f9"))
ICQGInstrument : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DataSubscriptionLevel (
        /*[out,retval]*/ enum eDataSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_DataSubscriptionLevel (
        /*[in]*/ enum eDataSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_CEL (
        /*[out,retval]*/ struct ICQGCEL * * ppVal ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Currency (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ExpirationDate (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_InitialMargin (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_MaintenanceMargin (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_SessionMask (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_SessionNumber (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Commodity (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Country (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_MonthChar (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Month (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Strike (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentType (
        /*[out,retval]*/ enum eInstrumentType * pVal ) = 0;
      virtual HRESULT __stdcall get_Year (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_YearString (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_TickSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TickValue (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_NetChange (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_DTE (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_IsDownTick (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_IsUpTick (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_IsFastMarket (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tagName,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tagName,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_UnderlyingInstrument (
        /*[out,retval]*/ struct ICQGInstrument * * ppVal ) = 0;
      virtual HRESULT __stdcall get_UnderlyingInstrumentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Ask (
        /*[out,retval]*/ struct ICQGQuote * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Bid (
        /*[out,retval]*/ struct ICQGQuote * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Trade (
        /*[out,retval]*/ struct ICQGQuote * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Quotes (
        /*[out,retval]*/ struct ICQGQuotes * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct ICQGInstrumentProperties * * ppVal ) = 0;
      virtual HRESULT __stdcall get_DOMAsks (
        /*[out,retval]*/ struct ICQGDOMQuotes * * ppVal ) = 0;
      virtual HRESULT __stdcall get_DOMBids (
        /*[out,retval]*/ struct ICQGDOMQuotes * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Sessions (
        /*[out,retval]*/ struct ICQGSessions * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ServerTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_PreferredSessionsName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_BBAType (
        /*[out,retval]*/ enum eDOMandBBAType * pVal ) = 0;
      virtual HRESULT __stdcall put_BBAType (
        /*[in]*/ enum eDOMandBBAType pVal ) = 0;
      virtual HRESULT __stdcall get_TodayCTotalVolume (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_YesterdayCTotalVolume (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_YCOI (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_ExchangeID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ExchangeAbbreviation (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall ToDisplayPrice (
        /*[in]*/ double correct_price,
        /*[out,retval]*/ BSTR * pRetVal ) = 0;
      virtual HRESULT __stdcall FromDisplayPrice (
        /*[in]*/ BSTR display_price,
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall GetNearestTradeablePrice (
        /*[in]*/ double price_,
        /*[out,retval]*/ double * pRetVal ) = 0;
      virtual HRESULT __stdcall get_Scale (
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall get_DOMBookLimit (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DOMBookLimit (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_TickSizeFractionNumerator (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_TickSizeFractionDenominator (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_QuoteLevel (
        /*[out,retval]*/ enum eQuoteSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall get_PropertyLevel (
        /*[out,retval]*/ enum ePropertySubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall get_DOMStatus (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_DOMStatus (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall GetTickSizeFor (
        /*[in]*/ double Price,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall GetTickValueFor (
        /*[in]*/ double Price,
        /*[out,retval]*/ double * pVal ) = 0;
};

struct __declspec(uuid("b56ad9a8-680a-4d30-9a34-80534cc0ef3b"))
ICQGInstruments : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT index_,
        /*[out,retval]*/ struct ICQGInstrument * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("ffd6bcf9-286d-4204-9382-9f0fec4527a7"))
ICQGInstrumentsGroup : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Instruments (
        /*[out,retval]*/ struct ICQGInstruments * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Request (
        /*[out,retval]*/ struct ICQGInstrumentsGroupRequest * * ppVal ) = 0;
};

struct __declspec(uuid("4a58d6c2-fbd6-441c-8108-b21ef3e99ef7"))
ICQGInstrumentsGroups : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT index_,
        /*[out,retval]*/ struct ICQGInstrumentsGroup * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("a40716a6-5f5d-4bec-96ed-f72d2f77fb46"))
ICQGQuote : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Price (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Volume (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ServerTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eQuoteType * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_IsValid (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Instrument (
        /*[out,retval]*/ struct ICQGInstrument * * ppVal ) = 0;
      virtual HRESULT __stdcall get_HasVolume (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("7e1318d2-da8e-4106-8158-ae3829fb36e6"))
ICQGQuotes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ enum eQuoteType quote_type,
        /*[out,retval]*/ struct ICQGQuote * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("4d4de503-a9d9-44a6-b50c-cc435d3eda23"))
ICQGInstrumentProperty : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eInstrumentProperty * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Instrument (
        /*[out,retval]*/ struct ICQGInstrument * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ServerTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
};

struct __declspec(uuid("fa7441bd-4ee8-4bb2-89d8-c86a2f098b48"))
ICQGInstrumentProperties : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ enum eInstrumentProperty instrument_property,
        /*[out,retval]*/ struct ICQGInstrumentProperty * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("756fe037-bdbe-4cd2-95b5-0e4132e332c8"))
ICQGDOMQuotes : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGQuote * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByPrice (
        /*[in]*/ double price_,
        /*[in]*/ VARIANT_BOOL round_to_better,
        /*[out,retval]*/ struct ICQGQuote * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("a8c92de2-8dc4-4859-800a-ad5b2b6d1bac"))
ICQGSession : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_StartTime (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_EndTime (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Number (
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall get_PrimaryFlag (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Instrument (
        /*[out,retval]*/ struct ICQGInstrument * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ActivationDate (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_WorkingWeekDays (
        /*[out,retval]*/ enum eSessionWeekDays * pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eSymbolSessionType * pVal ) = 0;
      virtual HRESULT __stdcall IsTimeInSession (
        /*[in]*/ DATE date_time,
        /*[in]*/ VARIANT_BOOL use_session_valid_times,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_ValidStartTime (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ValidEndTime (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_DayStartsYesterday (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("af3d6f55-77b3-4468-9270-3752207e4619"))
_ICQGCELInstrumentEvents : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall InstrumentSubscribed (
        /*[in]*/ BSTR symbol_,
        /*[in]*/ struct ICQGInstrument * cqg_instrument ) = 0;
      virtual HRESULT __stdcall InstrumentChanged (
        /*[in]*/ struct ICQGInstrument * cqg_instrument,
        /*[in]*/ struct ICQGQuotes * cqg_quotes,
        /*[in]*/ struct ICQGInstrumentProperties * cqg_instrument_properties ) = 0;
      virtual HRESULT __stdcall InstrumentDOMChanged (
        /*[in]*/ struct ICQGInstrument * cqg_instrument,
        /*[in]*/ struct ICQGDOMQuotes * prev_asks,
        /*[in]*/ struct ICQGDOMQuotes * prev_bids ) = 0;
      virtual HRESULT __stdcall IncorrectSymbol (
        /*[in]*/ BSTR symbol_ ) = 0;
      virtual HRESULT __stdcall CommodityInstrumentsResolved (
        /*[in]*/ BSTR commodity_name,
        /*[in]*/ enum eInstrumentType instrument_types,
        /*[in]*/ struct ICQGCommodityInstruments * cqg_commodity_intruments ) = 0;
      virtual HRESULT __stdcall InstrumentsGroupResolved (
        /*[in]*/ struct ICQGInstrumentsGroup * instruments_group,
        /*[in]*/ struct ICQGError * cqg_error ) = 0;
      virtual HRESULT __stdcall InstrumentsGroupChanged (
        /*[in]*/ enum eChangeType change_type,
        /*[in]*/ struct ICQGInstrumentsGroup * instruments_group,
        /*[in]*/ struct ICQGStringCollection * instruments_names ) = 0;
};

struct __declspec(uuid("c8394a08-eac1-4902-aff5-186c5ea80603"))
ICQGCEL : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Configuration (
        /*[out,retval]*/ struct CQGCELConfiguration * pVal ) = 0;
      virtual HRESULT __stdcall put_Configuration (
        /*[in]*/ struct CQGCELConfiguration * pVal ) = 0;
      virtual HRESULT __stdcall get_Accounts (
        /*[out,retval]*/ struct ICQGAccounts * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Environment (
        /*[out,retval]*/ struct ICQGEnvironment * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Instruments (
        /*[out,retval]*/ struct ICQGInstruments * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Logger (
        /*[out,retval]*/ struct ICQGLogger * * ppVal ) = 0;
      virtual HRESULT __stdcall get_IsStarted (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_AccountSubscriptionLevel (
        /*[out,retval]*/ enum eAccountSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_AccountSubscriptionLevel (
        /*[in]*/ enum eAccountSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_CurrencyRates (
        /*[out,retval]*/ struct ICQGCurrencyRates * * pVal ) = 0;
      virtual HRESULT __stdcall get_APIConfiguration (
        /*[out,retval]*/ struct ICQGAPIConfig * * pVal ) = 0;
      virtual HRESULT __stdcall get_Orders (
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
      virtual HRESULT __stdcall get_InternalOrders (
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
      virtual HRESULT __stdcall Startup ( ) = 0;
      virtual HRESULT __stdcall Shutdown ( ) = 0;
      virtual HRESULT __stdcall NewInstrument (
        /*[in]*/ BSTR symbol_ ) = 0;
      virtual HRESULT __stdcall RemoveInstrument (
        /*[in]*/ struct ICQGInstrument * cqg_instrument ) = 0;
      virtual HRESULT __stdcall RemoveAllInstruments ( ) = 0;
      virtual HRESULT __stdcall IsValid (
        /*[in]*/ VARIANT value_or_object,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall RequestCommodityInstruments (
        /*[in]*/ BSTR commodity_name,
        /*[in]*/ enum eInstrumentType instrument_types,
        /*[in]*/ VARIANT_BOOL tradable_only ) = 0;
      virtual HRESULT __stdcall CreateOrder (
        /*[in]*/ enum eOrderType order_type,
        /*[in]*/ struct ICQGInstrument * cqg_instrument,
        /*[in]*/ struct ICQGAccount * cqg_account,
        /*[in]*/ long order_quantity,
        /*[in]*/ enum eOrderSide order_side,
        /*[in]*/ double limit_price,
        /*[in]*/ double stop_price,
        /*[in]*/ BSTR ue_name_part,
        /*[out,retval]*/ struct ICQGOrder * * ppVal ) = 0;
      virtual HRESULT __stdcall CancelAllOrders (
        /*[in]*/ struct ICQGAccount * cqg_account,
        /*[in]*/ struct ICQGInstrument * cqg_instrument,
        /*[in]*/ VARIANT_BOOL from_all_traders,
        /*[in]*/ VARIANT_BOOL parked_,
        /*[in]*/ enum eOrderSide order_side ) = 0;
      virtual HRESULT __stdcall ActivateAllOrders (
        /*[in]*/ struct ICQGAccount * cqg_account,
        /*[in]*/ struct ICQGInstrument * cqg_instrument,
        /*[in]*/ VARIANT_BOOL from_all_traders,
        /*[in]*/ enum eOrderSide order_side ) = 0;
      virtual HRESULT __stdcall QueryOrders (
        /*[in]*/ struct ICQGAccount * cqg_account,
        /*[in]*/ struct ICQGInstrument * cqg_instrument,
        /*[in]*/ enum eOrderStatusFilter status_filter,
        /*[in]*/ DATE date_,
        /*[in]*/ enum eOrderSide order_side,
        /*[out,retval]*/ struct ICQGOrdersQuery * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestDataSources ( ) = 0;
      virtual HRESULT __stdcall RequestDataSourceSymbols (
        /*[in]*/ BSTR data_source_abbreviation ) = 0;
      virtual HRESULT __stdcall RequestCustomSessions ( ) = 0;
      virtual HRESULT __stdcall RequestTradableCommodities (
        /*[in]*/ long gw_account_id ) = 0;
      virtual HRESULT __stdcall CreateTicksRequest (
        /*[out,retval]*/ struct ICQGTicksRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestTicks (
        /*[in]*/ struct ICQGTicksRequest * cqg_ticks_request,
        /*[out,retval]*/ struct ICQGTicks * * ppVal ) = 0;
      virtual HRESULT __stdcall RemoveTicks (
        /*[in]*/ struct ICQGTicks * cqg_ticks ) = 0;
      virtual HRESULT __stdcall RemoveAllTicks ( ) = 0;
      virtual HRESULT __stdcall get_AllTicks (
        /*[out,retval]*/ struct ICQGTicksCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateTimedBarsRequest (
        /*[out,retval]*/ struct ICQGTimedBarsRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestTimedBars (
        /*[in]*/ struct ICQGTimedBarsRequest * cqg_timed_bars_request,
        /*[out,retval]*/ struct ICQGTimedBars * * ppVal ) = 0;
      virtual HRESULT __stdcall RemoveTimedBars (
        /*[in]*/ struct ICQGTimedBars * cqg_timed_bars ) = 0;
      virtual HRESULT __stdcall RemoveAllTimedBars ( ) = 0;
      virtual HRESULT __stdcall get_AllTimedBars (
        /*[out,retval]*/ struct ICQGTimedBarsCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateConstantVolumeBarsRequest (
        /*[out,retval]*/ struct ICQGConstantVolumeBarsRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestConstantVolumeBars (
        /*[in]*/ struct ICQGConstantVolumeBarsRequest * cqg_constant_volume_bars_request,
        /*[out,retval]*/ struct ICQGConstantVolumeBars * * ppVal ) = 0;
      virtual HRESULT __stdcall RemoveConstantVolumeBars (
        /*[in]*/ struct ICQGConstantVolumeBars * cqg_constant_volume_bars ) = 0;
      virtual HRESULT __stdcall RemoveAllConstantVolumeBars ( ) = 0;
      virtual HRESULT __stdcall get_AllConstantVolumeBars (
        /*[out,retval]*/ struct ICQGConstantVolumeBarsCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall CreatePointAndFigureBarsRequest (
        /*[out,retval]*/ struct ICQGPointAndFigureBarsRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestPointAndFigureBars (
        /*[in]*/ struct ICQGPointAndFigureBarsRequest * cqg_point_and_figure_bars_request,
        /*[out,retval]*/ struct ICQGPointAndFigureBars * * ppVal ) = 0;
      virtual HRESULT __stdcall RemovePointAndFigureBars (
        /*[in]*/ struct ICQGPointAndFigureBars * cqg_point_and_figure_bars ) = 0;
      virtual HRESULT __stdcall RemoveAllPointAndFigureBars ( ) = 0;
      virtual HRESULT __stdcall get_AllPointAndFigureBars (
        /*[out,retval]*/ struct ICQGPointAndFigureBarsCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateYieldsRequest (
        /*[out,retval]*/ struct ICQGYieldsRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestYields (
        /*[in]*/ struct ICQGYieldsRequest * cqg_yields_request,
        /*[out,retval]*/ struct ICQGYields * * ppVal ) = 0;
      virtual HRESULT __stdcall RemoveYields (
        /*[in]*/ struct ICQGYields * cqg_yields ) = 0;
      virtual HRESULT __stdcall RemoveAllYields ( ) = 0;
      virtual HRESULT __stdcall get_AllYields (
        /*[out,retval]*/ struct ICQGYieldsCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateTFlowBarsRequest (
        /*[out,retval]*/ struct ICQGTFlowBarsRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestTFlowBars (
        /*[in]*/ struct ICQGTFlowBarsRequest * cqg_tflow_bars_request,
        /*[out,retval]*/ struct ICQGTFlowBars * * ppVal ) = 0;
      virtual HRESULT __stdcall RemoveTFlowBars (
        /*[in]*/ struct ICQGTFlowBars * cqg_tflow_bars ) = 0;
      virtual HRESULT __stdcall RemoveAllTFlowBars ( ) = 0;
      virtual HRESULT __stdcall get_AllTFlowBars (
        /*[out,retval]*/ struct ICQGTFlowBarsCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestCustomStudyDefinitions ( ) = 0;
      virtual HRESULT __stdcall RequestTradingSystemDefinitions ( ) = 0;
      virtual HRESULT __stdcall RequestConditionDefinitions ( ) = 0;
      virtual HRESULT __stdcall RequestQFormulaDefinitions ( ) = 0;
      virtual HRESULT __stdcall CreateCustomStudyRequest (
        /*[in]*/ BSTR name_or_abbr,
        /*[out,retval]*/ struct ICQGCustomStudyRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestCustomStudy (
        /*[in]*/ struct ICQGCustomStudyRequest * cqg_custom_study_request,
        /*[out,retval]*/ struct ICQGCustomStudy * * ppVal ) = 0;
      virtual HRESULT __stdcall RemoveCustomStudy (
        /*[in]*/ struct ICQGCustomStudy * cqg_custom_study ) = 0;
      virtual HRESULT __stdcall RemoveAllCustomStudies ( ) = 0;
      virtual HRESULT __stdcall get_AllCustomStudies (
        /*[out,retval]*/ struct ICQGCustomStudies * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateConditionRequest (
        /*[in]*/ BSTR condition_name,
        /*[out,retval]*/ struct ICQGConditionRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestCondition (
        /*[in]*/ struct ICQGConditionRequest * cqg_condition_request,
        /*[out,retval]*/ struct ICQGCondition * * ppVal ) = 0;
      virtual HRESULT __stdcall RemoveCondition (
        /*[in]*/ struct ICQGCondition * cqg_condition ) = 0;
      virtual HRESULT __stdcall RemoveAllConditions ( ) = 0;
      virtual HRESULT __stdcall get_AllConditions (
        /*[out,retval]*/ struct ICQGConditions * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateTradingSystemRequest (
        /*[in]*/ BSTR name_or_abbr,
        /*[out,retval]*/ struct ICQGTradingSystemRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestTradingSystem (
        /*[in]*/ struct ICQGTradingSystemRequest * cqg_trading_system_request,
        /*[out,retval]*/ struct ICQGTradingSystem * * ppVal ) = 0;
      virtual HRESULT __stdcall RemoveTradingSystem (
        /*[in]*/ struct ICQGTradingSystem * cqg_trading_system ) = 0;
      virtual HRESULT __stdcall RemoveAllTradingSystems ( ) = 0;
      virtual HRESULT __stdcall get_AllTradingSystems (
        /*[out,retval]*/ struct ICQGTradingSystems * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateExpressionRequest (
        /*[out,retval]*/ struct ICQGExpressionRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestExpression (
        /*[in]*/ struct ICQGExpressionRequest * cqg_expression_request,
        /*[out,retval]*/ struct ICQGExpression * * ppVal ) = 0;
      virtual HRESULT __stdcall RemoveExpression (
        /*[in]*/ struct ICQGExpression * cqg_expression ) = 0;
      virtual HRESULT __stdcall RemoveAllExpressions ( ) = 0;
      virtual HRESULT __stdcall get_AllExpressions (
        /*[out,retval]*/ struct ICQGExpressions * * ppVal ) = 0;
      virtual HRESULT __stdcall GWLogon (
        /*[in]*/ BSTR username_,
        /*[in]*/ BSTR password_ ) = 0;
      virtual HRESULT __stdcall GWLogoff ( ) = 0;
      virtual HRESULT __stdcall CreateOrderByInstrumentName (
        /*[in]*/ enum eOrderType order_type,
        /*[in]*/ BSTR instrument_name,
        /*[in]*/ struct ICQGAccount * cqg_account,
        /*[in]*/ long order_quantity,
        /*[in]*/ enum eOrderSide order_side,
        /*[in]*/ double limit_price,
        /*[in]*/ double stop_price,
        /*[in]*/ BSTR ue_name_part,
        /*[out,retval]*/ struct ICQGOrder * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateAlgorithmicOrderDefinitions (
        /*[out,retval]*/ struct ICQGAlgorithmicOrderDefinitions * * ppVal ) = 0;
      virtual HRESULT __stdcall RegisterAlgorithmicOrder (
        /*[in]*/ BSTR guid_,
        /*[in]*/ BSTR name_,
        /*[in]*/ BSTR abbrv_,
        /*[in]*/ BSTR description_,
        /*[in]*/ struct ICQGAlgorithmicOrderDefinitions * definitions_,
        /*[in]*/ long icon_index ) = 0;
      virtual HRESULT __stdcall UnregisterAlgorithmicOrder (
        /*[in]*/ BSTR guid_ ) = 0;
      virtual HRESULT __stdcall get_DirectEventsAccessor (
        /*[out,retval]*/ struct ICQGDirectEventsAccessor * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateInstrumentsGroupRequest (
        /*[out,retval]*/ struct ICQGInstrumentsGroupRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestInstrumentsGroup (
        /*[in]*/ struct ICQGInstrumentsGroupRequest * group_request,
        /*[in]*/ VARIANT_BOOL trace_group_changes ) = 0;
      virtual HRESULT __stdcall RemoveInstrumentsGroup (
        /*[in]*/ struct ICQGInstrumentsGroup * instruments_group ) = 0;
      virtual HRESULT __stdcall get_AllInstrumentsGroups (
        /*[out,retval]*/ struct ICQGInstrumentsGroups * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestBarsTimestamps (
        /*[in]*/ struct ICQGTimedBarsRequest * cqg_timestamps_request,
        /*[out,retval]*/ struct ICQGBarsTimestamps * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateAccountsCollection (
        /*[out,retval]*/ struct ICQGAccounts * * ppVal ) = 0;
      virtual HRESULT __stdcall DefineStrategy (
        /*[in]*/ BSTR request_string_,
        /*[out,retval]*/ struct ICQGStrategyDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_AllStrategyDefinitions (
        /*[out,retval]*/ struct ICQGStrategyDefinitions * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateExecutionPattern (
        /*[in]*/ struct ICQGStrategyDefinition * cqg_definition,
        /*[in]*/ enum eOrderType order_type,
        /*[out,retval]*/ struct ICQGExecutionPattern * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateStrategyOrder (
        /*[in]*/ enum eOrderType order_type,
        /*[in]*/ struct ICQGStrategyDefinition * cqg_definition,
        /*[in]*/ struct ICQGAccount * cqg_account,
        /*[in]*/ struct ICQGAccounts * cqg_accounts,
        /*[in]*/ long order_quantity,
        /*[in]*/ enum eOrderSide order_side,
        /*[in]*/ double limit_price,
        /*[in]*/ double stop_price,
        /*[in]*/ BSTR ue_name_part,
        /*[out,retval]*/ struct ICQGOrder * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestTradableExchanges (
        /*[in]*/ long gw_account_id ) = 0;
      virtual HRESULT __stdcall CreateHistoricalSessionsRequest (
        /*[out,retval]*/ struct ICQGHistoricalSessionsRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestHistoricalSessions (
        /*[in]*/ struct ICQGHistoricalSessionsRequest * cqg_historical_sessions_request ) = 0;
      virtual HRESULT __stdcall QuerySummariesStatement (
        /*[in]*/ long gw_account_id,
        /*[in]*/ DATE date_ ) = 0;
      virtual HRESULT __stdcall QueryPositionsStatement (
        /*[in]*/ long gw_account_id,
        /*[in]*/ DATE date_ ) = 0;
      virtual HRESULT __stdcall CreateManualFillRequest (
        /*[in]*/ enum eManualFillUpdateType update_type,
        /*[in]*/ struct ICQGManualFill * manual_fill,
        /*[out,retval]*/ struct ICQGManualFillRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall RequestManualFillUpdate (
        /*[in]*/ struct ICQGManualFillRequest * cqg_manual_fill_request ) = 0;
      virtual HRESULT __stdcall RequestManualFills (
        /*[in]*/ long gw_account_id,
        /*[in]*/ enum eManualFillsDataLevel update_level ) = 0;
      virtual HRESULT __stdcall get_AllManualFills (
        /*[out,retval]*/ struct ICQGManualFillsCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall SubscribeNewInstrument (
        /*[in]*/ struct ICQGInstrumentSubscriptionRequest * instrument_request ) = 0;
      virtual HRESULT __stdcall CreateInstrumentRequest (
        /*[out,retval]*/ struct ICQGInstrumentSubscriptionRequest * * Request ) = 0;
      virtual HRESULT __stdcall GWOTPLogon (
        /*[in]*/ BSTR username_,
        /*[in]*/ BSTR password_,
        /*[in]*/ BSTR otpassword_ ) = 0;
      virtual HRESULT __stdcall get_OTPRequired (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall CreateOrderChain (
        /*[out,retval]*/ struct ICQGOrderChain * * order_chain ) = 0;
      virtual HRESULT __stdcall PlaceCompoundOrder (
        /*[in]*/ struct ICQGOrderChain * order_chain ) = 0;
      virtual HRESULT __stdcall ModifyCompoundOrder (
        /*[in]*/ long compound_order_id,
        /*[in]*/ BSTR compound_order_guid,
        /*[in]*/ struct ICQGOrderChain * order_chain ) = 0;
      virtual HRESULT __stdcall LogOn (
        /*[in]*/ BSTR username_,
        /*[in]*/ BSTR password_ ) = 0;
      virtual HRESULT __stdcall ChangePassword (
        /*[in]*/ BSTR username_,
        /*[in]*/ BSTR old_password,
        /*[in]*/ BSTR new_password ) = 0;
      virtual HRESULT __stdcall ChangeRemoteOpenAPIServer (
        /*[in]*/ BSTR server_address ) = 0;
      virtual HRESULT __stdcall TerminateCQGIC (
        /*[in]*/ VARIANT_BOOL start_again ) = 0;
      virtual HRESULT __stdcall CreateStrategyOrderByExpression (
        /*[in]*/ enum eOrderType order_type,
        /*[in]*/ BSTR expression_string,
        /*[in]*/ struct ICQGAccount * cqg_account,
        /*[in]*/ struct ICQGAccounts * cqg_accounts,
        /*[in]*/ long order_quantity,
        /*[in]*/ enum eOrderSide order_side,
        /*[in]*/ double limit_price,
        /*[in]*/ double stop_price,
        /*[in]*/ BSTR ue_name_part,
        /*[out,retval]*/ struct ICQGOrder * * ppVal ) = 0;
      virtual HRESULT __stdcall CreateOrderActionRequest (
        /*[out,retval]*/ struct ICQGOrderActionRequest * * cqg_order_action_request ) = 0;
      virtual HRESULT __stdcall CancelAllOrdersEx (
        /*[in]*/ struct ICQGOrderActionRequest * cqg_order_action_request ) = 0;
      virtual HRESULT __stdcall ActivateAllOrdersEx (
        /*[in]*/ struct ICQGOrderActionRequest * cqg_order_action_request ) = 0;
};

struct __declspec(uuid("e4d0409c-b915-442c-940c-ad1d023b826b"))
ICQGEnvironment : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CELVersion (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_CQGVersion (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_GWConnectionStatus (
        /*[out,retval]*/ enum eConnectionStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_DataConnectionStatus (
        /*[out,retval]*/ enum eConnectionStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_LineTime (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_LocalTime (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_MessagesPending (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_CEL (
        /*[out,retval]*/ struct ICQGCEL * * ppVal ) = 0;
      virtual HRESULT __stdcall get_GWLogonName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
      virtual HRESULT __stdcall get_OrdersPending (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_CQGSerialNumber (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_RemoteOpenAPISession (
        /*[out,retval]*/ struct ICQGRemoteOpenAPISession * * ppVal ) = 0;
};

struct __declspec(uuid("d1c6eb96-0d1b-454f-8f4e-e6c7ea4ecffa"))
ICQGLogger : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CEL (
        /*[out,retval]*/ struct ICQGCEL * * ppVal ) = 0;
      virtual HRESULT __stdcall Log (
        /*[in]*/ BSTR content_,
        /*[in]*/ enum eLogSeverity severity_ ) = 0;
};

struct __declspec(uuid("0f5fbd5c-f5e6-421c-9ebd-732938099785"))
ICQGCurrencyRate : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CEL (
        /*[out,retval]*/ struct ICQGCEL * * ppVal ) = 0;
      virtual HRESULT __stdcall get_FcmID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_CurrencyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_BaseCurrencyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Rate (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_ServerTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
};

struct __declspec(uuid("0b5ed36d-c0cf-42a4-8b92-8bbca9c97ddc"))
ICQGCurrencyRates : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long fcm_id,
        /*[in]*/ BSTR currency_,
        /*[in]*/ BSTR base_currency,
        /*[out,retval]*/ struct ICQGCurrencyRate * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("5fafc409-52ef-4885-85be-ac9d072d61df"))
_ICQGCELGeneralEvents : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall CELStarted ( ) = 0;
      virtual HRESULT __stdcall LineTimeChanged (
        /*[in]*/ DATE new_line_time ) = 0;
      virtual HRESULT __stdcall GWConnectionStatusChanged (
        /*[in]*/ enum eConnectionStatus new_status ) = 0;
      virtual HRESULT __stdcall DataConnectionStatusChanged (
        /*[in]*/ enum eConnectionStatus new_status ) = 0;
      virtual HRESULT __stdcall IsReady (
        /*[out]*/ enum eReadyStatus * ready_status ) = 0;
      virtual HRESULT __stdcall OnIdle ( ) = 0;
      virtual HRESULT __stdcall DataError (
        /*[in]*/ IDispatch * cqg_error,
        /*[in]*/ BSTR error_description ) = 0;
      virtual HRESULT __stdcall CurrencyRatesChanged (
        /*[in]*/ struct ICQGCurrencyRates * cqg_currency_rates ) = 0;
};

struct __declspec(uuid("cbfa3c2a-3548-4cb6-affd-e184f7b8bc01"))
ICQGAccounts : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long gw_account_id,
        /*[out,retval]*/ struct ICQGAccount * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByFCM (
        /*[in]*/ BSTR fcm_account_id,
        /*[in]*/ long fcm_id,
        /*[out,retval]*/ struct ICQGAccount * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ItemByIndex (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGAccount * * ppVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ struct ICQGAccount * cqg_account ) = 0;
};

struct __declspec(uuid("be8133a9-b6e7-4063-b84d-177341b5d7cd"))
ICQGAccount : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CEL (
        /*[out,retval]*/ struct ICQGCEL * * ppVal ) = 0;
      virtual HRESULT __stdcall get_FcmAccountID (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_FcmID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_GWAccountID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_GWAccountName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_ReportingCurrency (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Summary (
        /*[out,retval]*/ struct ICQGAccountSummary * * ppVal ) = 0;
      virtual HRESULT __stdcall get_CurrencySummaries (
        /*[out,retval]*/ struct ICQGAccountSummaries * * pVal ) = 0;
      virtual HRESULT __stdcall get_Positions (
        /*[out,retval]*/ struct ICQGPositions * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ServerTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_DateOfLastStatement (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_PositionSubcriptionLevel (
        /*[out,retval]*/ enum ePositionSubscriptionLevel * pVal ) = 0;
      virtual HRESULT __stdcall put_PositionSubcriptionLevel (
        /*[in]*/ enum ePositionSubscriptionLevel pVal ) = 0;
      virtual HRESULT __stdcall get_AutoSubscribeInstruments (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_AutoSubscribeInstruments (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Orders (
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
      virtual HRESULT __stdcall get_InternalOrders (
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
      virtual HRESULT __stdcall get_FcmClass (
        /*[out,retval]*/ enum eFcmClass * pVal ) = 0;
      virtual HRESULT __stdcall get_FcmName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_AuthorizedTraders (
        /*[out,retval]*/ struct ICQGStringCollection * * pVal ) = 0;
      virtual HRESULT __stdcall get_AccountMarginDetailing (
        /*[out,retval]*/ enum eAccountMarginDetailing * pVal ) = 0;
      virtual HRESULT __stdcall put_AccountMarginDetailing (
        /*[in]*/ enum eAccountMarginDetailing pVal ) = 0;
      virtual HRESULT __stdcall get_TotalMarginValue (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_TotalPurchasingPower (
        /*[out,retval]*/ double * pVal ) = 0;
};

struct __declspec(uuid("43df66ea-d9bf-4092-aeb5-63a2be056108"))
ICQGAccountSummary : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Account (
        /*[out,retval]*/ struct ICQGAccount * * ppVal ) = 0;
      virtual HRESULT __stdcall get_CurrencyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall Balance (
        /*[in]*/ long day_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall MVO (
        /*[in]*/ long day_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall OTE (
        /*[in]*/ long day_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall NLV (
        /*[in]*/ long day_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall UPL (
        /*[in]*/ long day_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall CashExcess (
        /*[in]*/ long day_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall InitialMargin (
        /*[in]*/ long day_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall MaintenanceMargin (
        /*[in]*/ long day_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall Collaterals (
        /*[in]*/ long day_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_ManualFillsInvolved (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall ProfitLoss (
        /*[in]*/ long day_,
        /*[out,retval]*/ double * pVal ) = 0;
};

struct __declspec(uuid("4c45599a-31a9-4e68-806d-23d58740e5e9"))
ICQGAccountSummaries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT index_,
        /*[out,retval]*/ struct ICQGAccountSummary * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("c69174ac-49ed-4438-8cda-0b24fe015903"))
ICQGPosition : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Account (
        /*[out,retval]*/ struct ICQGAccount * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Instrument (
        /*[out,retval]*/ struct ICQGInstrument * * ppVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_AveragePrice (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Side (
        /*[out,retval]*/ enum eOrderSide * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ServerTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ProfitLoss (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_OTE (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_MVO (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_OpenTrades (
        /*[out,retval]*/ struct ICQGTrades * * pVal ) = 0;
      virtual HRESULT __stdcall get_MatchedTrades (
        /*[out,retval]*/ struct ICQGTrades * * pVal ) = 0;
      virtual HRESULT __stdcall get_ManualFillsInvolved (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_UPL (
        /*[out,retval]*/ double * pVal ) = 0;
};

struct __declspec(uuid("f73b036c-5c76-4768-913a-d7ebabadbe8d"))
ICQGPositions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ BSTR instrument_name,
        /*[out,retval]*/ struct ICQGPosition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ItemByIndex (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGPosition * * ppVal ) = 0;
};

struct __declspec(uuid("45391992-63ea-4251-b0f1-dc7b60503575"))
ICQGOrderActionRequest : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Account (
        /*[out,retval]*/ struct ICQGAccount * * ppVal ) = 0;
      virtual HRESULT __stdcall put_Account (
        /*[in]*/ struct ICQGAccount * ppVal ) = 0;
      virtual HRESULT __stdcall get_Instrument (
        /*[out,retval]*/ struct ICQGInstrument * * ppVal ) = 0;
      virtual HRESULT __stdcall put_Instrument (
        /*[in]*/ struct ICQGInstrument * ppVal ) = 0;
      virtual HRESULT __stdcall get_FromAllTraders (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_FromAllTraders (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_Parked (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Parked (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_OrderSide (
        /*[out,retval]*/ enum eOrderSide * pVal ) = 0;
      virtual HRESULT __stdcall put_OrderSide (
        /*[in]*/ enum eOrderSide pVal ) = 0;
      virtual HRESULT __stdcall get_AlgorithmID (
        /*[out,retval]*/ unsigned long * pVal ) = 0;
      virtual HRESULT __stdcall put_AlgorithmID (
        /*[in]*/ unsigned long pVal ) = 0;
};

struct __declspec(uuid("fe914ff5-433c-4c39-86f5-bad687c50fee"))
ICQGSummariesStatement : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GWAccountID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_StatementDate (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Summary (
        /*[out,retval]*/ struct ICQGAccountSummary * * ppVal ) = 0;
      virtual HRESULT __stdcall get_CurrencySummaries (
        /*[out,retval]*/ struct ICQGAccountSummaries * * ppVal ) = 0;
};

struct __declspec(uuid("bb2a3db5-95fd-4dff-8eef-088402dae965"))
ICQGPositionsStatement : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GWAccountID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_StatementDate (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Positions (
        /*[out,retval]*/ struct ICQGPositions * * ppVal ) = 0;
};

struct __declspec(uuid("ce04ff2b-4819-4097-8c1b-d570b9ea7bde"))
ICQGOrders : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ BSTR order_id,
        /*[out,retval]*/ struct ICQGOrder * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall SelectByInstrumentName (
        /*[in]*/ BSTR instrument_name,
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
      virtual HRESULT __stdcall SelectByTag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT tag_value,
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
      virtual HRESULT __stdcall SelectByOrderType (
        /*[in]*/ enum eOrderType order_type,
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
      virtual HRESULT __stdcall SelectByOrderStatus (
        /*[in]*/ enum eOrderStatus order_status,
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
      virtual HRESULT __stdcall SelectBySide (
        /*[in]*/ enum eOrderSide order_side,
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
      virtual HRESULT __stdcall AddToLiveOrders ( ) = 0;
      virtual HRESULT __stdcall get_ItemByGuid (
        /*[in]*/ BSTR order_guid,
        /*[out,retval]*/ struct ICQGOrder * * ppVal ) = 0;
      virtual HRESULT __stdcall SelectByProperty (
        /*[in]*/ enum eOrderProperty property_type,
        /*[in]*/ VARIANT property_value,
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
};

struct __declspec(uuid("01828f6e-4fd8-4156-80f3-8212b71ef585"))
ICQGOrdersQuery : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CEL (
        /*[out,retval]*/ struct ICQGCEL * * ppVal ) = 0;
      virtual HRESULT __stdcall get_QueryID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_FinalError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Orders (
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LastChunk (
        /*[out,retval]*/ struct ICQGOrders * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ServerTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall Cancel ( ) = 0;
      virtual HRESULT __stdcall get_Account (
        /*[out,retval]*/ struct ICQGAccount * * ppVal ) = 0;
};

struct __declspec(uuid("22a4b3f8-ae16-44f0-9022-951fcb651615"))
ICQGOrder : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct ICQGOrderProperties * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Account (
        /*[out,retval]*/ struct ICQGAccount * * ppVal ) = 0;
      virtual HRESULT __stdcall get_GWOrderID (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_GUID (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eOrderType * pVal ) = 0;
      virtual HRESULT __stdcall get_LimitPrice (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_LimitPrice (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_StopPrice (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall put_StopPrice (
        /*[in]*/ double pVal ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Side (
        /*[out,retval]*/ enum eOrderSide * pVal ) = 0;
      virtual HRESULT __stdcall get_FilledQuantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_RemainingQuantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_GWStatus (
        /*[out,retval]*/ enum eOrderStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_State (
        /*[out,retval]*/ enum eOrderLocalState * pVal ) = 0;
      virtual HRESULT __stdcall get_LastEvent (
        /*[out,retval]*/ enum eOrderEvent * pVal ) = 0;
      virtual HRESULT __stdcall get_DurationType (
        /*[out,retval]*/ enum eOrderDuration * pVal ) = 0;
      virtual HRESULT __stdcall put_DurationType (
        /*[in]*/ enum eOrderDuration pVal ) = 0;
      virtual HRESULT __stdcall get_OriginalOrderID (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Instrument (
        /*[out,retval]*/ struct ICQGInstrument * * ppVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tag_name,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_TimeActiveAt (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_UEName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_PlaceTime (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ServerTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Fills (
        /*[out,retval]*/ struct ICQGFills * * ppVal ) = 0;
      virtual HRESULT __stdcall get_CanBeModified (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_IsExternal (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_IsFinal (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall Place ( ) = 0;
      virtual HRESULT __stdcall PrepareModify (
        /*[out,retval]*/ struct ICQGOrderModify * * ppVal ) = 0;
      virtual HRESULT __stdcall Modify (
        /*[in]*/ struct ICQGOrderModify * cqg_order_modify ) = 0;
      virtual HRESULT __stdcall Cancel ( ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
      virtual HRESULT __stdcall get_CanBeCanceled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_Account (
        /*[in]*/ struct ICQGAccount * ppVal ) = 0;
      virtual HRESULT __stdcall put_Quantity (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall put_Side (
        /*[in]*/ enum eOrderSide pVal ) = 0;
      virtual HRESULT __stdcall put_Instrument (
        /*[in]*/ struct ICQGInstrument * ppVal ) = 0;
      virtual HRESULT __stdcall get_Transactions (
        /*[out,retval]*/ struct ICQGTransactions * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CanBeReplaced (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_CancelationInstruction (
        /*[out,retval]*/ enum eOrderCancelationType * pVal ) = 0;
      virtual HRESULT __stdcall put_CancelationInstruction (
        /*[in]*/ enum eOrderCancelationType pVal ) = 0;
      virtual HRESULT __stdcall get_OrderCheckMark (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_OrderCheckMark (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall SendCareOrderAck ( ) = 0;
      virtual HRESULT __stdcall get_AlgorithmID (
        /*[out,retval]*/ unsigned long * pVal ) = 0;
      virtual HRESULT __stdcall put_AlgorithmID (
        /*[in]*/ unsigned long pVal ) = 0;
};

struct __declspec(uuid("0a4c05a0-107b-4a8b-9e34-44ed9b117a25"))
ICQGOrderProperty : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_CanBeSet (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eOrderProperty * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ struct ICQGOrder * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
};

struct __declspec(uuid("e6517c29-498d-4845-a4c4-5dd076250069"))
ICQGOrderProperties : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ enum eOrderProperty order_property,
        /*[out,retval]*/ struct ICQGOrderProperty * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("3f4f3a72-b53a-40b1-9a3b-4786b158f3fb"))
ICQGOrderModify : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct ICQGOrderProperties * * ppVal ) = 0;
};

struct __declspec(uuid("1a6d1420-be42-410e-8105-2bf326deb0b8"))
ICQGStrategyLegFill : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_OriginalOrderID (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ struct ICQGOrder * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ExecutionId (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("c33b2433-ecd1-410b-82cc-b3e7d4df78a1"))
ICQGStrategyLegFills : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ItemByIndex (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGStrategyLegFill * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("7a55585b-9d0a-4a53-9cb6-fb7cee5398ce"))
ICQGOrderChain : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GWAccountID (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall AddOrder (
        /*[in]*/ struct ICQGOrder * cqg_order ) = 0;
      virtual HRESULT __stdcall get_AlgorithmID (
        /*[out,retval]*/ unsigned long * pVal ) = 0;
      virtual HRESULT __stdcall put_AlgorithmID (
        /*[in]*/ unsigned long pVal ) = 0;
};

struct __declspec(uuid("8d5ab4b6-b950-4f64-991c-2d2904bcad0a"))
ICQGFills : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ BSTR fill_id,
        /*[out,retval]*/ struct ICQGFill * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByIndex (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGFill * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("9cbc745e-6d81-4117-96fe-0e2cd4d29736"))
ICQGFill : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ struct ICQGOrder * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LegCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eFillStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_RefFillId (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentName (
        /*[in]*/ long leg_,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Price (
        /*[in]*/ long leg_,
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Currency (
        /*[in]*/ long leg_,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[in]*/ long leg_,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Side (
        /*[in]*/ long leg_,
        /*[out,retval]*/ enum eOrderSide * pVal ) = 0;
      virtual HRESULT __stdcall get_StatementDate (
        /*[in]*/ long leg_,
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ExchangeTradeDate (
        /*[in]*/ long leg_,
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Aggressive (
        /*[in]*/ long leg_,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_GWTradeId (
        /*[in]*/ long leg_,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_DisplayPrice (
        /*[in]*/ long leg_,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ServerTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_GWTrades (
        /*[in]*/ long leg_,
        /*[out,retval]*/ struct ICQGGWTrades * * pVal ) = 0;
      virtual HRESULT __stdcall get_GWTradesCount (
        /*[in]*/ long leg_,
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("bfe83cfe-32f9-4fdc-845e-b4cfb2c6fa5e"))
ICQGGWTrade : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ICQGFill * * pVal ) = 0;
      virtual HRESULT __stdcall get_DisplayPrice (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_InstrumentName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Price (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Currency (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Side (
        /*[out,retval]*/ enum eOrderSide * pVal ) = 0;
      virtual HRESULT __stdcall get_StatementDate (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ExchangeTradeDate (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Aggressive (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Leg (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("e6c9418a-80fd-482f-a8e6-c660a335b599"))
ICQGGWTrades : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ BSTR trade_gw_id,
        /*[out,retval]*/ struct ICQGGWTrade * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemByIndex (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGGWTrade * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("7e1289be-820e-4d2d-8b75-50a2316f8480"))
ICQGTransaction : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eOrderEvent * pVal ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ struct ICQGModifiedProperties * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Fill (
        /*[out,retval]*/ struct ICQGFill * * ppVal ) = 0;
      virtual HRESULT __stdcall get_RejectReason (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ struct ICQGOrder * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ServerTimestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_ExecutionId (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_HangQuantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_HangOrderIds (
        /*[out,retval]*/ struct ICQGStringCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall get_StrategyLegFills (
        /*[out,retval]*/ struct ICQGStrategyLegFills * * ppVal ) = 0;
};

struct __declspec(uuid("a65cfcd4-a281-47cf-ad6e-39dd5b86c504"))
ICQGTransactions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGTransaction * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ItemByIndex (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTransaction * * ppVal ) = 0;
};

struct __declspec(uuid("cca000cb-e091-4340-a5d1-581f532a68d7"))
ICQGTradingSystem : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TradesRows (
        /*[out,retval]*/ struct ICQGTradingSystemTradesRows * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Statistics (
        /*[out,retval]*/ struct ICQGTradingSystemStatisticsCollection * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum eRequestStatus * pVal ) = 0;
      virtual HRESULT __stdcall get_Id (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[in]*/ BSTR tag_name,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall put_Tag (
        /*[in]*/ BSTR tag_name,
        /*[in]*/ VARIANT pVal ) = 0;
      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ struct ICQGTradingSystemDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Request (
        /*[out,retval]*/ struct ICQGTradingSystemRequest * * ppVal ) = 0;
      virtual HRESULT __stdcall get_LastError (
        /*[out,retval]*/ struct ICQGError * * ppVal ) = 0;
};

struct __declspec(uuid("d0a441e8-f29b-43d4-9127-2f8f6643150c"))
ICQGTradingSystems : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTradingSystem * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ItemById (
        /*[in]*/ BSTR id_,
        /*[out,retval]*/ struct ICQGTradingSystem * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("5931a70e-1390-46de-81cb-9e4f338a98c6"))
ICQGTradingSystemTradesRows : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTradingSystemTradesRow * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("f464ee0c-abf6-494d-8dc0-3b9d3270c836"))
ICQGTradingSystemTradesRow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTradingSystemTrade * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ItemByName (
        /*[in]*/ BSTR trade_name,
        /*[out,retval]*/ struct ICQGTradingSystemTrade * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_TimestampOffset (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("18cdc805-a726-483b-9f68-da23774552ce"))
ICQGTradingSystemTrade : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ struct ICQGTradingSystemTradeDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_TradeEntry (
        /*[out,retval]*/ struct ICQGTradeEntry * * ppVal ) = 0;
      virtual HRESULT __stdcall get_TradeExits (
        /*[out,retval]*/ struct ICQGTradeExits * * ppVal ) = 0;
      virtual HRESULT __stdcall get_IsActive (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Timestamp (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_TradesRow (
        /*[out,retval]*/ struct ICQGTradingSystemTradesRow * * ppVal ) = 0;
      virtual HRESULT __stdcall get_TimestampOffset (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("856ced98-8031-4a01-9be0-451f6f2775d2"))
ICQGTradeEntry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ struct ICQGTradeEntryDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Trade (
        /*[out,retval]*/ struct ICQGTradingSystemTrade * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Signal (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Price (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_StopLimitPrice (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_RelatedExits (
        /*[out,retval]*/ struct ICQGTradeExits * * ppVal ) = 0;
};

struct __declspec(uuid("56870e6e-0747-4347-b8bc-0edefc8352f7"))
ICQGTradeEntries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTradeEntry * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("320a9155-156e-4ce2-8b04-bc83119335b8"))
ICQGTradeExit : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Definition (
        /*[out,retval]*/ struct ICQGTradeExitDefinition * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Trade (
        /*[out,retval]*/ struct ICQGTradingSystemTrade * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Signal (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_Price (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_StopLimitPrice (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_RelatedEntries (
        /*[out,retval]*/ struct ICQGTradeEntries * * ppVal ) = 0;
};

struct __declspec(uuid("92253973-df60-4284-a9e2-623461c08126"))
ICQGTradeExits : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGTradeExit * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ItemByName (
        /*[in]*/ BSTR exit_name,
        /*[out,retval]*/ struct ICQGTradeExit * * ppVal ) = 0;
};

struct __declspec(uuid("72232252-3fe5-486b-9f64-6fdeb2d43903"))
ICQGChangedTradeEntry : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TradeEntry (
        /*[out,retval]*/ struct ICQGTradeEntry * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ChangeCategory (
        /*[out,retval]*/ enum eTradeChangeCategory * pVal ) = 0;
};

struct __declspec(uuid("b6a7d177-86d9-42a8-8b88-947f208d824e"))
ICQGChangedTradeEntries : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGChangedTradeEntry * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ChangeFilter (
        /*[out,retval]*/ enum eTradeChangeCategory * pVal ) = 0;
};

struct __declspec(uuid("6fd2b251-791c-43ab-a44b-b17a93caaeff"))
ICQGChangedTradeExit : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TradeExit (
        /*[out,retval]*/ struct ICQGTradeExit * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ChangeCategory (
        /*[out,retval]*/ enum eTradeChangeCategory * pVal ) = 0;
};

struct __declspec(uuid("89aeaa0f-54fa-4f00-83a6-b5166d4bc910"))
ICQGChangedTradeExits : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGChangedTradeExit * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ChangeFilter (
        /*[out,retval]*/ enum eTradeChangeCategory * pVal ) = 0;
};

struct __declspec(uuid("c75397c9-146e-4d1c-b113-08a42d260585"))
ICQGTradingSystemUpdateInfo : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ChangedEntries (
        /*[in]*/ enum eTradeChangeCategory change_filter,
        /*[out,retval]*/ struct ICQGChangedTradeEntries * * ppVal ) = 0;
      virtual HRESULT __stdcall get_ChangedExits (
        /*[in]*/ enum eTradeChangeCategory change_filter,
        /*[out,retval]*/ struct ICQGChangedTradeExits * * ppVal ) = 0;
      virtual HRESULT __stdcall get_StatisticsChangeInfo (
        /*[out,retval]*/ struct ICQGTradingSystemStatisticsChangeInfo * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * pVal ) = 0;
};

struct __declspec(uuid("1079ae13-4ee1-4542-9ad0-4fa23292a738"))
ICQGTradingSystemRelationAddInfo : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_EntryRowIndex (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_ExitRowIndex (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Entry (
        /*[out,retval]*/ struct ICQGTradeEntry * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Exit (
        /*[out,retval]*/ struct ICQGTradeExit * * ppVal ) = 0;
};

struct __declspec(uuid("13a8d517-7bd3-4627-abb2-65f3139cbea5"))
ICQGExecutionPattern : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Parameters (
        /*[out,retval]*/ struct ICQGExecutionPatternParameters * * ppVal ) = 0;
      virtual HRESULT __stdcall get_PatternString (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("171b015c-a9fa-4a35-8964-e32806c23020"))
ICQGExecutionPatternParameters : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT index_,
        /*[out,retval]*/ struct ICQGExecutionPatternParameter * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall Add (
        /*[in]*/ BSTR name_,
        /*[in]*/ enum eExecutionPatternParameterType type_,
        /*[in]*/ BSTR value_,
        /*[out,retval]*/ struct ICQGExecutionPatternParameter * * ppVal ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ VARIANT index_ ) = 0;
};

struct __declspec(uuid("d79963ca-c026-47f7-ab35-3cb89c54597c"))
ICQGExecutionPatternParameter : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eExecutionPatternParameterType * pVal ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Parameters (
        /*[out,retval]*/ struct ICQGExecutionPatternParameters * * ppVal ) = 0;
};

struct __declspec(uuid("ef21e9b9-e8ff-4940-86d9-e68b26325e35"))
ICQGSessions : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT index_,
        /*[out,retval]*/ struct ICQGSession * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum eSymbolSessionType * pVal ) = 0;
      virtual HRESULT __stdcall IsTimeInSession (
        /*[in]*/ DATE date_time,
        /*[in]*/ VARIANT_BOOL use_session_valid_times,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_DescriptionNumber (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_DescriptionStart (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_DescriptionEnd (
        /*[out,retval]*/ DATE * pVal ) = 0;
      virtual HRESULT __stdcall get_Holidays (
        /*[out,retval]*/ struct ICQGHolidays * * ppVal ) = 0;
};

struct __declspec(uuid("0abb2165-cbfc-4954-9b05-9922ddea5bd4"))
ICQGHolidays : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long index_,
        /*[out,retval]*/ struct ICQGHoliday * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_Sessions (
        /*[out,retval]*/ struct ICQGSessions * * ppVal ) = 0;
};

struct __declspec(uuid("e6cc5c7a-85ce-41c1-8afb-03b286e8e659"))
ICQGSessionsCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ struct IEnumVARIANT * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ VARIANT index_,
        /*[out,retval]*/ struct ICQGSessions * * ppVal ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pVal ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_CQG =
    {0x51f35562,0xaeb4,0x4ab3,{0x99,0xe8,0xac,0x96,0x66,0x34,0x4b,0x64}};
extern "C" const GUID __declspec(selectany) DIID__ICQGCELEvents =
    {0xa17eb2fc,0xe18c,0x4922,{0xa7,0xc0,0x6b,0x4c,0x07,0x90,0x2f,0xd7}};
extern "C" const GUID __declspec(selectany) IID_ICQGTrade =
    {0x25345894,0xff06,0x45d0,{0xa7,0x33,0x29,0xef,0xbd,0x95,0xfd,0xa0}};
extern "C" const GUID __declspec(selectany) IID_ICQGTrades =
    {0xb8ef96e6,0xd604,0x4a9f,{0x8c,0x91,0x15,0x50,0xc1,0xf3,0xf4,0xb9}};
extern "C" const GUID __declspec(selectany) IID_ICQGError =
    {0x57797e59,0x1b98,0x4206,{0x93,0x6c,0x7c,0xaf,0x3a,0xfe,0x2c,0x68}};
extern "C" const GUID __declspec(selectany) IID_ICQGModifiedProperty =
    {0x7d1055d2,0x1b84,0x441d,{0x81,0xd0,0xf3,0xcc,0xf3,0xc8,0x9d,0x62}};
extern "C" const GUID __declspec(selectany) IID_ICQGModifiedProperties =
    {0x17e30c78,0x4f87,0x4e3c,{0x96,0x53,0x9f,0x44,0xb0,0x7a,0xaa,0x69}};
extern "C" const GUID __declspec(selectany) IID_ICQGStringCollection =
    {0xf01177e1,0x22ae,0x4d48,{0x97,0x87,0xc4,0x61,0xea,0xef,0xbe,0xae}};
extern "C" const GUID __declspec(selectany) IID_ICQGRemoteOpenAPISession =
    {0xb94f3342,0x6795,0x4147,{0xaf,0x03,0x43,0x65,0x72,0x3f,0xcd,0xba}};
extern "C" const GUID __declspec(selectany) IID_ICQGAPIConfig =
    {0xc3e14fea,0xed20,0x478b,{0x82,0xf8,0x27,0xca,0xe6,0x13,0x48,0xfa}};
extern "C" const GUID __declspec(selectany) IID_ICQGTicksRequest =
    {0xcb0bc66d,0x201c,0x4810,{0xbe,0xa6,0x7e,0x24,0x54,0x38,0xc8,0x1f}};
extern "C" const GUID __declspec(selectany) IID_ICQGTick =
    {0x7765940c,0xe370,0x42ad,{0xa2,0x9d,0x3c,0x0d,0x5f,0xb6,0xd8,0x2d}};
extern "C" const GUID __declspec(selectany) IID_ICQGTicks =
    {0x122ab939,0x92e9,0x4c18,{0xb7,0x65,0xb9,0xa6,0xf8,0x7e,0x50,0x5d}};
extern "C" const GUID __declspec(selectany) IID_ICQGTicksCollection =
    {0x7eef0951,0x36ab,0x48a4,{0xb5,0x92,0x52,0x40,0xdd,0x86,0xdc,0x3e}};
extern "C" const GUID __declspec(selectany) IID_ICQGTimedBarsRequest =
    {0x49e2b82c,0xda28,0x4a43,{0x9f,0x7a,0xfa,0xee,0x50,0x08,0xf8,0xd3}};
extern "C" const GUID __declspec(selectany) IID_ICQGTimedBar =
    {0x79582bfd,0x67a2,0x49cd,{0x83,0xa7,0x16,0x20,0x6d,0x22,0xd6,0x7c}};
extern "C" const GUID __declspec(selectany) IID_ICQGTimedBars =
    {0xe422a619,0x639b,0x4a2e,{0xbf,0x3b,0xe6,0xd7,0x73,0xe3,0x31,0x0f}};
extern "C" const GUID __declspec(selectany) IID_ICQGTimedBarsCollection =
    {0xa4dc26d5,0x5f01,0x4642,{0xab,0x4b,0xc1,0xca,0x7b,0x5b,0xef,0x9d}};
extern "C" const GUID __declspec(selectany) IID_ICQGConstantVolumeBarsRequest =
    {0x3640309b,0xe7f3,0x4d39,{0xad,0x9d,0xc8,0x61,0xe6,0xdd,0x93,0x18}};
extern "C" const GUID __declspec(selectany) IID_ICQGConstantVolumeBar =
    {0x39a768b2,0xd0ae,0x4f0c,{0xad,0xad,0x24,0x43,0x66,0x30,0xa0,0x6e}};
extern "C" const GUID __declspec(selectany) IID_ICQGConstantVolumeBars =
    {0x6c1d5c43,0x9a4f,0x441e,{0x82,0xd0,0x2f,0x8a,0xb9,0xda,0xdc,0x09}};
extern "C" const GUID __declspec(selectany) IID_ICQGConstantVolumeBarsCollection =
    {0x89e06dc4,0x6f1c,0x4ff1,{0xa4,0x3e,0xed,0x78,0x25,0x4c,0x49,0x86}};
extern "C" const GUID __declspec(selectany) IID_ICQGPointAndFigureBarsRequest =
    {0x054f6b39,0xb5a2,0x46c8,{0xa9,0xc2,0x81,0x1e,0xa8,0xc0,0x9d,0xbe}};
extern "C" const GUID __declspec(selectany) IID_ICQGPointAndFigureBar =
    {0x72648f32,0x5906,0x4c55,{0x81,0x67,0xfd,0x66,0x25,0xaf,0x1c,0x4b}};
extern "C" const GUID __declspec(selectany) IID_ICQGPointAndFigureBars =
    {0x7f084615,0xedc8,0x419b,{0x83,0x45,0xcf,0xfe,0x8a,0x2d,0x3f,0x26}};
extern "C" const GUID __declspec(selectany) IID_ICQGPointAndFigureBarsCollection =
    {0x07fe7b48,0x4539,0x40cf,{0xa8,0xa8,0x06,0x30,0x01,0x8a,0x4c,0xc2}};
extern "C" const GUID __declspec(selectany) IID_ICQGYieldsRequest =
    {0x259910e1,0xe37a,0x4ecb,{0x85,0x0c,0x68,0xd6,0xfc,0x6d,0xcb,0xee}};
extern "C" const GUID __declspec(selectany) IID_ICQGYield =
    {0x2f4060e8,0x0667,0x4296,{0xa9,0x0c,0x47,0x40,0x85,0xf3,0x72,0x05}};
extern "C" const GUID __declspec(selectany) IID_ICQGYields =
    {0xc2364bad,0x6909,0x481e,{0x9d,0xcd,0x7f,0x3b,0xab,0x0a,0x81,0xc3}};
extern "C" const GUID __declspec(selectany) IID_ICQGYieldsCollection =
    {0xbde68e30,0x6854,0x4d40,{0x81,0x54,0x9f,0xa2,0xf3,0xf3,0x04,0xdb}};
extern "C" const GUID __declspec(selectany) IID_ICQGTFlowBarsRequest =
    {0x9773c44a,0x3c4d,0x461b,{0xb3,0xd5,0xb7,0xf3,0x8c,0xfe,0x36,0x74}};
extern "C" const GUID __declspec(selectany) IID_ICQGTFlowBar =
    {0xbbd4681f,0xd945,0x43c4,{0x9e,0x01,0x97,0x09,0xc8,0xf1,0x14,0x81}};
extern "C" const GUID __declspec(selectany) IID_ICQGTFlowBars =
    {0x9163df55,0x96ea,0x4810,{0x86,0x45,0x9b,0x4e,0xcd,0x1f,0x00,0xd3}};
extern "C" const GUID __declspec(selectany) IID_ICQGTFlowBarsCollection =
    {0x5170e441,0x609f,0x4137,{0x84,0x11,0x72,0x65,0xe3,0x4b,0x0d,0x81}};
extern "C" const GUID __declspec(selectany) IID_ICQGParameterDefinition =
    {0xaab46790,0xb322,0x4d6f,{0x80,0xe2,0x36,0xff,0x0c,0x14,0x55,0xd3}};
extern "C" const GUID __declspec(selectany) IID_ICQGParameterDefinitions =
    {0xee80a9c4,0x5ad4,0x40d5,{0xb4,0x14,0xb9,0xb3,0x43,0xa9,0x7b,0xf3}};
extern "C" const GUID __declspec(selectany) IID_ICQGCurveDefinition =
    {0x7f6682e8,0x2e9d,0x401d,{0x83,0x3f,0x23,0x81,0x38,0xb5,0xd0,0xc4}};
extern "C" const GUID __declspec(selectany) IID_ICQGCurveDefinitions =
    {0x3aea2907,0x6ac4,0x4ebc,{0xad,0x03,0x18,0x92,0x7f,0x2d,0xa5,0xb3}};
extern "C" const GUID __declspec(selectany) IID_ICQGCustomStudyDefinition =
    {0x7953dfa6,0xc66f,0x40ff,{0x81,0x0d,0x21,0xc9,0x6c,0x0d,0xb6,0xbd}};
extern "C" const GUID __declspec(selectany) IID_ICQGCustomStudyRequest =
    {0x3ea4072d,0x7522,0x4a07,{0x93,0x62,0x9f,0xb9,0x92,0xda,0x2b,0x5c}};
extern "C" const GUID __declspec(selectany) IID_ICQGCurves =
    {0xcfe5790c,0x5de3,0x4b49,{0x88,0x62,0x5e,0x70,0x3a,0xc0,0x29,0x07}};
extern "C" const GUID __declspec(selectany) IID_ICQGCurveHeaders =
    {0x172a1395,0x9af6,0x489d,{0xb5,0x3b,0xb9,0xc1,0x0d,0x49,0x74,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICQGCustomStudy =
    {0x46e0172c,0xefdb,0x4f8d,{0xbc,0x46,0x0f,0xf4,0x2b,0x94,0x5d,0xdd}};
extern "C" const GUID __declspec(selectany) IID_ICQGCustomStudies =
    {0x6f48eead,0x84ae,0x49d8,{0xb4,0xa3,0x6c,0xc2,0xdb,0x11,0x0a,0x0c}};
extern "C" const GUID __declspec(selectany) IID_ICQGConditionDefinition =
    {0x725e431c,0x4ec4,0x4aab,{0xad,0xa1,0x77,0xa0,0x62,0x05,0x7d,0x06}};
extern "C" const GUID __declspec(selectany) IID_ICQGConditionRequest =
    {0x7ee99697,0x65af,0x476d,{0xa8,0xe5,0x91,0x8e,0x84,0x4b,0xdd,0x26}};
extern "C" const GUID __declspec(selectany) IID_ICQGConditionResult =
    {0x589181b4,0x2fe0,0x4b8c,{0xa9,0x9b,0x5c,0xf8,0xff,0x69,0xd2,0xfc}};
extern "C" const GUID __declspec(selectany) IID_ICQGCondition =
    {0x74a3fdaf,0xa51b,0x4add,{0x85,0x54,0x07,0xf4,0x15,0x34,0x27,0xc2}};
extern "C" const GUID __declspec(selectany) IID_ICQGConditions =
    {0x20257a63,0x6413,0x4da8,{0xad,0x35,0xc8,0x99,0xdc,0x2e,0xad,0x07}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradeEntryDefinition =
    {0x18b4acb8,0x879a,0x4ddb,{0xa4,0x7c,0xbc,0xe6,0x72,0xf6,0xd7,0xc2}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradeExitDefinition =
    {0x86fb7e25,0xf938,0x4314,{0x93,0xc0,0xf9,0xab,0xa4,0x12,0x3d,0xe9}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradeExitDefinitions =
    {0x202a1020,0x7dc8,0x42f4,{0x8b,0xc5,0xba,0xa4,0x98,0x22,0x9a,0x8e}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemTradeDefinition =
    {0xb6886be5,0xdf39,0x4313,{0x98,0x03,0x8d,0xde,0x38,0x4a,0x06,0x6f}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemTradeDefinitions =
    {0x43287342,0xffb5,0x44df,{0xb4,0xc6,0x46,0x2b,0x4e,0x8e,0xec,0x01}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemDefinition =
    {0x46238229,0x0e90,0x4da3,{0x96,0x81,0x98,0xaa,0x85,0x9d,0xc2,0x91}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemBaseBarParameter =
    {0x454d9822,0x6533,0x4694,{0xbf,0x96,0x45,0xc1,0x79,0x37,0xba,0x65}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemBaseBarParameters =
    {0x98f80db3,0x1cb8,0x4263,{0xbe,0x9e,0x72,0xd0,0x79,0xcd,0x7f,0xe5}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemRequest =
    {0xe8060968,0x2966,0x4108,{0x99,0x3c,0x62,0x25,0x0f,0x35,0x0a,0x39}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemStatistics =
    {0x6e35395f,0x6a4f,0x452a,{0x9f,0x2c,0x8d,0x68,0x6e,0x7b,0xc1,0x4f}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemStatisticsCollection =
    {0xf2f3d2e8,0x699c,0x477c,{0xaf,0xf0,0x62,0xd8,0x86,0x27,0x84,0x4f}};
extern "C" const GUID __declspec(selectany) IID_ICQGExpressionRequest =
    {0xb9d1d6ce,0x2901,0x461a,{0x90,0x61,0xc3,0x15,0x4d,0x7c,0x26,0xa2}};
extern "C" const GUID __declspec(selectany) IID_ICQGExpressionOutputs =
    {0x552ce101,0x6267,0x4ccb,{0x95,0xa7,0xfd,0xf5,0x96,0xdc,0x1d,0xea}};
extern "C" const GUID __declspec(selectany) IID_ICQGExpressionOutputHeaders =
    {0x2b231d03,0xcb1e,0x4631,{0x8d,0x0e,0xc5,0x4f,0x3c,0x68,0xaa,0x0c}};
extern "C" const GUID __declspec(selectany) IID_ICQGExpression =
    {0xe2245d3c,0x06eb,0x4aee,{0xbc,0x87,0x8f,0xad,0xa4,0xd4,0xb8,0xfe}};
extern "C" const GUID __declspec(selectany) IID_ICQGExpressions =
    {0xfa20dfaa,0xc6cd,0x4d9d,{0xab,0x3c,0x43,0xe6,0xb3,0x5c,0xf7,0xa6}};
extern "C" const GUID __declspec(selectany) IID_ICQGAlgorithmicOrderDefinition =
    {0xf2b0fbfe,0x3db2,0x45e1,{0xaa,0x63,0x18,0xd0,0x59,0x81,0x8f,0x84}};
extern "C" const GUID __declspec(selectany) IID_ICQGAlgorithmicOrderDefinitions =
    {0x66b04e87,0x816d,0x4efc,{0xaa,0x43,0x87,0xe1,0x47,0x16,0xb4,0x3b}};
extern "C" const GUID __declspec(selectany) IID_ICQGDirectEventsAccessor =
    {0xb6e84aaa,0xd906,0x44aa,{0x9b,0xf1,0x96,0xbb,0x1a,0x04,0x2b,0x91}};
extern "C" const GUID __declspec(selectany) IID_ICQGInstrumentsGroupRequest =
    {0xc5cddf7e,0x8454,0x40b5,{0x97,0xa2,0xa5,0xcf,0xde,0xce,0xcc,0x7f}};
extern "C" const GUID __declspec(selectany) IID_ICQGBarsTimestamps =
    {0x2a11e86f,0x5ec5,0x4226,{0x9d,0xbb,0x52,0xaa,0xc1,0xfb,0xa6,0xba}};
extern "C" const GUID __declspec(selectany) IID_ICQGStrategyDefinition =
    {0x941d0e9e,0x76df,0x4cfb,{0x8b,0x8d,0xe0,0xf4,0x80,0xe2,0xe5,0xcb}};
extern "C" const GUID __declspec(selectany) IID_ICQGStrategyDefinitions =
    {0xaedd0358,0x778e,0x489c,{0x91,0x2b,0x56,0x82,0x35,0xa2,0x23,0x99}};
extern "C" const GUID __declspec(selectany) IID_ICQGHistoricalSessionsRequest =
    {0x69ebc08b,0x0d8c,0x49b6,{0xa7,0xd4,0x25,0x6b,0xd4,0x9f,0x0a,0xc7}};
extern "C" const GUID __declspec(selectany) IID_ICQGManualFill =
    {0xffd01208,0xd950,0x4242,{0x8e,0x5c,0xce,0xad,0x11,0x24,0xaf,0x63}};
extern "C" const GUID __declspec(selectany) IID_ICQGManualFillRequest =
    {0x778f386e,0xcdc2,0x4e63,{0x9e,0x78,0xc8,0x09,0xc5,0xdb,0x60,0x44}};
extern "C" const GUID __declspec(selectany) IID_ICQGManualFills =
    {0x0d916e96,0x72c7,0x41d1,{0x85,0x2a,0x13,0x96,0xb6,0x03,0x1a,0xff}};
extern "C" const GUID __declspec(selectany) IID_ICQGManualFillsCollection =
    {0x416b7334,0x2625,0x49bd,{0x88,0x25,0x52,0x94,0x51,0x19,0xa3,0x84}};
extern "C" const GUID __declspec(selectany) IID_ICQGInstrumentSubscriptionRequest =
    {0x75e3c004,0x31ef,0x4780,{0xa8,0xb5,0xcc,0x2b,0xde,0x90,0x3a,0xb6}};
extern "C" const GUID __declspec(selectany) IID_ICQGHoliday =
    {0x6d8ede4a,0x5e79,0x4d5c,{0xa9,0x26,0xef,0xd2,0x9c,0x74,0x2d,0x29}};
extern "C" const GUID __declspec(selectany) IID_ICQGCommodityInstruments =
    {0xc1c22a85,0x589a,0x414d,{0x87,0xd8,0x35,0x93,0x61,0x03,0xc2,0x70}};
extern "C" const GUID __declspec(selectany) IID_ICQGDataSource =
    {0x9b11a072,0x177c,0x4695,{0xaa,0x88,0x45,0xbb,0x22,0x3c,0x4f,0xfc}};
extern "C" const GUID __declspec(selectany) IID_ICQGDataSources =
    {0x13d2c727,0x634f,0x4f12,{0xa5,0xa2,0xaf,0xde,0x11,0xac,0x69,0xb9}};
extern "C" const GUID __declspec(selectany) IID_ICQGDataSourceSymbol =
    {0x9795abe6,0x5986,0x4413,{0xb1,0x17,0x10,0x46,0x66,0x7e,0x59,0x19}};
extern "C" const GUID __declspec(selectany) IID_ICQGDataSourceSymbols =
    {0x8f94f6e6,0x0462,0x4fa8,{0x89,0x74,0x29,0x59,0x24,0xd9,0x0b,0x41}};
extern "C" const GUID __declspec(selectany) IID_ICQGCommodities =
    {0xee5380e3,0x0249,0x4e97,{0xab,0x30,0x45,0x16,0x77,0x5d,0x70,0x64}};
extern "C" const GUID __declspec(selectany) IID_ICQGCustomStudyDefinitions =
    {0x76e52203,0xe044,0x40da,{0x87,0x23,0xad,0x02,0x34,0x13,0x4d,0xf7}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemDefinitions =
    {0x8a469a57,0x1be9,0x47c6,{0xb9,0xd7,0x47,0x54,0x05,0x12,0x1d,0x16}};
extern "C" const GUID __declspec(selectany) IID_ICQGConditionDefinitions =
    {0x5e76a014,0x779a,0x4c96,{0xa8,0x0b,0xe2,0x4a,0x28,0xf2,0x66,0xd3}};
extern "C" const GUID __declspec(selectany) IID_ICQGQFormulaDefinition =
    {0x06352951,0x9b69,0x464f,{0x95,0x26,0x65,0xc0,0x6b,0x0e,0xc3,0x7e}};
extern "C" const GUID __declspec(selectany) IID_ICQGQFormulaDefinitions =
    {0xef7337eb,0xbfe0,0x482b,{0xaa,0x22,0xd7,0xb6,0x91,0xe0,0x15,0x64}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemAddInfo =
    {0xd48e0b68,0x0e13,0x4ad8,{0x93,0x92,0xef,0xc5,0x26,0xbe,0x03,0x6d}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemStatisticsChangeInfo =
    {0x89cee83e,0x0c19,0x4027,{0x82,0x26,0x49,0xa6,0x66,0xac,0x64,0x3e}};
extern "C" const GUID __declspec(selectany) IID_ICQGAlgorithmicOrderParameters =
    {0xf1d1ec65,0x730c,0x4c76,{0xa9,0x0e,0x30,0xdd,0x5e,0x33,0x6d,0xcf}};
extern "C" const GUID __declspec(selectany) IID_ICQGAlgorithmicOrderProperty =
    {0xed42fc70,0x34a5,0x494a,{0x93,0x55,0xfd,0x09,0x4a,0x6b,0x91,0x55}};
extern "C" const GUID __declspec(selectany) IID_ICQGAlgorithmicOrderProperties =
    {0x1f8d3d22,0x3f06,0x411e,{0x95,0x72,0x24,0x34,0xf9,0x50,0x6a,0x26}};
extern "C" const GUID __declspec(selectany) IID_ICQGIntegerCollection =
    {0x783d500d,0x7201,0x4d05,{0x88,0x31,0x35,0xaa,0x7c,0x01,0x36,0x32}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemInsertInfo =
    {0x1b9354c5,0x81fd,0x497a,{0xab,0x6a,0xd6,0xe9,0x69,0xc8,0xd9,0x9a}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemRemoveInfo =
    {0xfc58ae71,0x5818,0x4381,{0x95,0xae,0x30,0xf1,0xaf,0x03,0xec,0x0c}};
extern "C" const GUID __declspec(selectany) IID_ICQGExchanges =
    {0x65336902,0xf728,0x428e,{0xb6,0x3a,0xf8,0x22,0x1a,0x17,0xa3,0xd2}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCEL =
    {0x66788b5c,0x4c99,0x4663,{0x84,0xc2,0x7d,0xed,0xf4,0xea,0x30,0xf8}};
extern "C" const GUID __declspec(selectany) CLSID_CQGAPIConfig =
    {0x64d1fc37,0x95c8,0x43f0,{0xbd,0xc3,0x7f,0x6c,0x79,0xe6,0x0c,0x93}};
extern "C" const GUID __declspec(selectany) CLSID_CQGStringCollection =
    {0x2ab371a5,0x534d,0x4481,{0x82,0xe0,0x21,0x5d,0x3e,0x78,0x98,0xa2}};
extern "C" const GUID __declspec(selectany) CLSID_CQGAccount =
    {0x97f2dd85,0xe088,0x4ccc,{0xa5,0x56,0x48,0xd6,0x4c,0x08,0xa6,0x5b}};
extern "C" const GUID __declspec(selectany) CLSID_CQGAccounts =
    {0xf70beb3e,0x423e,0x427c,{0xa2,0xc5,0xe6,0x0e,0xfc,0xd6,0xca,0x04}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCurrencyRate =
    {0x777a765f,0xa0f4,0x48ac,{0xb9,0x4d,0x05,0x21,0xcf,0x10,0x33,0xca}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCurrencyRates =
    {0xda9fa862,0xd78d,0x4dda,{0x98,0x07,0x55,0xb2,0x62,0x2b,0x11,0x49}};
extern "C" const GUID __declspec(selectany) CLSID_CQGEnvironment =
    {0xe854195e,0x8b43,0x4d85,{0x99,0x88,0xf4,0xdb,0xa9,0x30,0x52,0x74}};
extern "C" const GUID __declspec(selectany) CLSID_CQGOrder =
    {0x4c81e045,0x6d77,0x47e5,{0x9e,0x84,0xc4,0x39,0xbd,0x81,0xe8,0xcd}};
extern "C" const GUID __declspec(selectany) CLSID_CQGOrders =
    {0x8a15558e,0xdc1c,0x429d,{0xbc,0x9c,0x8e,0x0e,0x45,0x51,0x6a,0x8c}};
extern "C" const GUID __declspec(selectany) CLSID_CQGInstrument =
    {0xf0026643,0x20b1,0x48f3,{0x93,0xe0,0x7d,0x0f,0xf0,0x6f,0x23,0x7e}};
extern "C" const GUID __declspec(selectany) CLSID_CQGPosition =
    {0x78ce5808,0x49c9,0x4a0d,{0x89,0x15,0x5d,0x6c,0xfb,0xa2,0xa8,0x77}};
extern "C" const GUID __declspec(selectany) CLSID_CQGPositions =
    {0x00713c33,0x68d2,0x4260,{0xb6,0x09,0x40,0xbc,0x19,0x7d,0xf1,0xb7}};
extern "C" const GUID __declspec(selectany) CLSID_CQGDirectEventsAccessor =
    {0x0b1f93e4,0x35ce,0x49ca,{0xb7,0x4e,0x98,0x20,0xcf,0x94,0x90,0xb4}};
extern "C" const GUID __declspec(selectany) CLSID_CQGError =
    {0x73334ff8,0x107b,0x434f,{0x87,0xf9,0x88,0x3d,0x4c,0xd6,0xbf,0x54}};
extern "C" const GUID __declspec(selectany) CLSID_CQGSummariesStatement =
    {0x33d4e0f7,0x3d8c,0x4d88,{0xbb,0x5f,0x59,0x72,0x45,0x69,0x07,0x5a}};
extern "C" const GUID __declspec(selectany) CLSID_CQGPositionsStatement =
    {0x89ccfba2,0x32ac,0x452f,{0x8e,0xc2,0xa5,0x24,0xc5,0xcb,0x52,0x07}};
extern "C" const GUID __declspec(selectany) CLSID_CQGLogger =
    {0xa4fd55df,0xb7bf,0x4c6e,{0x80,0x23,0x0b,0x0b,0x34,0x3b,0xae,0x3e}};
extern "C" const GUID __declspec(selectany) CLSID_CQGInstruments =
    {0xd9a8cdae,0x0a96,0x44f6,{0x9e,0x76,0x8c,0xe9,0x28,0xca,0x7b,0x68}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTick =
    {0x3a9eec11,0x0968,0x4453,{0xa4,0x71,0x41,0xec,0xbc,0x8c,0x7d,0x36}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTicks =
    {0x0fdfa379,0x1e58,0x477d,{0x9c,0xa5,0x3c,0x4d,0x76,0x86,0xb5,0xac}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTicksCollection =
    {0x1b459b86,0xe919,0x4be4,{0x83,0x54,0x41,0x5d,0x6f,0x6c,0x8c,0x91}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTimedBar =
    {0x8fcafe43,0x2945,0x4bc1,{0x99,0x41,0x41,0x54,0x9f,0x0f,0x28,0x2f}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTimedBarsRequest =
    {0x34621e7d,0x7a9a,0x48b6,{0x8b,0xb6,0xfa,0xde,0xd0,0xe4,0x26,0xdd}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTimedBars =
    {0x8b7936bc,0xc2a2,0x4f71,{0xa5,0xd7,0xae,0x61,0xc2,0x12,0xc3,0x79}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTimedBarsCollection =
    {0xabd09eda,0x278b,0x4aac,{0x99,0xe3,0xb0,0xf8,0xf3,0x8f,0x7d,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_CQGConstantVolumeBar =
    {0xfa651a69,0x9fb4,0x4a88,{0x8d,0xd7,0x96,0x64,0xc8,0x9f,0x27,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_CQGConstantVolumeBarsRequest =
    {0xb04ac856,0x9f8e,0x48bb,{0xb8,0xc3,0xdc,0xb0,0x4b,0xa6,0x33,0x09}};
extern "C" const GUID __declspec(selectany) CLSID_CQGConstantVolumeBars =
    {0x4cfceff6,0xfdd4,0x443d,{0xa1,0x47,0x46,0x5a,0xc2,0xd9,0xd2,0x8b}};
extern "C" const GUID __declspec(selectany) CLSID_CQGConstantVolumeBarsCollection =
    {0x23a1310c,0x62d8,0x4216,{0xa4,0xa6,0xcb,0x4d,0x23,0x99,0xd2,0x7a}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTFlowBar =
    {0x5a32b366,0xb9a1,0x45f3,{0xaf,0xd1,0x8b,0xb4,0xd7,0xa5,0x22,0xfa}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTFlowBarsRequest =
    {0xb07e461e,0xa3b3,0x4a59,{0x95,0xbe,0x1b,0x2e,0x19,0x19,0xe2,0x52}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTFlowBars =
    {0x2bf5d9bd,0xd1c2,0x48c3,{0x81,0xbf,0xbf,0xcc,0xc6,0x22,0xb6,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTFlowBarsCollection =
    {0x6f356dff,0xafeb,0x4d52,{0x9b,0x04,0x4d,0xa5,0x8a,0xd6,0x8c,0x6a}};
extern "C" const GUID __declspec(selectany) CLSID_CQGYield =
    {0x046c82be,0xafd9,0x468e,{0x90,0xc0,0xa0,0xd2,0xe4,0xd2,0xaf,0x49}};
extern "C" const GUID __declspec(selectany) CLSID_CQGYieldsRequest =
    {0x8441168b,0x3703,0x408e,{0x9d,0x4b,0xe1,0xe8,0xd5,0xce,0x37,0x89}};
extern "C" const GUID __declspec(selectany) CLSID_CQGYields =
    {0x49754487,0x4c28,0x443f,{0xa8,0xf5,0x00,0xf6,0x79,0xd2,0xae,0xee}};
extern "C" const GUID __declspec(selectany) CLSID_CQGYieldsCollection =
    {0x3cfff20f,0x800c,0x42cf,{0x97,0x42,0x4a,0xb8,0x37,0x74,0x98,0xe3}};
extern "C" const GUID __declspec(selectany) CLSID_CQGPointAndFigureBar =
    {0x241ec27c,0xdf5e,0x4d49,{0xab,0x2e,0xd3,0x6d,0xcb,0x15,0x7e,0x2e}};
extern "C" const GUID __declspec(selectany) CLSID_CQGPointAndFigureBarsRequest =
    {0xb367da38,0x89dc,0x416e,{0x8b,0x1f,0xa2,0xe9,0x71,0x81,0x6e,0x82}};
extern "C" const GUID __declspec(selectany) CLSID_CQGPointAndFigureBars =
    {0xa97ae645,0xc35e,0x44a8,{0x83,0x0e,0xb3,0x92,0xcc,0xdb,0x9e,0x56}};
extern "C" const GUID __declspec(selectany) CLSID_CQGPointAndFigureBarsCollection =
    {0xfeb08c43,0xa84a,0x4378,{0x84,0x0c,0x6f,0x8e,0x1b,0x83,0xbe,0x82}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCurveHeaders =
    {0x582c7cdd,0x82c5,0x410b,{0x8a,0x60,0xc6,0x86,0x3d,0x48,0x67,0x87}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCurves =
    {0xb6c42a96,0x495d,0x4765,{0x82,0xf7,0x27,0x41,0xea,0xb1,0x77,0x2b}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCustomStudy =
    {0xdbcf3491,0x7147,0x40de,{0x80,0xe3,0x2e,0x86,0xc8,0xdf,0xf2,0x80}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCustomStudies =
    {0x0adebf98,0xd20b,0x4595,{0xbf,0xda,0x4b,0xf8,0x3e,0x67,0x54,0x45}};
extern "C" const GUID __declspec(selectany) CLSID_CQGConditionResult =
    {0x3505bb39,0x8e5e,0x40f3,{0xa4,0x3a,0x48,0x9f,0x59,0xc1,0x70,0xaa}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCondition =
    {0x286a416a,0xc19c,0x493d,{0x9b,0xb3,0x54,0xe8,0x44,0x73,0x25,0xd8}};
extern "C" const GUID __declspec(selectany) CLSID_CQGConditions =
    {0x78012a33,0x4b7b,0x4cda,{0xb5,0x78,0x73,0x3b,0xb0,0xdc,0x3c,0xd4}};
extern "C" const GUID __declspec(selectany) CLSID_CQGOrdersQuery =
    {0x6bc352f1,0x3fd5,0x4e17,{0xa5,0xb6,0x5e,0x60,0x11,0x3b,0xa5,0x2b}};
extern "C" const GUID __declspec(selectany) CLSID_CQGFill =
    {0x8331f816,0x6e59,0x420b,{0xb9,0xc4,0x82,0xc2,0xd8,0x6d,0x94,0x22}};
extern "C" const GUID __declspec(selectany) CLSID_CQGOrderProperty =
    {0x2171dcf1,0xb70b,0x4cab,{0x9e,0xb7,0xf7,0xfe,0xd7,0x19,0x56,0xb4}};
extern "C" const GUID __declspec(selectany) CLSID_CQGOrderProperties =
    {0x7652b95d,0x567e,0x4bb8,{0xa0,0xe3,0x7b,0x2b,0x21,0x7e,0xcb,0x2b}};
extern "C" const GUID __declspec(selectany) CLSID_CQGOrderStatistics =
    {0x1ca802c9,0x6983,0x4b67,{0xa1,0x35,0xf8,0x52,0x56,0xc1,0x55,0x93}};
extern "C" const GUID __declspec(selectany) IID_ICQGOrderStatistics =
    {0x8d1ae1ab,0x3ad1,0x45cf,{0x9a,0xa9,0x8b,0xf7,0x3c,0xed,0xa1,0x8a}};
extern "C" const GUID __declspec(selectany) CLSID_CQGInstrumentsGroup =
    {0xda268a53,0x40da,0x44c3,{0x8d,0xeb,0x9c,0x2f,0xbc,0xfa,0x6e,0xb7}};
extern "C" const GUID __declspec(selectany) CLSID_CQGRemoteOpenAPISession =
    {0x900f78ee,0xe8c5,0x48e7,{0xa0,0x32,0x53,0xe5,0x55,0xe4,0x38,0x23}};
extern "C" const GUID __declspec(selectany) CLSID_CQGQuote =
    {0x74c802ff,0x2bdf,0x4d15,{0xb5,0xee,0x4e,0x14,0xc5,0x2c,0x64,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_CQGQuotes =
    {0xde5423a3,0xc8d2,0x467b,{0x8e,0x98,0x42,0x0f,0xca,0xda,0x1c,0x36}};
extern "C" const GUID __declspec(selectany) CLSID_CQGInstrumentProperty =
    {0x87deaa17,0x45db,0x43e2,{0x92,0x9f,0x78,0xfa,0x17,0x3f,0x75,0x02}};
extern "C" const GUID __declspec(selectany) CLSID_CQGInstrumentProperties =
    {0x48b661fb,0x74b2,0x4a70,{0xb0,0xa4,0x73,0xf2,0x9b,0x65,0x15,0xc0}};
extern "C" const GUID __declspec(selectany) CLSID_CQGDOMQuotes =
    {0x73653b35,0x3de6,0x4924,{0x96,0x27,0xe7,0x25,0x0c,0x41,0x4c,0xf2}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCommodities =
    {0x82162321,0xb5c5,0x4432,{0xb6,0x5b,0x0a,0xe9,0xf9,0xfd,0xf5,0x3f}};
extern "C" const GUID __declspec(selectany) CLSID_CQGExchanges =
    {0x59bb3d1b,0xfd5f,0x4ff7,{0xa0,0x90,0x6b,0x53,0x8b,0x42,0xa2,0x70}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCommodityInstruments =
    {0xba083b61,0xdc53,0x4865,{0x98,0x97,0x10,0x7a,0x02,0x96,0x79,0xee}};
extern "C" const GUID __declspec(selectany) CLSID_CQGInstrumentSubscriptionRequest =
    {0x19a379ab,0x5dc3,0x4cec,{0xbb,0xa5,0x81,0xc0,0x25,0xbb,0x91,0x42}};
extern "C" const GUID __declspec(selectany) CLSID_CQGSession =
    {0xf0a46526,0xa177,0x43c4,{0xbf,0x65,0x44,0x9d,0x01,0x72,0xec,0x80}};
extern "C" const GUID __declspec(selectany) CLSID_CQGSessions =
    {0x1eb2ac76,0x75bd,0x41a5,{0xaa,0x58,0xc3,0x35,0x85,0x9a,0x11,0x2e}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTrade =
    {0x68c2bd74,0x5ceb,0x4815,{0xbc,0x40,0x66,0x2e,0xa2,0xf8,0xfd,0xe0}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTrades =
    {0x8f37a0a3,0x4e44,0x44f7,{0xa5,0x5f,0x40,0xbc,0x02,0x29,0x55,0xfd}};
extern "C" const GUID __declspec(selectany) CLSID_CQGAlgorithmicOrderDefinition =
    {0x905ce542,0xd44c,0x47dd,{0x89,0xaa,0x69,0xe3,0xce,0xc9,0x1e,0x2f}};
extern "C" const GUID __declspec(selectany) CLSID_CQGAlgorithmicOrderDefinitions =
    {0x4247be9f,0xa23d,0x4f28,{0xba,0xf4,0x3c,0xbb,0x42,0xbd,0xb8,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_CQGAlgorithmicOrderParameters =
    {0x16c4ee90,0x2976,0x4e85,{0x92,0xc8,0xbb,0x8a,0x59,0x6e,0xc1,0xc4}};
extern "C" const GUID __declspec(selectany) CLSID_CQGAlgorithmicOrderProperty =
    {0xbfa1261e,0x0955,0x4206,{0x98,0x20,0x97,0x6e,0xab,0x90,0x65,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_CQGAlgorithmicOrderProperties =
    {0x6036afa0,0xec13,0x47bd,{0x99,0x48,0xa2,0x87,0xb5,0x57,0x37,0xe6}};
extern "C" const GUID __declspec(selectany) CLSID_CQGIntegerCollection =
    {0xf182a728,0x05bf,0x4c93,{0xb5,0xea,0x72,0x8b,0x5c,0x3d,0x17,0x8f}};
extern "C" const GUID __declspec(selectany) CLSID_CQGStrategyDefinition =
    {0xb73db8b8,0xeb49,0x42f3,{0x9e,0xf3,0xf2,0xa6,0xed,0x3c,0x91,0x5e}};
extern "C" const GUID __declspec(selectany) CLSID_CQGStrategyDefinitions =
    {0xfc09259a,0x1209,0x4357,{0x93,0xcb,0xf1,0xec,0x12,0xb2,0x16,0x7e}};
extern "C" const GUID __declspec(selectany) CLSID_CQGExecutionPattern =
    {0x48a5cf74,0xba01,0x4ceb,{0xb5,0x30,0x0e,0xa6,0xee,0x5d,0x93,0x85}};
extern "C" const GUID __declspec(selectany) CLSID_CQGOrderChain =
    {0xdb733f5c,0xde9e,0x40ae,{0x92,0xdd,0xdb,0xa2,0x88,0x9e,0xe0,0x12}};
extern "C" const GUID __declspec(selectany) CLSID_CQGOrderActionRequest =
    {0x05b4b0ae,0xd6e4,0x406e,{0x91,0xbb,0x53,0xc9,0x9c,0x4a,0xb0,0xbe}};
extern "C" const GUID __declspec(selectany) CLSID_CQGGWTrade =
    {0xeeaa83e8,0x13b5,0x4d5b,{0xb6,0x49,0xf9,0x65,0xe1,0xca,0xbf,0xad}};
extern "C" const GUID __declspec(selectany) CLSID_CQGGWTrades =
    {0xc70088fe,0xc3d2,0x4396,{0x9e,0xbb,0xed,0x1d,0xf1,0xb4,0xf2,0xda}};
extern "C" const GUID __declspec(selectany) CLSID_CQGFills =
    {0x9349407b,0x99c3,0x4fcd,{0xb5,0xca,0x44,0xb8,0x3c,0x95,0x58,0x49}};
extern "C" const GUID __declspec(selectany) CLSID_CQGModifiedProperty =
    {0xc97d21d9,0x8f53,0x4738,{0xaa,0x40,0xbd,0x38,0x9a,0xf2,0x9e,0x2c}};
extern "C" const GUID __declspec(selectany) CLSID_CQGModifiedProperties =
    {0x732978f6,0x82d6,0x4f7a,{0xb7,0x40,0x2b,0xb8,0xdc,0xd9,0xae,0xb5}};
extern "C" const GUID __declspec(selectany) CLSID_CQGOrderModify =
    {0xca4c3768,0x8ca5,0x4eb2,{0xac,0xc4,0xf2,0x44,0xd2,0xab,0x68,0x9f}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTransaction =
    {0x1cdd9c9f,0x6d62,0x40b3,{0xa4,0x57,0x0b,0x7d,0xfb,0xae,0xac,0x99}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTransactions =
    {0x51957a62,0xbf4b,0x4f1a,{0xa8,0xb1,0xc8,0x56,0xf5,0x02,0x4f,0xe2}};
extern "C" const GUID __declspec(selectany) CLSID_CQGStrategyLegFill =
    {0x83d203c2,0x2bc2,0x4125,{0xb4,0x75,0xf1,0x75,0xc8,0x74,0x0e,0x05}};
extern "C" const GUID __declspec(selectany) CLSID_CQGStrategyLegFills =
    {0x65bf3407,0x1177,0x44da,{0x9b,0x8b,0x4c,0xd5,0x60,0x23,0x12,0xc8}};
extern "C" const GUID __declspec(selectany) CLSID_CQGExecutionPatternParameter =
    {0x8b2f20db,0xff2f,0x4c7e,{0xb8,0x11,0x9e,0xe3,0x35,0xef,0x2f,0xfa}};
extern "C" const GUID __declspec(selectany) CLSID_CQGExecutionPatternParameters =
    {0xd1fbd6fb,0x10ec,0x4735,{0xab,0x3f,0x9c,0xe0,0xea,0x9f,0xe9,0xcb}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCustomStudyDefinition =
    {0xb6017d5d,0x589b,0x4acf,{0x83,0x11,0x04,0xb7,0xb9,0x72,0x6b,0x08}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCustomStudyDefinitions =
    {0xc461f79c,0xca7b,0x471a,{0x94,0x73,0xf0,0xce,0x98,0x0e,0xa7,0xa2}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemDefinition =
    {0x53a464a8,0x82a4,0x463e,{0x82,0xc7,0xa8,0x5a,0xb6,0xe3,0x07,0xd7}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemDefinitions =
    {0x62427e5c,0xff60,0x45e4,{0xb4,0x80,0x35,0x4d,0x9c,0x94,0x1f,0x4e}};
extern "C" const GUID __declspec(selectany) CLSID_CQGConditionDefinition =
    {0x4e2e0e6c,0xd184,0x4da9,{0xbb,0xaa,0x0c,0x46,0xe9,0x60,0x1c,0xe6}};
extern "C" const GUID __declspec(selectany) CLSID_CQGConditionDefinitions =
    {0x66153306,0x0387,0x4f93,{0xae,0xab,0xa6,0x48,0xe1,0x2f,0x9a,0x88}};
extern "C" const GUID __declspec(selectany) CLSID_CQGQFormulaDefinition =
    {0x5e17b4da,0xdce5,0x4278,{0x88,0x1b,0x6b,0x61,0x5c,0x7d,0xf8,0x78}};
extern "C" const GUID __declspec(selectany) CLSID_CQGQFormulaDefinitions =
    {0x6d732c1f,0xb849,0x4782,{0x82,0xbd,0xa7,0x99,0xed,0x01,0xb8,0xc0}};
extern "C" const GUID __declspec(selectany) CLSID_CQGParameterDefinition =
    {0x4fa8427d,0xfd1e,0x498d,{0xbb,0x90,0x80,0xa8,0x8c,0xa0,0x4d,0xc9}};
extern "C" const GUID __declspec(selectany) CLSID_CQGParameterDefinitions =
    {0xd27d0c6c,0x6616,0x414b,{0xbb,0x13,0x39,0x41,0x16,0xad,0x63,0x69}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystem =
    {0xcda7c77c,0xcf27,0x4ce3,{0xb0,0xe7,0x2f,0xc1,0x0a,0xa4,0x1f,0xab}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystems =
    {0x7b0f1454,0x9ac0,0x4e48,{0x83,0x84,0x33,0x63,0x63,0xc8,0x00,0x29}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemAddInfo =
    {0xb0943cd0,0x0ea4,0x428b,{0x8e,0x29,0xd1,0x20,0xdc,0x3a,0xb0,0x11}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemUpdateInfo =
    {0x42edc3cf,0xd066,0x4b78,{0xbc,0xe1,0xe2,0xfa,0x19,0x12,0x31,0x6c}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemInsertInfo =
    {0x096338f8,0x3946,0x4fa7,{0xbd,0xf6,0x43,0xa3,0x1d,0xf3,0x0b,0x25}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemRemoveInfo =
    {0xc1b46bef,0x8ff9,0x4e1f,{0xaf,0xa3,0xf4,0xad,0x0b,0x42,0xb7,0x1d}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemRelationAddInfo =
    {0xf5152bc4,0xa69b,0x453b,{0xbf,0x99,0xbd,0xd9,0x53,0xfa,0x6b,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemRequest =
    {0x61d68f55,0x1f91,0x4b06,{0xbe,0x01,0x00,0x09,0x25,0xd6,0xf1,0x79}};
extern "C" const GUID __declspec(selectany) CLSID_CQGChangedTradeEntry =
    {0x99724283,0xe755,0x4aa0,{0xa4,0xfc,0xe9,0x17,0x95,0xec,0x7d,0x85}};
extern "C" const GUID __declspec(selectany) CLSID_CQGChangedTradeEntries =
    {0x34b78524,0x2c42,0x470f,{0x89,0xa0,0xb9,0x9f,0x00,0xa8,0xc1,0x05}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradeEntry =
    {0x623af048,0x3a9f,0x457d,{0xae,0x41,0x99,0xdf,0x0b,0x9b,0x7e,0xc9}};
extern "C" const GUID __declspec(selectany) CLSID_CQGChangedTradeExit =
    {0x868a3138,0x0f5f,0x44aa,{0x80,0xcf,0x6f,0x12,0x1f,0x2e,0x4f,0xfd}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradeExit =
    {0xfd4d2414,0x6a94,0x4231,{0xa6,0x1c,0x25,0xd8,0x7f,0x01,0x90,0x9a}};
extern "C" const GUID __declspec(selectany) CLSID_CQGChangedTradeExits =
    {0x3b8251f2,0x84e0,0x47e0,{0x91,0xb0,0xa9,0x74,0x99,0x28,0x9e,0xea}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradeEntries =
    {0xe348a330,0x2c2a,0x4a0b,{0x8e,0x2c,0x05,0x3f,0x41,0xc3,0xb9,0x5e}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradeExits =
    {0x53d8b22b,0x57b3,0x4784,{0xa6,0x93,0x64,0xf5,0x92,0x38,0xa3,0x0e}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradeEntryDefinition =
    {0x547da7d0,0x2f66,0x4a84,{0xb1,0x4c,0x55,0x48,0xaf,0x7d,0xdc,0x8c}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemTradeDefinition =
    {0xe5c263d7,0x7b8e,0x4f57,{0xbe,0x1f,0xcb,0x05,0xd1,0x86,0xa9,0x61}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemTrade =
    {0x0518ebfe,0x9fd5,0x4091,{0xa9,0xd3,0x3c,0xeb,0x90,0x13,0xef,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradeExitDefinition =
    {0x23c8656d,0x1a39,0x4f01,{0x80,0x3d,0xad,0x43,0xea,0x4d,0xea,0x3a}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemTradesRow =
    {0x4a5269de,0xf7d8,0x41ad,{0x87,0x2a,0xc7,0x55,0x2a,0x0f,0x86,0xfd}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemTradesRows =
    {0xfbfaba84,0x5bd5,0x4335,{0x8a,0x86,0xae,0xa5,0xbb,0x88,0x76,0xf6}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemStatistics =
    {0x404df3b9,0x40d5,0x4465,{0x97,0x25,0xa9,0x71,0x8c,0xda,0xf7,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemStatisticsCollection =
    {0xf81dd195,0xd156,0x4805,{0xb0,0xef,0x98,0x77,0x06,0xa4,0x14,0x5d}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemBaseBarParameter =
    {0xeaa0149f,0x7fb1,0x4baf,{0x88,0x66,0xcb,0xf9,0x4f,0x59,0x7f,0xd7}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemBaseBarParameters =
    {0x80a27b43,0x1a67,0x4bb2,{0xb8,0x92,0xe9,0x72,0xb2,0xf1,0x38,0x2f}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemStatisticsChangeInfo =
    {0x45d2f737,0x906a,0x4a81,{0x83,0x5b,0x78,0xe8,0xe8,0xe3,0x63,0xeb}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradeExitDefinitions =
    {0x986240e6,0x2074,0x449e,{0x81,0xb0,0x65,0xc2,0x60,0x45,0x7c,0x67}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTradingSystemTradeDefinitions =
    {0x0a8b916e,0x9668,0x4df3,{0xbd,0x86,0x6a,0x79,0xe3,0xc7,0x61,0x9d}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCustomStudyRequest =
    {0xe9db1ea4,0x4ba3,0x48c0,{0xa3,0x6c,0xc0,0x4e,0x0d,0x20,0x60,0x68}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCurveDefinition =
    {0x3863c032,0x6c3e,0x462e,{0x91,0x0b,0x58,0xf3,0x80,0x8e,0x05,0xe3}};
extern "C" const GUID __declspec(selectany) CLSID_CQGCurveDefinitions =
    {0x4733c005,0xe857,0x4861,{0xbd,0xb3,0x2b,0x81,0x03,0xec,0xee,0xd5}};
extern "C" const GUID __declspec(selectany) CLSID_CQGConditionRequest =
    {0xa01628f9,0x6ba5,0x41d3,{0xbc,0x9c,0x88,0x53,0x24,0xd4,0x1b,0x96}};
extern "C" const GUID __declspec(selectany) CLSID_CQGDataSource =
    {0x60410322,0x1844,0x475f,{0x89,0x5e,0xdc,0x0b,0x14,0x7f,0x2c,0x98}};
extern "C" const GUID __declspec(selectany) CLSID_CQGDataSources =
    {0x7a52cb1d,0xb85f,0x4099,{0xaf,0xad,0x61,0x3a,0x5f,0xe5,0x12,0x22}};
extern "C" const GUID __declspec(selectany) CLSID_CQGDataSourceSymbol =
    {0x626accbe,0x62e1,0x4750,{0xa5,0x54,0x85,0x62,0xdb,0x12,0x7b,0xa9}};
extern "C" const GUID __declspec(selectany) CLSID_CQGDataSourceSymbols =
    {0x89289db8,0xd0e4,0x41ad,{0xbf,0xba,0x00,0x14,0xe1,0x4f,0xca,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_CQGSessionsCollection =
    {0x8bec8492,0x2392,0x41a3,{0x8c,0x57,0xcd,0x9a,0x6a,0x46,0x61,0x49}};
extern "C" const GUID __declspec(selectany) CLSID_CQGHistoricalSessionsRequest =
    {0x02295f22,0x224c,0x4117,{0x88,0x59,0x34,0x50,0xc0,0xef,0xca,0x11}};
extern "C" const GUID __declspec(selectany) CLSID_CQGHoliday =
    {0x4457c7a6,0x9ab6,0x4088,{0x86,0xb4,0xb3,0x57,0xb2,0xe5,0xfe,0xbc}};
extern "C" const GUID __declspec(selectany) CLSID_CQGHolidays =
    {0x3a6d25e0,0x5295,0x4d58,{0x8e,0x88,0xc8,0xd4,0x15,0x42,0x32,0xcd}};
extern "C" const GUID __declspec(selectany) CLSID_CQGAccountSummary =
    {0xb6a295c6,0xdaa4,0x4276,{0x8b,0xab,0x41,0x3d,0xe0,0x91,0x05,0x1a}};
extern "C" const GUID __declspec(selectany) CLSID_CQGAccountSummaries =
    {0x0c7aa3f2,0xeac6,0x4c20,{0x82,0xd2,0xe7,0xea,0x30,0x16,0x7c,0x8d}};
extern "C" const GUID __declspec(selectany) CLSID_CQGTicksRequest =
    {0x9a422791,0x5429,0x4432,{0x96,0x4c,0x8d,0x1f,0xbc,0xd4,0x4e,0xfd}};
extern "C" const GUID __declspec(selectany) CLSID_CQGBarsTimestamps =
    {0x6eaa2509,0xcb4f,0x480b,{0x8f,0xd9,0xdb,0xfb,0x5c,0xe9,0xf6,0xf1}};
extern "C" const GUID __declspec(selectany) CLSID_CQGExpressionOutputs =
    {0x18ce07fe,0x67ca,0x4348,{0xb4,0xa1,0x0d,0x19,0xaf,0x4d,0xaa,0xe8}};
extern "C" const GUID __declspec(selectany) CLSID_CQGExpression =
    {0x7376eed4,0x9a1c,0x4c4c,{0x81,0xfe,0x7f,0x17,0x4f,0xc4,0xfa,0xe9}};
extern "C" const GUID __declspec(selectany) CLSID_CQGExpressions =
    {0xecdc5571,0x2f6c,0x45c8,{0xa4,0x05,0xb0,0x8a,0x49,0x44,0xd2,0x0b}};
extern "C" const GUID __declspec(selectany) CLSID_CQGExpressionRequest =
    {0xec27194c,0xec5e,0x41e6,{0xa2,0x99,0x55,0x52,0xf0,0x80,0x9b,0xa3}};
extern "C" const GUID __declspec(selectany) CLSID_CQGExpressionOutputHeaders =
    {0xf7b810e2,0xf228,0x404c,{0xb7,0x13,0xa4,0xa6,0xad,0xde,0xb2,0x1e}};
extern "C" const GUID __declspec(selectany) CLSID_CQGInstrumentsGroupRequest =
    {0xc3593b21,0xebed,0x4adb,{0xb0,0x33,0x62,0x22,0xe4,0xef,0x89,0x80}};
extern "C" const GUID __declspec(selectany) CLSID_CQGInstrumentsGroups =
    {0xd510415b,0x7136,0x40cd,{0x81,0x1a,0xd6,0xba,0xea,0xbd,0xa1,0x43}};
extern "C" const GUID __declspec(selectany) CLSID_CQGManualFill =
    {0x14a98331,0xaf36,0x4d00,{0x8e,0x32,0xbd,0x26,0xf7,0x9f,0xe7,0xde}};
extern "C" const GUID __declspec(selectany) CLSID_CQGManualFills =
    {0xadff59c0,0xce82,0x4119,{0xb9,0x1e,0x6b,0x22,0x38,0xfe,0x46,0xe0}};
extern "C" const GUID __declspec(selectany) CLSID_CQGManualFillsCollection =
    {0x1de09d9a,0x2fb9,0x4b73,{0xa2,0xf4,0x6d,0x61,0xeb,0x2a,0x7f,0xdd}};
extern "C" const GUID __declspec(selectany) CLSID_CQGManualFillRequest =
    {0x950ba764,0x6a36,0x420d,{0x89,0x9b,0x79,0x83,0x36,0xa0,0xc6,0xc8}};
extern "C" const GUID __declspec(selectany) IID_ICQGInstrument =
    {0x1dfcc4c4,0x86c4,0x4a9c,{0x9c,0x3a,0x2a,0xba,0x76,0x53,0xa0,0xf9}};
extern "C" const GUID __declspec(selectany) IID_ICQGInstruments =
    {0xb56ad9a8,0x680a,0x4d30,{0x9a,0x34,0x80,0x53,0x4c,0xc0,0xef,0x3b}};
extern "C" const GUID __declspec(selectany) IID_ICQGInstrumentsGroup =
    {0xffd6bcf9,0x286d,0x4204,{0x93,0x82,0x9f,0x0f,0xec,0x45,0x27,0xa7}};
extern "C" const GUID __declspec(selectany) IID_ICQGInstrumentsGroups =
    {0x4a58d6c2,0xfbd6,0x441c,{0x81,0x08,0xb2,0x1e,0xf3,0xe9,0x9e,0xf7}};
extern "C" const GUID __declspec(selectany) IID_ICQGQuote =
    {0xa40716a6,0x5f5d,0x4bec,{0x96,0xed,0xf7,0x2d,0x2f,0x77,0xfb,0x46}};
extern "C" const GUID __declspec(selectany) IID_ICQGQuotes =
    {0x7e1318d2,0xda8e,0x4106,{0x81,0x58,0xae,0x38,0x29,0xfb,0x36,0xe6}};
extern "C" const GUID __declspec(selectany) IID_ICQGInstrumentProperty =
    {0x4d4de503,0xa9d9,0x44a6,{0xb5,0x0c,0xcc,0x43,0x5d,0x3e,0xda,0x23}};
extern "C" const GUID __declspec(selectany) IID_ICQGInstrumentProperties =
    {0xfa7441bd,0x4ee8,0x4bb2,{0x89,0xd8,0xc8,0x6a,0x2f,0x09,0x8b,0x48}};
extern "C" const GUID __declspec(selectany) IID_ICQGDOMQuotes =
    {0x756fe037,0xbdbe,0x4cd2,{0x95,0xb5,0x0e,0x41,0x32,0xe3,0x32,0xc8}};
extern "C" const GUID __declspec(selectany) IID_ICQGSession =
    {0xa8c92de2,0x8dc4,0x4859,{0x80,0x0a,0xad,0x5b,0x2b,0x6d,0x1b,0xac}};
extern "C" const GUID __declspec(selectany) IID__ICQGCELInstrumentEvents =
    {0xaf3d6f55,0x77b3,0x4468,{0x92,0x70,0x37,0x52,0x20,0x7e,0x46,0x19}};
extern "C" const GUID __declspec(selectany) IID_ICQGCEL =
    {0xc8394a08,0xeac1,0x4902,{0xaf,0xf5,0x18,0x6c,0x5e,0xa8,0x06,0x03}};
extern "C" const GUID __declspec(selectany) IID_ICQGEnvironment =
    {0xe4d0409c,0xb915,0x442c,{0x94,0x0c,0xad,0x1d,0x02,0x3b,0x82,0x6b}};
extern "C" const GUID __declspec(selectany) IID_ICQGLogger =
    {0xd1c6eb96,0x0d1b,0x454f,{0x8f,0x4e,0xe6,0xc7,0xea,0x4e,0xcf,0xfa}};
extern "C" const GUID __declspec(selectany) IID_ICQGCurrencyRate =
    {0x0f5fbd5c,0xf5e6,0x421c,{0x9e,0xbd,0x73,0x29,0x38,0x09,0x97,0x85}};
extern "C" const GUID __declspec(selectany) IID_ICQGCurrencyRates =
    {0x0b5ed36d,0xc0cf,0x42a4,{0x8b,0x92,0x8b,0xbc,0xa9,0xc9,0x7d,0xdc}};
extern "C" const GUID __declspec(selectany) IID__ICQGCELGeneralEvents =
    {0x5fafc409,0x52ef,0x4885,{0x85,0xbe,0xac,0x9d,0x07,0x2d,0x61,0xdf}};
extern "C" const GUID __declspec(selectany) IID_ICQGAccounts =
    {0xcbfa3c2a,0x3548,0x4cb6,{0xaf,0xfd,0xe1,0x84,0xf7,0xb8,0xbc,0x01}};
extern "C" const GUID __declspec(selectany) IID_ICQGAccount =
    {0xbe8133a9,0xb6e7,0x4063,{0xb8,0x4d,0x17,0x73,0x41,0xb5,0xd7,0xcd}};
extern "C" const GUID __declspec(selectany) IID_ICQGAccountSummary =
    {0x43df66ea,0xd9bf,0x4092,{0xae,0xb5,0x63,0xa2,0xbe,0x05,0x61,0x08}};
extern "C" const GUID __declspec(selectany) IID_ICQGAccountSummaries =
    {0x4c45599a,0x31a9,0x4e68,{0x80,0x6d,0x23,0xd5,0x87,0x40,0xe5,0xe9}};
extern "C" const GUID __declspec(selectany) IID_ICQGPosition =
    {0xc69174ac,0x49ed,0x4438,{0x8c,0xda,0x0b,0x24,0xfe,0x01,0x59,0x03}};
extern "C" const GUID __declspec(selectany) IID_ICQGPositions =
    {0xf73b036c,0x5c76,0x4768,{0x91,0x3a,0xd7,0xeb,0xab,0xad,0xbe,0x8d}};
extern "C" const GUID __declspec(selectany) IID_ICQGOrderActionRequest =
    {0x45391992,0x63ea,0x4251,{0xb0,0xf1,0xdc,0x7b,0x60,0x50,0x35,0x75}};
extern "C" const GUID __declspec(selectany) IID_ICQGSummariesStatement =
    {0xfe914ff5,0x433c,0x4c39,{0x86,0xf5,0xba,0xd6,0x87,0xc5,0x0f,0xee}};
extern "C" const GUID __declspec(selectany) IID_ICQGPositionsStatement =
    {0xbb2a3db5,0x95fd,0x4dff,{0x8e,0xef,0x08,0x84,0x02,0xda,0xe9,0x65}};
extern "C" const GUID __declspec(selectany) IID_ICQGOrders =
    {0xce04ff2b,0x4819,0x4097,{0x8c,0x1b,0xd5,0x70,0xb9,0xea,0x7b,0xde}};
extern "C" const GUID __declspec(selectany) IID_ICQGOrdersQuery =
    {0x01828f6e,0x4fd8,0x4156,{0x80,0xf3,0x82,0x12,0xb7,0x1e,0xf5,0x85}};
extern "C" const GUID __declspec(selectany) IID_ICQGOrder =
    {0x22a4b3f8,0xae16,0x44f0,{0x90,0x22,0x95,0x1f,0xcb,0x65,0x16,0x15}};
extern "C" const GUID __declspec(selectany) IID_ICQGOrderProperty =
    {0x0a4c05a0,0x107b,0x4a8b,{0x9e,0x34,0x44,0xed,0x9b,0x11,0x7a,0x25}};
extern "C" const GUID __declspec(selectany) IID_ICQGOrderProperties =
    {0xe6517c29,0x498d,0x4845,{0xa4,0xc4,0x5d,0xd0,0x76,0x25,0x00,0x69}};
extern "C" const GUID __declspec(selectany) IID_ICQGOrderModify =
    {0x3f4f3a72,0xb53a,0x40b1,{0x9a,0x3b,0x47,0x86,0xb1,0x58,0xf3,0xfb}};
extern "C" const GUID __declspec(selectany) IID_ICQGStrategyLegFill =
    {0x1a6d1420,0xbe42,0x410e,{0x81,0x05,0x2b,0xf3,0x26,0xde,0xb0,0xb8}};
extern "C" const GUID __declspec(selectany) IID_ICQGStrategyLegFills =
    {0xc33b2433,0xecd1,0x410b,{0x82,0xcc,0xb3,0xe7,0xd4,0xdf,0x78,0xa1}};
extern "C" const GUID __declspec(selectany) IID_ICQGOrderChain =
    {0x7a55585b,0x9d0a,0x4a53,{0x9c,0xb6,0xfb,0x7c,0xee,0x53,0x98,0xce}};
extern "C" const GUID __declspec(selectany) IID_ICQGFills =
    {0x8d5ab4b6,0xb950,0x4f64,{0x99,0x1c,0x2d,0x29,0x04,0xbc,0xad,0x0a}};
extern "C" const GUID __declspec(selectany) IID_ICQGFill =
    {0x9cbc745e,0x6d81,0x4117,{0x96,0xfe,0x0e,0x2c,0xd4,0xd2,0x97,0x36}};
extern "C" const GUID __declspec(selectany) IID_ICQGGWTrade =
    {0xbfe83cfe,0x32f9,0x4fdc,{0x84,0x5e,0xb4,0xcf,0xb2,0xc6,0xfa,0x5e}};
extern "C" const GUID __declspec(selectany) IID_ICQGGWTrades =
    {0xe6c9418a,0x80fd,0x482f,{0xa8,0xe6,0xc6,0x60,0xa3,0x35,0xb5,0x99}};
extern "C" const GUID __declspec(selectany) IID_ICQGTransaction =
    {0x7e1289be,0x820e,0x4d2d,{0x8b,0x75,0x50,0xa2,0x31,0x6f,0x84,0x80}};
extern "C" const GUID __declspec(selectany) IID_ICQGTransactions =
    {0xa65cfcd4,0xa281,0x47cf,{0xad,0x6e,0x39,0xdd,0x5b,0x86,0xc5,0x04}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystem =
    {0xcca000cb,0xe091,0x4340,{0xa5,0xd1,0x58,0x1f,0x53,0x2a,0x68,0xd7}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystems =
    {0xd0a441e8,0xf29b,0x43d4,{0x91,0x27,0x2f,0x8f,0x66,0x43,0x15,0x0c}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemTradesRows =
    {0x5931a70e,0x1390,0x46de,{0x81,0xcb,0x9e,0x4f,0x33,0x8a,0x98,0xc6}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemTradesRow =
    {0xf464ee0c,0xabf6,0x494d,{0x8d,0xc0,0x3b,0x9d,0x32,0x70,0xc8,0x36}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemTrade =
    {0x18cdc805,0xa726,0x483b,{0x9f,0x68,0xda,0x23,0x77,0x45,0x52,0xce}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradeEntry =
    {0x856ced98,0x8031,0x4a01,{0x9b,0xe0,0x45,0x1f,0x6f,0x27,0x75,0xd2}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradeEntries =
    {0x56870e6e,0x0747,0x4347,{0xb8,0xbc,0x0e,0xde,0xfc,0x83,0x52,0xf7}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradeExit =
    {0x320a9155,0x156e,0x4ce2,{0x8b,0x04,0xbc,0x83,0x11,0x93,0x35,0xb8}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradeExits =
    {0x92253973,0xdf60,0x4284,{0xa9,0xe2,0x62,0x34,0x61,0xc0,0x81,0x26}};
extern "C" const GUID __declspec(selectany) IID_ICQGChangedTradeEntry =
    {0x72232252,0x3fe5,0x486b,{0x9f,0x64,0x6f,0xde,0xb2,0xd4,0x39,0x03}};
extern "C" const GUID __declspec(selectany) IID_ICQGChangedTradeEntries =
    {0xb6a7d177,0x86d9,0x42a8,{0x8b,0x88,0x94,0x7f,0x20,0x8d,0x82,0x4e}};
extern "C" const GUID __declspec(selectany) IID_ICQGChangedTradeExit =
    {0x6fd2b251,0x791c,0x43ab,{0xa4,0x4b,0xb1,0x7a,0x93,0xca,0xae,0xff}};
extern "C" const GUID __declspec(selectany) IID_ICQGChangedTradeExits =
    {0x89aeaa0f,0x54fa,0x4f00,{0x83,0xa6,0xb5,0x16,0x6d,0x4b,0xc9,0x10}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemUpdateInfo =
    {0xc75397c9,0x146e,0x4d1c,{0xb1,0x13,0x08,0xa4,0x2d,0x26,0x05,0x85}};
extern "C" const GUID __declspec(selectany) IID_ICQGTradingSystemRelationAddInfo =
    {0x1079ae13,0x4ee1,0x4542,{0x9a,0xd0,0x4f,0xa2,0x32,0x92,0xa7,0x38}};
extern "C" const GUID __declspec(selectany) IID_ICQGExecutionPattern =
    {0x13a8d517,0x7bd3,0x4627,{0xab,0xb2,0x65,0xf3,0x13,0x9c,0xbe,0xa5}};
extern "C" const GUID __declspec(selectany) IID_ICQGExecutionPatternParameters =
    {0x171b015c,0xa9fa,0x4a35,{0x89,0x64,0xe3,0x28,0x06,0xc2,0x30,0x20}};
extern "C" const GUID __declspec(selectany) IID_ICQGExecutionPatternParameter =
    {0xd79963ca,0xc026,0x47f7,{0xab,0x35,0x3c,0xb8,0x9c,0x54,0x59,0x7c}};
extern "C" const GUID __declspec(selectany) IID_ICQGSessions =
    {0xef21e9b9,0xe8ff,0x4940,{0x86,0xd9,0xe6,0x8b,0x26,0x32,0x5e,0x35}};
extern "C" const GUID __declspec(selectany) IID_ICQGHolidays =
    {0x0abb2165,0xcbfc,0x4954,{0x9b,0x05,0x99,0x22,0xdd,0xea,0x5b,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICQGSessionsCollection =
    {0xe6cc5c7a,0x85ce,0x41c1,{0x8a,0xfb,0x03,0xb2,0x86,0xe8,0xe6,0x59}};

#pragma pack(pop)
